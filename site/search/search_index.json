{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to MkDocs For full documentation visit mkdocs.org . Commands mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit. Project layout mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"Home"},{"location":"#welcome-to-mkdocs","text":"For full documentation visit mkdocs.org .","title":"Welcome to MkDocs"},{"location":"#commands","text":"mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit.","title":"Commands"},{"location":"#project-layout","text":"mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"Project layout"},{"location":"about/","text":"","title":"About"},{"location":"allora/","text":"Welcome to MkDocs For full documentation visit mkdocs.org . Allora mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit.","title":"Welcome to MkDocs"},{"location":"allora/#welcome-to-mkdocs","text":"For full documentation visit mkdocs.org .","title":"Welcome to MkDocs"},{"location":"allora/#allora","text":"mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit.","title":"Allora"},{"location":"archway/","text":"Welcome to MkDocs For full documentation visit mkdocs.org . Archway mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"Welcome to MkDocs"},{"location":"archway/#welcome-to-mkdocs","text":"For full documentation visit mkdocs.org .","title":"Welcome to MkDocs"},{"location":"archway/#archway","text":"mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"Archway"},{"location":"chains/","text":"Welcome to MkDocs For full documentation visit mkdocs.org . Allora mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit. Archway mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"Chains"},{"location":"chains/#welcome-to-mkdocs","text":"For full documentation visit mkdocs.org .","title":"Welcome to MkDocs"},{"location":"chains/#allora","text":"mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit.","title":"Allora"},{"location":"chains/#archway","text":"mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"Archway"},{"location":"chains/mnemonics/","text":"mnemonic for testnet role - validator 12 words (sui default & avail controller) fiscal cave trophy need knife ceiling juice hello earth tonight wish traffic role - validator 12 words (avail stash) bean frame fire visual rhythm echo then tuition plug goddess chimney armor role - validator 24 words (cosmos default) dirt room total defense clarify dress tuition code decrease horror another benefit tongue stick industry ship enact swim ketchup double pigeon infant wish odor role - orchestrator & celestia-bridge & celestia-orchestrator elder session coral nerve spatial ritual glow local draw spring diary stable square pass oak hamster observe buyer shock worth budget outside chapter mom role - price-feeder chalk cart salon stumble solution damage false sand clay duck exercise armed police clever obvious piece domain echo laptop clarify weapon gold divide sad role - tofnd master clump radar fun hospital click alpha secret build leg layer rival sadness guess ranch tornado pair almost project tube will affair theme traffic role - relayer (ibc index0, icq index1) region number utility fence noble perfect security obey body entry amused liquid admit flame truth cabbage fatigue ramp income once hover reveal latin exist","title":"Mnemonics"},{"location":"chains/mnemonics/#mnemonic-for-testnet","text":"role - validator 12 words (sui default & avail controller) fiscal cave trophy need knife ceiling juice hello earth tonight wish traffic role - validator 12 words (avail stash) bean frame fire visual rhythm echo then tuition plug goddess chimney armor role - validator 24 words (cosmos default) dirt room total defense clarify dress tuition code decrease horror another benefit tongue stick industry ship enact swim ketchup double pigeon infant wish odor role - orchestrator & celestia-bridge & celestia-orchestrator elder session coral nerve spatial ritual glow local draw spring diary stable square pass oak hamster observe buyer shock worth budget outside chapter mom role - price-feeder chalk cart salon stumble solution damage false sand clay duck exercise armed police clever obvious piece domain echo laptop clarify weapon gold divide sad role - tofnd master clump radar fun hospital click alpha secret build leg layer rival sadness guess ranch tornado pair almost project tube will affair theme traffic role - relayer (ibc index0, icq index1) region number utility fence noble perfect security obey body entry amused liquid admit flame truth cabbage fatigue ramp income once hover reveal latin exist","title":"mnemonic for testnet"},{"location":"chains/allora/testnet/key/","text":"- address: allo1x5wgh6vwye60wv3dtshs9dmqggwfx2ldank6mk name: validator pubkey: '{\"@type\":\"/cosmos.crypto.secp256k1.PubKey\",\"key\":\"AnDGSF7VFQs9VKEceS6cWhfajxh/mmv+Mbu9bCM9BDzK\"}' type: local","title":"Key"},{"location":"chains/archway/testnet/mnemonic/","text":"role - validator 24 words (cosmos default) dirt room total defense clarify dress tuition code decrease horror another benefit tongue stick industry ship enact swim ketchup double pigeon infant wish odor","title":"Mnemonic"},{"location":"chains/artela/testnet/rehearsal/","text":"Mainnet rehearsal node: p-ovh-rbx8-node-artela-mainnet-validator-119 Account Address art173gumy2nl5x4u55h8a499cxqt6phmg46sf3lj0 Operator Address artvaloper173gumy2nl5x4u55h8a499cxqt6phmg4679ee3s Hex Address 5228551550BB50496D8CA3AB6251AAA32A97482B Signer Address artvalcons12g59292shdgyjmvv5w4ky5d25v4fwjptp0zcmu Consensus Public Key { \"@type\": \"/cosmos.crypto.ed25519.PubKey\", \"key\": \"zdJVQJDNyCvHsgI5+3ykKxPoMSubKdDGWdv56kjWTEA=\" }","title":"Index"},{"location":"chains/artela/testnet/rehearsal/key/","text":"- address: art173gumy2nl5x4u55h8a499cxqt6phmg46sf3lj0 name: validator pubkey: '{\"@type\":\"/artela.crypto.v1.ethsecp256k1.PubKey\",\"key\":\"A1sUdBPQ3+58SEVKiZKcTGm/Ji2JVPg2K9dph35NvntN\"}' type: local","title":"Key"},{"location":"chains/artela/testnet/rehearsal/mnemonic/","text":"paper able limit curtain assume harvest praise adapt stamp defy trap gadget flock cage iron tumble drum kitten ancient aisle uphold someone hollow rescue paper able limit curtain assume harvest praise adapt stamp defy trap gadget flock cage iron tumble drum kitten ancient aisle uphold someone hollow rescue paper able limit curtain assume harvest praise adapt stamp defy trap gadget flock cage iron tumble drum kitten ancient aisle uphold someone hollow rescue","title":"Mnemonic"},{"location":"chains/avail/grafana/","text":"Avail metrics Table of contents Block Height Average Block Proposal Time Average Block Construction Time Peers Connected Peers Discovered Major Syncing Num Transactions Number of Transactions in the Queue Num Blocks Import Queue Queued Blocks Number of Known Forks State Cache Total Bandwidth Usage Evaluation Grid Build Time Average Execution Time Average Time to Build Commitment Task Polling Duration Polling Rate Imbalance GRANDPA's Gossip Grandpa Precommits Total Grandpa Prevotes Total Grandpa Finality Round Total Gossip Expired Block Height substrate_block_height - best: This is the most recent block that the node considers to be the best known block. - finalised: This is the last block that has been finalised and confirmed as a permanent part of the chain. - sync_target (sync target): This is the block height target that the node is trying to reach during synchronisation. Average Block Proposal Time substrate_proposer_block_proposal_time_sum/substrate_proposer_block_proposal_time_count This metric measures the time it takes to build a block and prepare it for the proposal. Average Block Construction Time substrate_proposer_block_constructed_sum/substrate_proposer_block_constructed_count Time it takes to build blocks in the network. This metric is useful for monitoring the efficiency of the block building process. peers Connected substrate_sub_libp2p_peers_count This metric indicates the number of peers connected to the network. peers Discovered substrate_sub_libp2p_peerset_num_discovered Indicates the current number of nodes (or peers) that have been discovered and are stored in the peerset manager. Major Syncing substrate_sub_libp2p_is_major_syncing This metric indicates whether the node is performing a major synchronisation or not. In a blockchain environment, a major synchronisation can refer to an intensive process where the node catches up with the entire blockchain, downloading and verifying all blocks from the genesis or from a significant fork. Num transactions substrate_proposer_number_of_transactions This metric indicates the number of transactions included in the most recent block in the network. Number of Transactions in the Queue substrate_ready_transactions_number This metric indicates the number of transactions that are in the queue of transactions ready to be included in a block. Num blocks import queue substrate_sync_queued_blocks Number of blocks that are in the import queue on the chain. By observing this metric, node operators can determine if there is a delay in block import and take corrective action if the number of blocks in the queue increases unexpectedly. This metric provides a quick and efficient overview of the block flow within the node, ensuring that the synchronisation process remains smooth and uninterrupted. Queued Blocks substrate_sync_queued_blocks The current number of blocks that are in the import queue to be processed by the network. In the context of a blockchain, block import refers to the process of receiving, validating and adding new blocks to the main chain. This metric provides crucial information about the congestion or block import workflow on the Avail Turing Network blockchain network, allowing operators and developers to monitor the efficiency and operational status of the network. Number of Known Forks substrate_number_leaves Measures the number of forks in the chain. An increase in the number of forks may indicate consensus problems or possible attacks on the network. Maintaining a low and stable number of forks is generally a sign of a healthy network. State Cache substrate_state_cache_bytes Indicates the size of the state cache in bytes. This metric is useful for monitoring memory resource usage on network nodes. An excessively large cache size may indicate the need to adjust the cache configuration. Total Bandwidth Usage substrate_sub_libp2p_network_bytes_total This metric indicates the total bandwidth usage of the libp2p network in bytes. This information is crucial for monitoring, optimising and ensuring network performance. Evaluation Grid Build Time avail_header_extension_builder_evaluation_grid_build_time_sum/avail_header_extension_builder_evaluation_grid_build_time_count This metric measures the average time required to build the header extension evaluation grid on an avail_turing_network node. Building the evaluation grid\" refers to the creation of a data structure that organises and evaluates the information in the data block or transactions. This structure can be used for various purposes, including network validation, verification and optimisation. Average execution time avail_header_extension_builder_total_execution_time_sum/avail_header_extension_builder_total_execution_time_count This metric measures the total execution time for the construction of the header extension, the time is reported in microseconds. This metric provides a clear view of the performance of the node in terms of total execution time for the header extension construction. Average time to build commitment avail_header_extension_builder_commitment_build_time_sum/avail_header_extension_builder_commitment_build_time_count Average time to build the header extension commitment on a node in the avail_turing_network network. This metric provides a clear view of node performance in terms of building header extension commitment, helping to maintain efficiency and proactively detect potential problems. Task Polling Duration substrate_tasks_polling_duration Counts the total number of times the invocation of Future::poll has been started for each specific task. This helps to understand how often tasks are executed compared to the duration of their invocations. Polling Rate Imbalance rate(substrate_tasks_polling_started_total[1m]) - rate(substrate_tasks_polling_duration_count[1m]) This composite metric is useful for monitoring system performance and efficiency, helping to identify processing problems and optimise the execution of tasks on the network. Calculates the difference between the start rate and the completion rate of Future::poll invocations. -A positive value indicates that more poll invocations are being started than are being completed in the last minute. -A negative value indicates that more poll invocations are being completed than are being started in the last minute. -A value close to zero suggests that the number of initiated and completed invocations is balanced. GRANDPA's gossip substrate_finality_grandpa_communication_gossip_validator_messages Information on the number of messages validated by the gossip validator of the GRANDPA (GHOST-based Recursive ANcestor Deriving Prefix Agreement) completion mechanism. ES Informaci\u00f3n sobre el n\u00famero de mensajes validados por el validador de gossip del mecanismo de finalizaci\u00f3n GRANDPA (GHOST-based Recursive ANcestor Deriving Prefix Agreement) Grandpa Precommits Total substrate_finality_grandpa_precommits_total The metric provides information on the total number of precommits made locally by the GRANDPA (GHOST-based Recursive ANcestor Deriving Prefix Agreement) completion mechanism in the chain. Grandpa Prevotes Total substrate_finality_grandpa_prevotes_total Information on the total number of prevotes made locally by the GRANDPA (GHOST-based Recursive ANcestor Deriving Prefix Agreement) completion mechanism in the chain. This metric is useful to monitor the activity and performance of the GRANDPA consensus process in the avail_turing_network chain, providing an indication of the total number of prevotes that have been issued by the validators. Grandpa Finality Round substrate_finality_grandpa_round Indicates the highest number of completed rounds using the GRANDPA (GHOST-based Recursive ANcestor Deriving Prefix Agreement) completion protocol. This value can be used to monitor the progress of the network in terms of block completion. An increasing value indicates that the network is progressing and completing more rounds. Total Gossip Expired substrate_network_gossip_expired_messages_total Total number of messages that have expired and have not been processed by the gossip service. A high number of expired messages may indicate network overload or problems in message processing, where messages are not handled before they expire.","title":"Avail metrics"},{"location":"chains/avail/grafana/#avail-metrics","text":"","title":"Avail metrics"},{"location":"chains/avail/grafana/#table-of-contents","text":"Block Height Average Block Proposal Time Average Block Construction Time Peers Connected Peers Discovered Major Syncing Num Transactions Number of Transactions in the Queue Num Blocks Import Queue Queued Blocks Number of Known Forks State Cache Total Bandwidth Usage Evaluation Grid Build Time Average Execution Time Average Time to Build Commitment Task Polling Duration Polling Rate Imbalance GRANDPA's Gossip Grandpa Precommits Total Grandpa Prevotes Total Grandpa Finality Round Total Gossip Expired","title":"Table of contents"},{"location":"chains/avail/grafana/#block-height","text":"substrate_block_height - best: This is the most recent block that the node considers to be the best known block. - finalised: This is the last block that has been finalised and confirmed as a permanent part of the chain. - sync_target (sync target): This is the block height target that the node is trying to reach during synchronisation.","title":"Block Height"},{"location":"chains/avail/grafana/#average-block-proposal-time","text":"substrate_proposer_block_proposal_time_sum/substrate_proposer_block_proposal_time_count This metric measures the time it takes to build a block and prepare it for the proposal.","title":"Average Block Proposal Time"},{"location":"chains/avail/grafana/#average-block-construction-time","text":"substrate_proposer_block_constructed_sum/substrate_proposer_block_constructed_count Time it takes to build blocks in the network. This metric is useful for monitoring the efficiency of the block building process.","title":"Average Block Construction Time"},{"location":"chains/avail/grafana/#peers-connected","text":"substrate_sub_libp2p_peers_count This metric indicates the number of peers connected to the network.","title":"peers Connected"},{"location":"chains/avail/grafana/#peers-discovered","text":"substrate_sub_libp2p_peerset_num_discovered Indicates the current number of nodes (or peers) that have been discovered and are stored in the peerset manager.","title":"peers Discovered"},{"location":"chains/avail/grafana/#major-syncing","text":"substrate_sub_libp2p_is_major_syncing This metric indicates whether the node is performing a major synchronisation or not. In a blockchain environment, a major synchronisation can refer to an intensive process where the node catches up with the entire blockchain, downloading and verifying all blocks from the genesis or from a significant fork.","title":"Major Syncing"},{"location":"chains/avail/grafana/#num-transactions","text":"substrate_proposer_number_of_transactions This metric indicates the number of transactions included in the most recent block in the network.","title":"Num transactions"},{"location":"chains/avail/grafana/#number-of-transactions-in-the-queue","text":"substrate_ready_transactions_number This metric indicates the number of transactions that are in the queue of transactions ready to be included in a block.","title":"Number of Transactions in the Queue"},{"location":"chains/avail/grafana/#num-blocks-import-queue","text":"substrate_sync_queued_blocks Number of blocks that are in the import queue on the chain. By observing this metric, node operators can determine if there is a delay in block import and take corrective action if the number of blocks in the queue increases unexpectedly. This metric provides a quick and efficient overview of the block flow within the node, ensuring that the synchronisation process remains smooth and uninterrupted.","title":"Num blocks import queue"},{"location":"chains/avail/grafana/#queued-blocks","text":"substrate_sync_queued_blocks The current number of blocks that are in the import queue to be processed by the network. In the context of a blockchain, block import refers to the process of receiving, validating and adding new blocks to the main chain. This metric provides crucial information about the congestion or block import workflow on the Avail Turing Network blockchain network, allowing operators and developers to monitor the efficiency and operational status of the network.","title":"Queued Blocks"},{"location":"chains/avail/grafana/#number-of-known-forks","text":"substrate_number_leaves Measures the number of forks in the chain. An increase in the number of forks may indicate consensus problems or possible attacks on the network. Maintaining a low and stable number of forks is generally a sign of a healthy network.","title":"Number of Known Forks"},{"location":"chains/avail/grafana/#state-cache","text":"substrate_state_cache_bytes Indicates the size of the state cache in bytes. This metric is useful for monitoring memory resource usage on network nodes. An excessively large cache size may indicate the need to adjust the cache configuration.","title":"State Cache"},{"location":"chains/avail/grafana/#total-bandwidth-usage","text":"substrate_sub_libp2p_network_bytes_total This metric indicates the total bandwidth usage of the libp2p network in bytes. This information is crucial for monitoring, optimising and ensuring network performance.","title":"Total Bandwidth Usage"},{"location":"chains/avail/grafana/#evaluation-grid-build-time","text":"avail_header_extension_builder_evaluation_grid_build_time_sum/avail_header_extension_builder_evaluation_grid_build_time_count This metric measures the average time required to build the header extension evaluation grid on an avail_turing_network node. Building the evaluation grid\" refers to the creation of a data structure that organises and evaluates the information in the data block or transactions. This structure can be used for various purposes, including network validation, verification and optimisation.","title":"Evaluation Grid Build Time"},{"location":"chains/avail/grafana/#average-execution-time","text":"avail_header_extension_builder_total_execution_time_sum/avail_header_extension_builder_total_execution_time_count This metric measures the total execution time for the construction of the header extension, the time is reported in microseconds. This metric provides a clear view of the performance of the node in terms of total execution time for the header extension construction.","title":"Average execution time"},{"location":"chains/avail/grafana/#average-time-to-build-commitment","text":"avail_header_extension_builder_commitment_build_time_sum/avail_header_extension_builder_commitment_build_time_count Average time to build the header extension commitment on a node in the avail_turing_network network. This metric provides a clear view of node performance in terms of building header extension commitment, helping to maintain efficiency and proactively detect potential problems.","title":"Average time to build commitment"},{"location":"chains/avail/grafana/#task-polling-duration","text":"substrate_tasks_polling_duration Counts the total number of times the invocation of Future::poll has been started for each specific task. This helps to understand how often tasks are executed compared to the duration of their invocations.","title":"Task Polling Duration"},{"location":"chains/avail/grafana/#polling-rate-imbalance","text":"rate(substrate_tasks_polling_started_total[1m]) - rate(substrate_tasks_polling_duration_count[1m]) This composite metric is useful for monitoring system performance and efficiency, helping to identify processing problems and optimise the execution of tasks on the network. Calculates the difference between the start rate and the completion rate of Future::poll invocations. -A positive value indicates that more poll invocations are being started than are being completed in the last minute. -A negative value indicates that more poll invocations are being completed than are being started in the last minute. -A value close to zero suggests that the number of initiated and completed invocations is balanced.","title":"Polling Rate Imbalance"},{"location":"chains/avail/grafana/#grandpas-gossip","text":"substrate_finality_grandpa_communication_gossip_validator_messages Information on the number of messages validated by the gossip validator of the GRANDPA (GHOST-based Recursive ANcestor Deriving Prefix Agreement) completion mechanism. ES Informaci\u00f3n sobre el n\u00famero de mensajes validados por el validador de gossip del mecanismo de finalizaci\u00f3n GRANDPA (GHOST-based Recursive ANcestor Deriving Prefix Agreement)","title":"GRANDPA's gossip"},{"location":"chains/avail/grafana/#grandpa-precommits-total","text":"substrate_finality_grandpa_precommits_total The metric provides information on the total number of precommits made locally by the GRANDPA (GHOST-based Recursive ANcestor Deriving Prefix Agreement) completion mechanism in the chain.","title":"Grandpa Precommits Total"},{"location":"chains/avail/grafana/#grandpa-prevotes-total","text":"substrate_finality_grandpa_prevotes_total Information on the total number of prevotes made locally by the GRANDPA (GHOST-based Recursive ANcestor Deriving Prefix Agreement) completion mechanism in the chain. This metric is useful to monitor the activity and performance of the GRANDPA consensus process in the avail_turing_network chain, providing an indication of the total number of prevotes that have been issued by the validators.","title":"Grandpa Prevotes Total"},{"location":"chains/avail/grafana/#grandpa-finality-round","text":"substrate_finality_grandpa_round Indicates the highest number of completed rounds using the GRANDPA (GHOST-based Recursive ANcestor Deriving Prefix Agreement) completion protocol. This value can be used to monitor the progress of the network in terms of block completion. An increasing value indicates that the network is progressing and completing more rounds.","title":"Grandpa Finality Round"},{"location":"chains/avail/grafana/#total-gossip-expired","text":"substrate_network_gossip_expired_messages_total Total number of messages that have expired and have not been processed by the gossip service. A high number of expired messages may indicate network overload or problems in message processing, where messages are not handled before they expire.","title":"Total Gossip Expired"},{"location":"chains/avail/testnet/mnemonic/","text":"role - validator 12 words bean frame fire visual rhythm echo then tuition plug goddess chimney armor","title":"Mnemonic"},{"location":"chains/axelar/testnet/mnemonic/","text":"role - validator 24 words (cosmos default) dirt room total defense clarify dress tuition code decrease horror another benefit tongue stick industry ship enact swim ketchup double pigeon infant wish odor role - tofnd 24 words master clump radar fun hospital click alpha secret build leg layer rival sadness guess ranch tornado pair almost project tube will affair theme traffic","title":"Mnemonic"},{"location":"chains/axelar/testnet/amplifier-verifier/","text":"To build the ampd from source: cd ~/axelar-amplifier && cargo build --release --locked","title":"Index"},{"location":"chains/axelar/testnet/amplifier-verifier/notes/","text":"Axelar Amplifier Research intro \uc77c\ub2e8 amplifier\ub294 interchain message\ub97c \uc704\ud55c \ub77c\uc6b0\ud130 \ud234\uc784. \ub77c\uc6b0\ud305\uc740 \ud604\uc7ac 2\uac00\uc9c0 \uc815\ub3c4 \uc9c0\uc6d0\ud558\ub294 \uac83 \uac19\uc74c. \uc77c\ub2e8 \uc774\uc640 \uac19\uc740 interchain\uac04\uc758 message\ub97c \uc804\uc1a1\ud574\uc8fc\ub294 \ud234 \u3134\uc744 \ub9cc\ub4dc\ub824\uace0 \ud558\ub294\ub370 amplifier\ub294 \uadf8 \uc11c\ube44\uc2a4\ub4e4 \uc911 \ud558\ub098\ub77c\uace0 \uc0dd\uac01\ud558\uba74 \ub428. \ub9cc\uc57d amplifier2\ub77c\ub294 \uc11c\ube44\uc2a4\uac00 \ub610 \ub7f0\uce6d\uc774 \ub41c\ub2e4\uba74 \uc6b0\ub9ac\ub294 amplifier2 \uc11c\ube44\uc2a4\uc5d0 \ub300\ud574\uc11c\ub3c4 verifier\ub864\uc744 \ud560\uc9c0 \ub9d0\uc9c0 \uacb0\uc815\ud574\uc57c\ud568. # ref; https://docs.axelar.dev/dev/intro/ Call the contract method on the source chain: 1. callContract() to send messages without tokens, or 2. callContractWithToken() to send messages along with ERC-20 tokens. verifier role amplifier verifier\ub780 \ub77c\uc6b0\ud305 \ud558\ub294 \uacfc\uc815\uc5d0\uc11c \ud2b9\uc815 \uba54\uc138\uc9c0\uac00 \uc81c\ub300\ub85c confirm\uc774 \ub0ac\ub294\uc9c0\ub294 \ud310\ubcc4\ud558\uace0, axelar \uccb4\uc778 \ub0b4 \ud2b9\uc815 \uc8fc\uc18c\uc5d0\uc11c \ud574\ub2f9 tx\uac00 \uc720\ud6a8\ud558\ub2e4\uace0 polling\uc744 start! \ud558\uba74 \ud574\ub2f9 poll\uc5d0 success\ub418\uc5c8\ub2e4\uace0 vote\ub97c \ud558\ub294 \uc5ed\ud560\uacfc \ub098\uc911\uc5d0 destination \uccb4\uc778\uc5d0 tx submit\uc744 \ud558\ub294\ub370 \uc788\uc5b4\uc11c\uc758 multi sig signing\uc744 \ud558\ub294 \uc5ed\ud560 2\uac00\uc9c0 \uc5ed\ud560\uc744 \uae30\ubcf8\uc801\uc73c\ub85c \ud558\uac8c \ub428. \u2192 https://docs.axelar.dev/dev/amplifier/introduction/ amplifier service contracts amplifier\uc5d0 \uad00\ub828\ub41c \ucee8\ud2b8\ub799\ud2b8\ub294 \ubb50\uac00 \ub9ce\uc740\ub370 \uc77c\ub2e8 \uc544\ub798 \uc815\ub3c4\ub97c \uc774\ud574\ud558\uba74 \ub428. \uac01 \ucee8\ud2b8\ub799\ud2b8\ub294 config.json\uc73c\ub85c public\ub808\ud3ec\uc5d0 \uc62c\ub77c\uac10. \u2192 https://github.com/axelarnetwork/axelar-contract-deployments/blob/main/axelar-chains-config/info/testnet.json gateway \u2192 polling \uc744 init \ud574\uc8fc\ub294 contract service-registry \u2192 verifier deposit & slash & chain registry voting-verifier \u2192 vote on the poll & end poll & rewards send to rewards vault(reward contract) rewards \u2192 reward distribution multisig -> destination\uc5d0 tx\ub97c relay\ud558\uae30 \uc704\ud55c verifier\ub4e4\uc758 multisig signing amplifier verifier vote process \uc77c\ub2e8 \ud574\ub2f9 amplifier verifier\uac00 \ub418\uae30 \uc704\ud574\uc11c\ub294 bond\ub97c \ud574\uc57c\ud568.(create-validator tx\ub791 \uc720\uc0ac\ud558\ub2e4\uace0 \ubcf4\uba74 \ub428) vefifier address \u2192 call \u2192 service-registry contarct\uc5d0 verifier\ub85c \ub4f1\ub85d\ud558\ub294 \uacfc\uc815\uc784. \uc544\ub798\ub294 \uc6b0\ub9ac \ud14c\uc2a4\ud2b8\ub137 verifier \uc5d0 \ub300\ud55c \uc608\uc2dc\uc784. ampd verifier-address 2024-08-26T09:57:07.768537Z INFO ampd: found config file /data/node/.axelard/ampd/config.toml 2024-08-26T09:57:07.770727Z INFO ampd: verifier address: axelar14eh260ptse8qsk80ztmeyua9qklhccyv62h9yw ampd bond-verifier amplifier 100000000000 uaxl 2024-09-02T05:17:36.255899Z INFO ampd: found config file /data/node/.axelard/ampd/config.toml 2024-09-02T05:17:36.278372Z INFO ampd::broadcaster: broadcasted transaction tx_hash=\"E4E68F8F54EE4A942825A4AFBDC14EBAB71D673E19910953F090696EBFB86277\" 2024-09-02T05:17:41.286598Z INFO ampd::broadcaster: confirmed transaction tx_hash=\"E4E68F8F54EE4A942825A4AFBDC14EBAB71D673E19910953F090696EBFB86277\" 2024-09-02T05:17:41.286621Z INFO ampd: successfully broadcast bond verifier transaction, tx hash: E4E68F8F54EE4A942825A4AFBDC14EBAB71D673E19910953F090696EBFB86277 ampd register-public-key ecdsa 2024-09-02T05:18:05.191306Z INFO ampd: found config file /data/node/.axelard/ampd/config.toml 2024-09-02T05:18:05.234484Z INFO ampd::commands::register_public_key: keygen successful key_id=\"axelar14a4ar5jh7ue4wg28jwsspf23r8k68j7g5d6d3fsttrhp42ajn4xq6zayy5\" 2024-09-02T05:18:05.247122Z INFO ampd::broadcaster: broadcasted transaction tx_hash=\"773E3A1057A0783C86FBB33747E8059995CAA5B4331E5310EEC8B42967EDAA99\" 2024-09-02T05:18:09.252800Z INFO ampd::broadcaster: confirmed transaction tx_hash=\"773E3A1057A0783C86FBB33747E8059995CAA5B4331E5310EEC8B42967EDAA99\" 2024-09-02T05:18:09.252827Z INFO ampd: successfully broadcast register public key transaction, tx hash: 773E3A1057A0783C86FBB33747E8059995CAA5B4331E5310EEC8B42967EDAA99 \u2192 https://www.mintscan.io/axelar-testnet/tx/E4E68F8F54EE4A942825A4AFBDC14EBAB71D673E19910953F090696EBFB86277?sector=logs \"ServiceRegistry\": { \"governanceAccount\": \"axelar10d07y265gmmuvt4z0w9aw880jnsr700j7v9daj\", \"storeCodeProposalId\": \"102\", \"storeCodeProposalCodeHash\": \"aa762ada72f295c0890c7beca089b13498b95d04f59262cea4bdf64b07d9edc7\", \"codeId\": 7, \"lastUploadedCodeId\": 7, \"address\": \"axelar1rpj2jjrv3vpugx9ake9kgk3s2kgwt0y60wtkmcgfml5m3et0mrls6nct9m\", \"executeProposalId\": \"112\", \"flow\": { \"executeProposalId\": \"149\" } }, \uadf8 \ub2e4\uc74c \uc774\uc81c polling\uc774 \ubc1c\uc0dd\ud558\ub294 \uacbd\uc6b0\ub294 \ud2b9\uc815 sender\uac00 evm polling\uc744 start! \ud574\uc57c\ud568. (\ud604\uc7ac\ub85c\uc11c\ub294 \ud2b9\uc815 sender\uac00 \ub204\uad6c\uc778\uc9c0\ub294 \uc815\ud655\ud788 \ubaa8\ub974\uaca0\uc9c0\ub9cc governance \uc8fc\uc18c\uc774\ub358\uac00 \ud560 \uac83\uc73c\ub85c \ucd94\uc815 \uc911) governaner -> gateway contract call -> verify_message method \ud638\ucd9c -> tx sample: https://www.mintscan.io/axelar-testnet/tx/6AC1B5EB9DB2ECD3A18F377D3AD438CEBAC87127566FC334C243B196FE688662?height=16095552 gateway \ucee8\ud2b8\ub799\ud2b8\ub294 \ub0b4\ubd80\uc801\uc73c\ub85c \ub2e4\uc2dc vote_verifier contract\ub97c \ud638\ucd9c\ud574\uc11c \ucee8\ud2b8\ub799\ud2b8 \ub0b4\uc5d0 active\ud55c poll\uc744 \ub4f1\ub85d\ud568. verify_message call -> vote_verifier contract call -> poll_start!(poll register) tx: https://www.mintscan.io/axelar-testnet/tx/6AC1B5EB9DB2ECD3A18F377D3AD438CEBAC87127566FC334C243B196FE688662?sector=message Gateway : axelar1xgr3j2wuc9ut7yjz4nr677scmzd4z6lh3srnpmdh0nyqzcfka3rqe2nsmq VoteVerifier : axelar1ce9rcvw8htpwukc048z9kqmyk5zz52d5a7zqn9xlq2pg0mxul9mqxlx2cq \uc774\uc81c \uc704\uc5d0\uc11c verifiy_message Tx \ub0b4\uc6a9\uc744 \ubcf4\uba74 \ub2e4\uc591\ud55c \uc815\ubcf4\uac00 \uc788\ub294\ub370 \uc774\uac8c hedera contract\uc5d0\uc11c gateway\ud1b5\ud574\uc11c axelar gateway\ub85c \ub4e4\uc5b4\uc628 \ucf5c\uc778 \uac83\uc744 \uc54c \uc218 \uc788\uc74c. https://hashscan.io/testnet/transaction/1730824724.339359906 tx_hash: 0x8c6cc184b3e1e6eee39b73ab8e410e6cd2f8c73cd723fb398b728658565f4eb6 hedera source address \u2192 hedera gateway address \u2192 axelar gateway address -> amplifier vote_verifier contract \uc5ec\uae30\uc11c gateway\uac00 vote_verifier\ub97c \ucf5c\ud560 \uc218 \uc788\ub294 \uc774\uc720\ub294 \uc544\ub798\uc640 \uac19\uc774 contract config\uc5d0 \ub4f1\ub85d\ub418\uc5b4\uc788\uc74c. CONTRACT=axelar1xgr3j2wuc9ut7yjz4nr677scmzd4z6lh3srnpmdh0nyqzcfka3rqe2nsmq axelard q wasm contract-history $CONTRACT --node http://localhost:55302 -o json | jq . { \"entries\": [ { \"operation\": \"CONTRACT_CODE_HISTORY_OPERATION_TYPE_INIT\", \"code_id\": \"11\", \"updated\": { \"block_height\": \"15280559\", \"tx_index\": \"0\" }, \"msg\": { \"router_address\": \"axelar1d9atnamjjhtc46zmzyc202llqs0rhtxnphs6mkjurekath3mkgtq7hsk93\", \"verifier_address\": \"axelar1ce9rcvw8htpwukc048z9kqmyk5zz52d5a7zqn9xlq2pg0mxul9mqxlx2cq\" } } ], \"pagination\": { \"next_key\": null, \"total\": \"0\" } } poll\uc774 \uc628\uccb4\uc778\uc5d0 \ub4f1\ub85d\uc774 \ub418\uc5c8\uc73c\ub2c8, \uc774\uc81c amplifier verifier\ub4e4\uc740 \ud574\ub2f9 Poll\uc5d0 \ub300\ud574\uc11c \ucc2c\uc131, \ubc18\ub300. \ud22c\ud45c\ub97c \ud568. \uc5ec\uae30\uc11c \ubc18\ub300\ub780 \uc5f0\uacb0\ub41c relayer node\uc5d0\uc11c \ud574\ub2f9 tx\ub294 \ucc3e\uc9c0 \ubabb\ud55c \uac83\uc744 \uc758\ubbf8, \ub9cc\uc57d \uc544\uc608 ampd\uac00 \ud22c\ud45c\ud558\uc9c0 \uc54a\uc558\ub2e4\uba74 unsubmitted\ub85c \ucc98\ub9ac #[cw_serde] #[derive(Eq, Hash, Ord, PartialOrd, EnumIter, EnumString, AsRefStr, Valuable)] pub enum Vote { SucceededOnChain, // the txn was included on chain, and achieved the intended result FailedOnChain, // the txn was included on chain, but failed to achieve the intended result NotFound, // the txn could not be found on chain in any blocks at the time of voting } CONTRACT=axelar1ce9rcvw8htpwukc048z9kqmyk5zz52d5a7zqn9xlq2pg0mxul9mqxlx2cq QUERY='{\"poll\":{\"poll_id\":\"853\"}}' axelard query wasm contract-state smart $CONTRACT $QUERY \\ --node http://localhost:55302 -o json | jq . { \"data\": { \"poll\": { \"poll_id\": \"853\", \"quorum\": \"26\", \"expires_at\": 16095562, \"poll_size\": 1, \"tallies\": [ { \"FailedOnChain\": \"0\", \"NotFound\": \"2\", \"SucceededOnChain\": \"40\" } ], \"finished\": true, \"participation\": { \"axelar12nyeyah0j5ypfywgdd90046jgfl32tycrhlpg6\": { \"weight\": \"1\", \"voted\": true }, \"axelar12umz2ds9gvtnkkmcwhukl7lm5asxjc9533dkj8\": { \"weight\": \"1\", \"voted\": true }, \"axelar12uqmh4qkax6ct0dr67c0ffurplwhrv7h5t9x42\": { \"weight\": \"1\", \"voted\": true }, \"axelar13vewqf8exnav577qfdxpf60707yyazsq2hncmx\": { \"weight\": \"1\", \"voted\": true }, \"axelar14cteftrsu7pgx60ey4grpn66kk9def5t55asqa\": { \"weight\": \"1\", \"voted\": true }, \"axelar14eh260ptse8qsk80ztmeyua9qklhccyv62h9yw\": { \"weight\": \"1\", \"voted\": true }, \"axelar15305m5uwgxt92x2k5dj4ttsx0t8kh5pmfekxth\": { \"weight\": \"1\", \"voted\": true }, \"axelar16dxsfhyegy40e4eqfxee5jw5gyy2xxtcw4t2na\": { \"weight\": \"1\", \"voted\": true }, \"axelar16rfnanrns0u2cxm06ugvxej438y0gktzv9hwcl\": { \"weight\": \"1\", \"voted\": true }, \"axelar16yf68y6g0pc64xvrn8e29mlnrarvpn74krgehp\": { \"weight\": \"1\", \"voted\": true }, \"axelar17jjksd07c9934svqyjdkqzpmdqkjkadj5ulcpd\": { \"weight\": \"1\", \"voted\": true }, \"axelar189twvmrax309e7hvke0zjgn5p55avy5ukafhc2\": { \"weight\": \"1\", \"voted\": true }, \"axelar19cgyqs2welwaff6fyfyjdnnmv3lkxt9ntmg62s\": { \"weight\": \"1\", \"voted\": true }, \"axelar19l32d5nhhwnwemzfd788j4ld095a3n6k05mmry\": { \"weight\": \"1\", \"voted\": false }, \"axelar19xvkln5jypz8k0x9sq66mmzawkshqxfvl9h5y8\": { \"weight\": \"1\", \"voted\": true }, \"axelar1a3qp4377kjfl3znelj6wayels428uapddpe4mp\": { \"weight\": \"1\", \"voted\": true }, \"axelar1aeylef34xqhrxn4mf8hpl94cya0rww9ld3ymep\": { \"weight\": \"1\", \"voted\": true }, \"axelar1afj2uhx69pjclgcspfufj9dq9x87zfv0avf6we\": { \"weight\": \"1\", \"voted\": true }, \"axelar1avayd50dt4mneu6s2s03yuwlc0swwmmzvf7f9f\": { \"weight\": \"1\", \"voted\": true }, \"axelar1awmhk4xhzh3224ydnrwxthpkz00tf7d5hw5kzk\": { \"weight\": \"1\", \"voted\": true }, \"axelar1c07q2f6v8znle7eu08hu4fvtssxxv44tu7h3fm\": { \"weight\": \"1\", \"voted\": true }, \"axelar1dz6u2vy7gjyexy5zraqqqzkf4wffm75tsqn50z\": { \"weight\": \"1\", \"voted\": true }, \"axelar1ed7zk4g6rmlph6z00p6swky65qyldxrpxw9759\": { \"weight\": \"1\", \"voted\": false }, \"axelar1ejv5td70estc7ed4avnxnqqv4tpef2zafdkgms\": { \"weight\": \"1\", \"voted\": false }, \"axelar1ezlu8mxavcz3y6psjq2tfyfdkumwf0sd66mfe0\": { \"weight\": \"1\", \"voted\": true }, \"axelar1gc40fw08ee4vamhvtgcszladfsrd8tyhc75l3j\": { \"weight\": \"1\", \"voted\": false }, \"axelar1ha0xrd2ex6p4zj0962tc3dx4cm0e3m5qmuq20h\": { \"weight\": \"1\", \"voted\": true }, \"axelar1j3u6kd4027wln9vnvmg449hmc3xj2m2g5uh69q\": { \"weight\": \"1\", \"voted\": false }, \"axelar1j9w5c54z5erz2awtkmztfqlues9d329x5fqps0\": { \"weight\": \"1\", \"voted\": true }, \"axelar1kamfmz2crw8eqcrvq8pj7pxj6l5rugvsd7cqke\": { \"weight\": \"1\", \"voted\": true }, \"axelar1l65q24tc9e8z4dj8wj6g7t08reztazf5ur6ux2\": { \"weight\": \"1\", \"voted\": false }, \"axelar1l9txetl2jlne8s2h2ksv83wudvd3da3dv66fpq\": { \"weight\": \"1\", \"voted\": true }, \"axelar1lg0d9rt4syalck9ux0hhmeeayq7njmjjdguxd6\": { \"weight\": \"1\", \"voted\": true }, \"axelar1lpseq7mscuag7j9yehxmgdxh6k4ehe4hgfvfgw\": { \"weight\": \"1\", \"voted\": true }, \"axelar1mcnjp5j8txr8acj2dp9v2zprwzxv3fmdy0fmsp\": { \"weight\": \"1\", \"voted\": true }, \"axelar1melmdxuzk5mzs252kvykcjw2vyrqmqnke0mdyx\": { \"weight\": \"1\", \"voted\": false }, \"axelar1mp0w0fdynzaguy909gf3ltsglnu892k555q6sm\": { \"weight\": \"1\", \"voted\": true }, \"axelar1nqtlh9xmcp9d5nyl3wc77w4gwz72a8yt3kmzkf\": { \"weight\": \"1\", \"voted\": true }, \"axelar1pcdufjvqegu5dfqr7w4ltlfjvnpf403gt5h99n\": { \"weight\": \"1\", \"voted\": true }, \"axelar1qtykdxw26wq9zz7pmeslqnznf0qyy3auddytn9\": { \"weight\": \"1\", \"voted\": true }, \"axelar1t4dpjj6p0mgwwlxzvqqwv4w3ejs4laxz7eqxuv\": { \"weight\": \"1\", \"voted\": true }, \"axelar1wkvh8zavznfcmsapdzxxuf2pntvktf8vzkknwa\": { \"weight\": \"1\", \"voted\": true }, \"axelar1wue2mm6xqk52wpynuqjlzwwux4kp3dkva5dpzw\": { \"weight\": \"1\", \"voted\": false }, \"axelar1xt9eevxhcmrx90gc06n87em5dz4nw6v3nvxs7d\": { \"weight\": \"1\", \"voted\": true }, \"axelar1y2a43qhk7clgy0aa8fuul8746mqed379kv84u6\": { \"weight\": \"1\", \"voted\": true }, \"axelar1y5dkjhyeuqmkhq42wydaxvjt8j00d86t4xnjsu\": { \"weight\": \"1\", \"voted\": true }, \"axelar1yf58f0xkgu65stqlgf99nhmqfuzc84w2qme92m\": { \"weight\": \"1\", \"voted\": true }, \"axelar1yxvh503g35quq3yacm4m8l6jurjwhqpejly30j\": { \"weight\": \"1\", \"voted\": true }, \"axelar1zsq3fhmvmauev086aryquatd3jrh2mvl7wyrga\": { \"weight\": \"1\", \"voted\": true }, \"axelar1zxsdfexpy9lehz3fh6xjnvrpe6ze4fqzn06d55\": { \"weight\": \"1\", \"voted\": true } } }, \"data\": { \"messages\": [ { \"cc_id\": { \"source_chain\": \"hedera\", \"message_id\": \"0x8c6cc184b3e1e6eee39b73ab8e410e6cd2f8c73cd723fb398b728658565f4eb6-0\" }, \"source_address\": \"0x3E77Fd1B4d4176CA9d54dB60f132FbB88BFA43CA\", \"destination_chain\": \"test-sepolia\", \"destination_address\": \"0xb0ff298C4D761D122a3efB4D6ef704F5494fA626\", \"payload_hash\": \"bc36789e7a1e281436464229828f817d6612f7b477d66591ff96a9e064bcc98a\" } ] }, \"status\": \"finished\" } } \uc774\uc81c \ud22c\ud45c\uac00 \ub9c8\ubb34\ub9ac \ub418\uc5c8\uc73c\uba74 \uc544\uae4c poll\ub97c \uc2dc\uc791\ud55c sender\uac00 \ub2e4\uc2dc end_poll\uc744 \uc2dc\uc791\ud568. CONTRACT=axelar1harq5xe68lzl2kx4e5ch4k8840cgqnry567g0fgw7vt2atcuugrqfa7j5z QUERY='{\"rewards_pool\": { \"pool_id\" : {\"chain_name\":\"hedera\", \"contract\":\"axelar1ce9rcvw8htpwukc048z9kqmyk5zz52d5a7zqn9xlq2pg0mxul9mqxlx2cq\"} } }' axelard query wasm contract-state smart $CONTRACT $QUERY \\ --node http://localhost:55302 -o json | jq . { \"data\": { \"balance\": \"100000000\", \"epoch_duration\": \"14400\", \"rewards_per_epoch\": \"10000000\", \"current_epoch_num\": \"108\", \"last_distribution_epoch\": null } } CONTRACT=axelar1harq5xe68lzl2kx4e5ch4k8840cgqnry567g0fgw7vt2atcuugrqfa7j5z QUERY='{\"verifier_participation\": { \"pool_id\" : {\"chain_name\":\"hedera\", \"contract\":\"axelar1ce9rcvw8htpwukc048z9kqmyk5zz52d5a7zqn9xlq2pg0mxul9mqxlx2cq\"}, \"epoch_num\": 100 } }' axelard query wasm contract-state smart $CONTRACT $QUERY \\ --node http://localhost:55302 -o json | jq . \uadf8\ub9ac\uace0 end_poll\uc5d0\uc11c\ub294 \ub2e4\uc2dc \ub9ac\uc6cc\ub4dc \ucee8\ud2b8\ub799\ud2b8\ub97c \ud638\ucd9c\ud558\ub294\ub370 \uc774 \uacfc\uc815\uc5d0\uc11c \ub9ac\uc6cc\ub4dc \ucee8\ud2b8\ub799\ud2b8\ub0b4\uc5d0 \ub9ac\uc6cc\ub4dc\uac00 \uc313\uc774\uac8c \ub418\uace0. \uc8fc\uae30\uc801\uc73c\ub85c \uc5d0\ud3ec\ud06c\ub2e8\uc704\ub85c \ub9ac\uc6cc\ub4dc \ucee8\ud2b8\ub799\ud2b8\uac00 \ud604\uc7ac \ud480\uc5d0\uc11c \ub9ac\uc6cc\ub4dc\ub97c \ubd84\ubc30\ud568. \ub9ac\uc6cc\ub4dc \ubd84\ubc30 \ud504\ub85c\uc138\uc2a4 \uc5ec\uae30\ub294 \uc544\uc9c1 \uae4a\uac8c \ubcf4\uc9c0 \uc54a\uc740 \uc0c1\ud0dc. CONTRACT=axelar1harq5xe68lzl2kx4e5ch4k8840cgqnry567g0fgw7vt2atcuugrqfa7j5z QUERY='{\"rewards_pool\": { \"pool_id\" : {\"chain_name\":\"hedera\", \"contract\":\"axelar1ce9rcvw8htpwukc048z9kqmyk5zz52d5a7zqn9xlq2pg0mxul9mqxlx2cq\"} } }' axelard query wasm contract-state smart $CONTRACT $QUERY \\ --node http://localhost:55302 -o json | jq . { \"data\": { \"balance\": \"100000000\", \"epoch_duration\": \"14400\", \"rewards_per_epoch\": \"10000000\", \"current_epoch_num\": \"108\", \"last_distribution_epoch\": null } } CONTRACT=axelar1harq5xe68lzl2kx4e5ch4k8840cgqnry567g0fgw7vt2atcuugrqfa7j5z QUERY='{\"verifier_participation\": { \"pool_id\" : {\"chain_name\":\"hedera\", \"contract\":\"axelar1ce9rcvw8htpwukc048z9kqmyk5zz52d5a7zqn9xlq2pg0mxul9mqxlx2cq\"}, \"epoch_num\": 100 } }' axelard query wasm contract-state smart $CONTRACT $QUERY \\ --node http://localhost:55302 -o json | jq . amplifier verifier multisig process mulitisig \ub294 \ubcc4\uac70\ub294 \uc5c6\ub294\ub370 \uc6b0\ub9ac\uac00 \ub4f1\ub85d\ud55c public-key\uac00 \uc774 \uacfc\uc815\uc5d0\uc11c \uc4f0\uc778\ub2e4\ub294 \uac83\ub9cc \uc54c\uba74 \ub428. CONTRACT=axelar14a4ar5jh7ue4wg28jwsspf23r8k68j7g5d6d3fsttrhp42ajn4xq6zayy5 QUERY='{\"public_key\": {\"verifier_address\":\"axelar14eh260ptse8qsk80ztmeyua9qklhccyv62h9yw\",\"key_type\":\"ecdsa\"} }' axelard query wasm contract-state smart $CONTRACT $QUERY \\ --node http://localhost:55302 -o json | jq . { \"data\": { \"ecdsa\": \"02f95b984a984545c5ff4b77eae5da721c7bcd0380ed941d8ec5ab1c216a4516dc\" } } amplifier verifier monitoring \ud574\uc57c\ud560 \uc810. slashing bond_deposit\ub97c \ud55c \ucee8\ud2b8\ub799\ud2b8\uac00 service-registry \ucee8\ud2b8\ub799\ud2b8\uc778\ub370 \uc5ec\uae30\uc11c verifier\ub4e4\uc5d0\uac8c jail\uc774\ub780 method\ub85c bond\ud55c deposit\uc744 \uc0ad\uac10\uc2dc\ud0ac \uc218 \uc788\uc74c. \ub2e4\ub9cc, \uac70\ubc84\ub10c\uc2a4\uc8fc\uc18c\ub85c\ub9cc \ucf5c\uc774 \ub418\ub3c4\ub85d \uc124\uacc4\ub428. \ub530\ub77c\uc11c \uc628\uccb4\uc778\uc5d0 \uc758\ud574\uc11c \ud310\ub2e8\ub418\uc5b4 \uc0ad\uac10\ub418\ub294 \ud615\uc2dd\uc774 \uc544\ub2cc \uc0c1\ud669 poll voting & signing \uc124\uacc4\uac00 \ud544\uc694\ud568","title":"Axelar Amplifier Research"},{"location":"chains/axelar/testnet/amplifier-verifier/notes/#axelar-amplifier-research","text":"","title":"Axelar Amplifier Research"},{"location":"chains/axelar/testnet/amplifier-verifier/notes/#intro","text":"\uc77c\ub2e8 amplifier\ub294 interchain message\ub97c \uc704\ud55c \ub77c\uc6b0\ud130 \ud234\uc784. \ub77c\uc6b0\ud305\uc740 \ud604\uc7ac 2\uac00\uc9c0 \uc815\ub3c4 \uc9c0\uc6d0\ud558\ub294 \uac83 \uac19\uc74c. \uc77c\ub2e8 \uc774\uc640 \uac19\uc740 interchain\uac04\uc758 message\ub97c \uc804\uc1a1\ud574\uc8fc\ub294 \ud234 \u3134\uc744 \ub9cc\ub4dc\ub824\uace0 \ud558\ub294\ub370 amplifier\ub294 \uadf8 \uc11c\ube44\uc2a4\ub4e4 \uc911 \ud558\ub098\ub77c\uace0 \uc0dd\uac01\ud558\uba74 \ub428. \ub9cc\uc57d amplifier2\ub77c\ub294 \uc11c\ube44\uc2a4\uac00 \ub610 \ub7f0\uce6d\uc774 \ub41c\ub2e4\uba74 \uc6b0\ub9ac\ub294 amplifier2 \uc11c\ube44\uc2a4\uc5d0 \ub300\ud574\uc11c\ub3c4 verifier\ub864\uc744 \ud560\uc9c0 \ub9d0\uc9c0 \uacb0\uc815\ud574\uc57c\ud568. # ref; https://docs.axelar.dev/dev/intro/ Call the contract method on the source chain: 1. callContract() to send messages without tokens, or 2. callContractWithToken() to send messages along with ERC-20 tokens.","title":"intro"},{"location":"chains/axelar/testnet/amplifier-verifier/notes/#verifier-role","text":"amplifier verifier\ub780 \ub77c\uc6b0\ud305 \ud558\ub294 \uacfc\uc815\uc5d0\uc11c \ud2b9\uc815 \uba54\uc138\uc9c0\uac00 \uc81c\ub300\ub85c confirm\uc774 \ub0ac\ub294\uc9c0\ub294 \ud310\ubcc4\ud558\uace0, axelar \uccb4\uc778 \ub0b4 \ud2b9\uc815 \uc8fc\uc18c\uc5d0\uc11c \ud574\ub2f9 tx\uac00 \uc720\ud6a8\ud558\ub2e4\uace0 polling\uc744 start! \ud558\uba74 \ud574\ub2f9 poll\uc5d0 success\ub418\uc5c8\ub2e4\uace0 vote\ub97c \ud558\ub294 \uc5ed\ud560\uacfc \ub098\uc911\uc5d0 destination \uccb4\uc778\uc5d0 tx submit\uc744 \ud558\ub294\ub370 \uc788\uc5b4\uc11c\uc758 multi sig signing\uc744 \ud558\ub294 \uc5ed\ud560 2\uac00\uc9c0 \uc5ed\ud560\uc744 \uae30\ubcf8\uc801\uc73c\ub85c \ud558\uac8c \ub428. \u2192 https://docs.axelar.dev/dev/amplifier/introduction/","title":"verifier role"},{"location":"chains/axelar/testnet/amplifier-verifier/notes/#amplifier-service-contracts","text":"amplifier\uc5d0 \uad00\ub828\ub41c \ucee8\ud2b8\ub799\ud2b8\ub294 \ubb50\uac00 \ub9ce\uc740\ub370 \uc77c\ub2e8 \uc544\ub798 \uc815\ub3c4\ub97c \uc774\ud574\ud558\uba74 \ub428. \uac01 \ucee8\ud2b8\ub799\ud2b8\ub294 config.json\uc73c\ub85c public\ub808\ud3ec\uc5d0 \uc62c\ub77c\uac10. \u2192 https://github.com/axelarnetwork/axelar-contract-deployments/blob/main/axelar-chains-config/info/testnet.json gateway \u2192 polling \uc744 init \ud574\uc8fc\ub294 contract service-registry \u2192 verifier deposit & slash & chain registry voting-verifier \u2192 vote on the poll & end poll & rewards send to rewards vault(reward contract) rewards \u2192 reward distribution multisig -> destination\uc5d0 tx\ub97c relay\ud558\uae30 \uc704\ud55c verifier\ub4e4\uc758 multisig signing","title":"amplifier service contracts"},{"location":"chains/axelar/testnet/amplifier-verifier/notes/#amplifier-verifier-vote-process","text":"\uc77c\ub2e8 \ud574\ub2f9 amplifier verifier\uac00 \ub418\uae30 \uc704\ud574\uc11c\ub294 bond\ub97c \ud574\uc57c\ud568.(create-validator tx\ub791 \uc720\uc0ac\ud558\ub2e4\uace0 \ubcf4\uba74 \ub428) vefifier address \u2192 call \u2192 service-registry contarct\uc5d0 verifier\ub85c \ub4f1\ub85d\ud558\ub294 \uacfc\uc815\uc784. \uc544\ub798\ub294 \uc6b0\ub9ac \ud14c\uc2a4\ud2b8\ub137 verifier \uc5d0 \ub300\ud55c \uc608\uc2dc\uc784. ampd verifier-address 2024-08-26T09:57:07.768537Z INFO ampd: found config file /data/node/.axelard/ampd/config.toml 2024-08-26T09:57:07.770727Z INFO ampd: verifier address: axelar14eh260ptse8qsk80ztmeyua9qklhccyv62h9yw ampd bond-verifier amplifier 100000000000 uaxl 2024-09-02T05:17:36.255899Z INFO ampd: found config file /data/node/.axelard/ampd/config.toml 2024-09-02T05:17:36.278372Z INFO ampd::broadcaster: broadcasted transaction tx_hash=\"E4E68F8F54EE4A942825A4AFBDC14EBAB71D673E19910953F090696EBFB86277\" 2024-09-02T05:17:41.286598Z INFO ampd::broadcaster: confirmed transaction tx_hash=\"E4E68F8F54EE4A942825A4AFBDC14EBAB71D673E19910953F090696EBFB86277\" 2024-09-02T05:17:41.286621Z INFO ampd: successfully broadcast bond verifier transaction, tx hash: E4E68F8F54EE4A942825A4AFBDC14EBAB71D673E19910953F090696EBFB86277 ampd register-public-key ecdsa 2024-09-02T05:18:05.191306Z INFO ampd: found config file /data/node/.axelard/ampd/config.toml 2024-09-02T05:18:05.234484Z INFO ampd::commands::register_public_key: keygen successful key_id=\"axelar14a4ar5jh7ue4wg28jwsspf23r8k68j7g5d6d3fsttrhp42ajn4xq6zayy5\" 2024-09-02T05:18:05.247122Z INFO ampd::broadcaster: broadcasted transaction tx_hash=\"773E3A1057A0783C86FBB33747E8059995CAA5B4331E5310EEC8B42967EDAA99\" 2024-09-02T05:18:09.252800Z INFO ampd::broadcaster: confirmed transaction tx_hash=\"773E3A1057A0783C86FBB33747E8059995CAA5B4331E5310EEC8B42967EDAA99\" 2024-09-02T05:18:09.252827Z INFO ampd: successfully broadcast register public key transaction, tx hash: 773E3A1057A0783C86FBB33747E8059995CAA5B4331E5310EEC8B42967EDAA99 \u2192 https://www.mintscan.io/axelar-testnet/tx/E4E68F8F54EE4A942825A4AFBDC14EBAB71D673E19910953F090696EBFB86277?sector=logs \"ServiceRegistry\": { \"governanceAccount\": \"axelar10d07y265gmmuvt4z0w9aw880jnsr700j7v9daj\", \"storeCodeProposalId\": \"102\", \"storeCodeProposalCodeHash\": \"aa762ada72f295c0890c7beca089b13498b95d04f59262cea4bdf64b07d9edc7\", \"codeId\": 7, \"lastUploadedCodeId\": 7, \"address\": \"axelar1rpj2jjrv3vpugx9ake9kgk3s2kgwt0y60wtkmcgfml5m3et0mrls6nct9m\", \"executeProposalId\": \"112\", \"flow\": { \"executeProposalId\": \"149\" } }, \uadf8 \ub2e4\uc74c \uc774\uc81c polling\uc774 \ubc1c\uc0dd\ud558\ub294 \uacbd\uc6b0\ub294 \ud2b9\uc815 sender\uac00 evm polling\uc744 start! \ud574\uc57c\ud568. (\ud604\uc7ac\ub85c\uc11c\ub294 \ud2b9\uc815 sender\uac00 \ub204\uad6c\uc778\uc9c0\ub294 \uc815\ud655\ud788 \ubaa8\ub974\uaca0\uc9c0\ub9cc governance \uc8fc\uc18c\uc774\ub358\uac00 \ud560 \uac83\uc73c\ub85c \ucd94\uc815 \uc911) governaner -> gateway contract call -> verify_message method \ud638\ucd9c -> tx sample: https://www.mintscan.io/axelar-testnet/tx/6AC1B5EB9DB2ECD3A18F377D3AD438CEBAC87127566FC334C243B196FE688662?height=16095552 gateway \ucee8\ud2b8\ub799\ud2b8\ub294 \ub0b4\ubd80\uc801\uc73c\ub85c \ub2e4\uc2dc vote_verifier contract\ub97c \ud638\ucd9c\ud574\uc11c \ucee8\ud2b8\ub799\ud2b8 \ub0b4\uc5d0 active\ud55c poll\uc744 \ub4f1\ub85d\ud568. verify_message call -> vote_verifier contract call -> poll_start!(poll register) tx: https://www.mintscan.io/axelar-testnet/tx/6AC1B5EB9DB2ECD3A18F377D3AD438CEBAC87127566FC334C243B196FE688662?sector=message Gateway : axelar1xgr3j2wuc9ut7yjz4nr677scmzd4z6lh3srnpmdh0nyqzcfka3rqe2nsmq VoteVerifier : axelar1ce9rcvw8htpwukc048z9kqmyk5zz52d5a7zqn9xlq2pg0mxul9mqxlx2cq \uc774\uc81c \uc704\uc5d0\uc11c verifiy_message Tx \ub0b4\uc6a9\uc744 \ubcf4\uba74 \ub2e4\uc591\ud55c \uc815\ubcf4\uac00 \uc788\ub294\ub370 \uc774\uac8c hedera contract\uc5d0\uc11c gateway\ud1b5\ud574\uc11c axelar gateway\ub85c \ub4e4\uc5b4\uc628 \ucf5c\uc778 \uac83\uc744 \uc54c \uc218 \uc788\uc74c. https://hashscan.io/testnet/transaction/1730824724.339359906 tx_hash: 0x8c6cc184b3e1e6eee39b73ab8e410e6cd2f8c73cd723fb398b728658565f4eb6 hedera source address \u2192 hedera gateway address \u2192 axelar gateway address -> amplifier vote_verifier contract \uc5ec\uae30\uc11c gateway\uac00 vote_verifier\ub97c \ucf5c\ud560 \uc218 \uc788\ub294 \uc774\uc720\ub294 \uc544\ub798\uc640 \uac19\uc774 contract config\uc5d0 \ub4f1\ub85d\ub418\uc5b4\uc788\uc74c. CONTRACT=axelar1xgr3j2wuc9ut7yjz4nr677scmzd4z6lh3srnpmdh0nyqzcfka3rqe2nsmq axelard q wasm contract-history $CONTRACT --node http://localhost:55302 -o json | jq . { \"entries\": [ { \"operation\": \"CONTRACT_CODE_HISTORY_OPERATION_TYPE_INIT\", \"code_id\": \"11\", \"updated\": { \"block_height\": \"15280559\", \"tx_index\": \"0\" }, \"msg\": { \"router_address\": \"axelar1d9atnamjjhtc46zmzyc202llqs0rhtxnphs6mkjurekath3mkgtq7hsk93\", \"verifier_address\": \"axelar1ce9rcvw8htpwukc048z9kqmyk5zz52d5a7zqn9xlq2pg0mxul9mqxlx2cq\" } } ], \"pagination\": { \"next_key\": null, \"total\": \"0\" } } poll\uc774 \uc628\uccb4\uc778\uc5d0 \ub4f1\ub85d\uc774 \ub418\uc5c8\uc73c\ub2c8, \uc774\uc81c amplifier verifier\ub4e4\uc740 \ud574\ub2f9 Poll\uc5d0 \ub300\ud574\uc11c \ucc2c\uc131, \ubc18\ub300. \ud22c\ud45c\ub97c \ud568. \uc5ec\uae30\uc11c \ubc18\ub300\ub780 \uc5f0\uacb0\ub41c relayer node\uc5d0\uc11c \ud574\ub2f9 tx\ub294 \ucc3e\uc9c0 \ubabb\ud55c \uac83\uc744 \uc758\ubbf8, \ub9cc\uc57d \uc544\uc608 ampd\uac00 \ud22c\ud45c\ud558\uc9c0 \uc54a\uc558\ub2e4\uba74 unsubmitted\ub85c \ucc98\ub9ac #[cw_serde] #[derive(Eq, Hash, Ord, PartialOrd, EnumIter, EnumString, AsRefStr, Valuable)] pub enum Vote { SucceededOnChain, // the txn was included on chain, and achieved the intended result FailedOnChain, // the txn was included on chain, but failed to achieve the intended result NotFound, // the txn could not be found on chain in any blocks at the time of voting } CONTRACT=axelar1ce9rcvw8htpwukc048z9kqmyk5zz52d5a7zqn9xlq2pg0mxul9mqxlx2cq QUERY='{\"poll\":{\"poll_id\":\"853\"}}' axelard query wasm contract-state smart $CONTRACT $QUERY \\ --node http://localhost:55302 -o json | jq . { \"data\": { \"poll\": { \"poll_id\": \"853\", \"quorum\": \"26\", \"expires_at\": 16095562, \"poll_size\": 1, \"tallies\": [ { \"FailedOnChain\": \"0\", \"NotFound\": \"2\", \"SucceededOnChain\": \"40\" } ], \"finished\": true, \"participation\": { \"axelar12nyeyah0j5ypfywgdd90046jgfl32tycrhlpg6\": { \"weight\": \"1\", \"voted\": true }, \"axelar12umz2ds9gvtnkkmcwhukl7lm5asxjc9533dkj8\": { \"weight\": \"1\", \"voted\": true }, \"axelar12uqmh4qkax6ct0dr67c0ffurplwhrv7h5t9x42\": { \"weight\": \"1\", \"voted\": true }, \"axelar13vewqf8exnav577qfdxpf60707yyazsq2hncmx\": { \"weight\": \"1\", \"voted\": true }, \"axelar14cteftrsu7pgx60ey4grpn66kk9def5t55asqa\": { \"weight\": \"1\", \"voted\": true }, \"axelar14eh260ptse8qsk80ztmeyua9qklhccyv62h9yw\": { \"weight\": \"1\", \"voted\": true }, \"axelar15305m5uwgxt92x2k5dj4ttsx0t8kh5pmfekxth\": { \"weight\": \"1\", \"voted\": true }, \"axelar16dxsfhyegy40e4eqfxee5jw5gyy2xxtcw4t2na\": { \"weight\": \"1\", \"voted\": true }, \"axelar16rfnanrns0u2cxm06ugvxej438y0gktzv9hwcl\": { \"weight\": \"1\", \"voted\": true }, \"axelar16yf68y6g0pc64xvrn8e29mlnrarvpn74krgehp\": { \"weight\": \"1\", \"voted\": true }, \"axelar17jjksd07c9934svqyjdkqzpmdqkjkadj5ulcpd\": { \"weight\": \"1\", \"voted\": true }, \"axelar189twvmrax309e7hvke0zjgn5p55avy5ukafhc2\": { \"weight\": \"1\", \"voted\": true }, \"axelar19cgyqs2welwaff6fyfyjdnnmv3lkxt9ntmg62s\": { \"weight\": \"1\", \"voted\": true }, \"axelar19l32d5nhhwnwemzfd788j4ld095a3n6k05mmry\": { \"weight\": \"1\", \"voted\": false }, \"axelar19xvkln5jypz8k0x9sq66mmzawkshqxfvl9h5y8\": { \"weight\": \"1\", \"voted\": true }, \"axelar1a3qp4377kjfl3znelj6wayels428uapddpe4mp\": { \"weight\": \"1\", \"voted\": true }, \"axelar1aeylef34xqhrxn4mf8hpl94cya0rww9ld3ymep\": { \"weight\": \"1\", \"voted\": true }, \"axelar1afj2uhx69pjclgcspfufj9dq9x87zfv0avf6we\": { \"weight\": \"1\", \"voted\": true }, \"axelar1avayd50dt4mneu6s2s03yuwlc0swwmmzvf7f9f\": { \"weight\": \"1\", \"voted\": true }, \"axelar1awmhk4xhzh3224ydnrwxthpkz00tf7d5hw5kzk\": { \"weight\": \"1\", \"voted\": true }, \"axelar1c07q2f6v8znle7eu08hu4fvtssxxv44tu7h3fm\": { \"weight\": \"1\", \"voted\": true }, \"axelar1dz6u2vy7gjyexy5zraqqqzkf4wffm75tsqn50z\": { \"weight\": \"1\", \"voted\": true }, \"axelar1ed7zk4g6rmlph6z00p6swky65qyldxrpxw9759\": { \"weight\": \"1\", \"voted\": false }, \"axelar1ejv5td70estc7ed4avnxnqqv4tpef2zafdkgms\": { \"weight\": \"1\", \"voted\": false }, \"axelar1ezlu8mxavcz3y6psjq2tfyfdkumwf0sd66mfe0\": { \"weight\": \"1\", \"voted\": true }, \"axelar1gc40fw08ee4vamhvtgcszladfsrd8tyhc75l3j\": { \"weight\": \"1\", \"voted\": false }, \"axelar1ha0xrd2ex6p4zj0962tc3dx4cm0e3m5qmuq20h\": { \"weight\": \"1\", \"voted\": true }, \"axelar1j3u6kd4027wln9vnvmg449hmc3xj2m2g5uh69q\": { \"weight\": \"1\", \"voted\": false }, \"axelar1j9w5c54z5erz2awtkmztfqlues9d329x5fqps0\": { \"weight\": \"1\", \"voted\": true }, \"axelar1kamfmz2crw8eqcrvq8pj7pxj6l5rugvsd7cqke\": { \"weight\": \"1\", \"voted\": true }, \"axelar1l65q24tc9e8z4dj8wj6g7t08reztazf5ur6ux2\": { \"weight\": \"1\", \"voted\": false }, \"axelar1l9txetl2jlne8s2h2ksv83wudvd3da3dv66fpq\": { \"weight\": \"1\", \"voted\": true }, \"axelar1lg0d9rt4syalck9ux0hhmeeayq7njmjjdguxd6\": { \"weight\": \"1\", \"voted\": true }, \"axelar1lpseq7mscuag7j9yehxmgdxh6k4ehe4hgfvfgw\": { \"weight\": \"1\", \"voted\": true }, \"axelar1mcnjp5j8txr8acj2dp9v2zprwzxv3fmdy0fmsp\": { \"weight\": \"1\", \"voted\": true }, \"axelar1melmdxuzk5mzs252kvykcjw2vyrqmqnke0mdyx\": { \"weight\": \"1\", \"voted\": false }, \"axelar1mp0w0fdynzaguy909gf3ltsglnu892k555q6sm\": { \"weight\": \"1\", \"voted\": true }, \"axelar1nqtlh9xmcp9d5nyl3wc77w4gwz72a8yt3kmzkf\": { \"weight\": \"1\", \"voted\": true }, \"axelar1pcdufjvqegu5dfqr7w4ltlfjvnpf403gt5h99n\": { \"weight\": \"1\", \"voted\": true }, \"axelar1qtykdxw26wq9zz7pmeslqnznf0qyy3auddytn9\": { \"weight\": \"1\", \"voted\": true }, \"axelar1t4dpjj6p0mgwwlxzvqqwv4w3ejs4laxz7eqxuv\": { \"weight\": \"1\", \"voted\": true }, \"axelar1wkvh8zavznfcmsapdzxxuf2pntvktf8vzkknwa\": { \"weight\": \"1\", \"voted\": true }, \"axelar1wue2mm6xqk52wpynuqjlzwwux4kp3dkva5dpzw\": { \"weight\": \"1\", \"voted\": false }, \"axelar1xt9eevxhcmrx90gc06n87em5dz4nw6v3nvxs7d\": { \"weight\": \"1\", \"voted\": true }, \"axelar1y2a43qhk7clgy0aa8fuul8746mqed379kv84u6\": { \"weight\": \"1\", \"voted\": true }, \"axelar1y5dkjhyeuqmkhq42wydaxvjt8j00d86t4xnjsu\": { \"weight\": \"1\", \"voted\": true }, \"axelar1yf58f0xkgu65stqlgf99nhmqfuzc84w2qme92m\": { \"weight\": \"1\", \"voted\": true }, \"axelar1yxvh503g35quq3yacm4m8l6jurjwhqpejly30j\": { \"weight\": \"1\", \"voted\": true }, \"axelar1zsq3fhmvmauev086aryquatd3jrh2mvl7wyrga\": { \"weight\": \"1\", \"voted\": true }, \"axelar1zxsdfexpy9lehz3fh6xjnvrpe6ze4fqzn06d55\": { \"weight\": \"1\", \"voted\": true } } }, \"data\": { \"messages\": [ { \"cc_id\": { \"source_chain\": \"hedera\", \"message_id\": \"0x8c6cc184b3e1e6eee39b73ab8e410e6cd2f8c73cd723fb398b728658565f4eb6-0\" }, \"source_address\": \"0x3E77Fd1B4d4176CA9d54dB60f132FbB88BFA43CA\", \"destination_chain\": \"test-sepolia\", \"destination_address\": \"0xb0ff298C4D761D122a3efB4D6ef704F5494fA626\", \"payload_hash\": \"bc36789e7a1e281436464229828f817d6612f7b477d66591ff96a9e064bcc98a\" } ] }, \"status\": \"finished\" } } \uc774\uc81c \ud22c\ud45c\uac00 \ub9c8\ubb34\ub9ac \ub418\uc5c8\uc73c\uba74 \uc544\uae4c poll\ub97c \uc2dc\uc791\ud55c sender\uac00 \ub2e4\uc2dc end_poll\uc744 \uc2dc\uc791\ud568. CONTRACT=axelar1harq5xe68lzl2kx4e5ch4k8840cgqnry567g0fgw7vt2atcuugrqfa7j5z QUERY='{\"rewards_pool\": { \"pool_id\" : {\"chain_name\":\"hedera\", \"contract\":\"axelar1ce9rcvw8htpwukc048z9kqmyk5zz52d5a7zqn9xlq2pg0mxul9mqxlx2cq\"} } }' axelard query wasm contract-state smart $CONTRACT $QUERY \\ --node http://localhost:55302 -o json | jq . { \"data\": { \"balance\": \"100000000\", \"epoch_duration\": \"14400\", \"rewards_per_epoch\": \"10000000\", \"current_epoch_num\": \"108\", \"last_distribution_epoch\": null } } CONTRACT=axelar1harq5xe68lzl2kx4e5ch4k8840cgqnry567g0fgw7vt2atcuugrqfa7j5z QUERY='{\"verifier_participation\": { \"pool_id\" : {\"chain_name\":\"hedera\", \"contract\":\"axelar1ce9rcvw8htpwukc048z9kqmyk5zz52d5a7zqn9xlq2pg0mxul9mqxlx2cq\"}, \"epoch_num\": 100 } }' axelard query wasm contract-state smart $CONTRACT $QUERY \\ --node http://localhost:55302 -o json | jq . \uadf8\ub9ac\uace0 end_poll\uc5d0\uc11c\ub294 \ub2e4\uc2dc \ub9ac\uc6cc\ub4dc \ucee8\ud2b8\ub799\ud2b8\ub97c \ud638\ucd9c\ud558\ub294\ub370 \uc774 \uacfc\uc815\uc5d0\uc11c \ub9ac\uc6cc\ub4dc \ucee8\ud2b8\ub799\ud2b8\ub0b4\uc5d0 \ub9ac\uc6cc\ub4dc\uac00 \uc313\uc774\uac8c \ub418\uace0. \uc8fc\uae30\uc801\uc73c\ub85c \uc5d0\ud3ec\ud06c\ub2e8\uc704\ub85c \ub9ac\uc6cc\ub4dc \ucee8\ud2b8\ub799\ud2b8\uac00 \ud604\uc7ac \ud480\uc5d0\uc11c \ub9ac\uc6cc\ub4dc\ub97c \ubd84\ubc30\ud568. \ub9ac\uc6cc\ub4dc \ubd84\ubc30 \ud504\ub85c\uc138\uc2a4 \uc5ec\uae30\ub294 \uc544\uc9c1 \uae4a\uac8c \ubcf4\uc9c0 \uc54a\uc740 \uc0c1\ud0dc. CONTRACT=axelar1harq5xe68lzl2kx4e5ch4k8840cgqnry567g0fgw7vt2atcuugrqfa7j5z QUERY='{\"rewards_pool\": { \"pool_id\" : {\"chain_name\":\"hedera\", \"contract\":\"axelar1ce9rcvw8htpwukc048z9kqmyk5zz52d5a7zqn9xlq2pg0mxul9mqxlx2cq\"} } }' axelard query wasm contract-state smart $CONTRACT $QUERY \\ --node http://localhost:55302 -o json | jq . { \"data\": { \"balance\": \"100000000\", \"epoch_duration\": \"14400\", \"rewards_per_epoch\": \"10000000\", \"current_epoch_num\": \"108\", \"last_distribution_epoch\": null } } CONTRACT=axelar1harq5xe68lzl2kx4e5ch4k8840cgqnry567g0fgw7vt2atcuugrqfa7j5z QUERY='{\"verifier_participation\": { \"pool_id\" : {\"chain_name\":\"hedera\", \"contract\":\"axelar1ce9rcvw8htpwukc048z9kqmyk5zz52d5a7zqn9xlq2pg0mxul9mqxlx2cq\"}, \"epoch_num\": 100 } }' axelard query wasm contract-state smart $CONTRACT $QUERY \\ --node http://localhost:55302 -o json | jq .","title":"amplifier verifier vote process"},{"location":"chains/axelar/testnet/amplifier-verifier/notes/#amplifier-verifier-multisig-process","text":"mulitisig \ub294 \ubcc4\uac70\ub294 \uc5c6\ub294\ub370 \uc6b0\ub9ac\uac00 \ub4f1\ub85d\ud55c public-key\uac00 \uc774 \uacfc\uc815\uc5d0\uc11c \uc4f0\uc778\ub2e4\ub294 \uac83\ub9cc \uc54c\uba74 \ub428. CONTRACT=axelar14a4ar5jh7ue4wg28jwsspf23r8k68j7g5d6d3fsttrhp42ajn4xq6zayy5 QUERY='{\"public_key\": {\"verifier_address\":\"axelar14eh260ptse8qsk80ztmeyua9qklhccyv62h9yw\",\"key_type\":\"ecdsa\"} }' axelard query wasm contract-state smart $CONTRACT $QUERY \\ --node http://localhost:55302 -o json | jq . { \"data\": { \"ecdsa\": \"02f95b984a984545c5ff4b77eae5da721c7bcd0380ed941d8ec5ab1c216a4516dc\" } }","title":"amplifier verifier multisig process"},{"location":"chains/axelar/testnet/amplifier-verifier/notes/#amplifier-verifier-monitoring","text":"slashing bond_deposit\ub97c \ud55c \ucee8\ud2b8\ub799\ud2b8\uac00 service-registry \ucee8\ud2b8\ub799\ud2b8\uc778\ub370 \uc5ec\uae30\uc11c verifier\ub4e4\uc5d0\uac8c jail\uc774\ub780 method\ub85c bond\ud55c deposit\uc744 \uc0ad\uac10\uc2dc\ud0ac \uc218 \uc788\uc74c. \ub2e4\ub9cc, \uac70\ubc84\ub10c\uc2a4\uc8fc\uc18c\ub85c\ub9cc \ucf5c\uc774 \ub418\ub3c4\ub85d \uc124\uacc4\ub428. \ub530\ub77c\uc11c \uc628\uccb4\uc778\uc5d0 \uc758\ud574\uc11c \ud310\ub2e8\ub418\uc5b4 \uc0ad\uac10\ub418\ub294 \ud615\uc2dd\uc774 \uc544\ub2cc \uc0c1\ud669 poll voting & signing \uc124\uacc4\uac00 \ud544\uc694\ud568","title":"amplifier verifier monitoring \ud574\uc57c\ud560 \uc810."},{"location":"chains/babylon/testnet/bbn-test-3/backup/","text":"\ud639\uc2dc \ubab0\ub77c\uc11c bbn-testnet-3 backup * node_key.json {\"priv_key\":{\"type\":\"tendermint/PrivKeyEd25519\",\"value\":\"iNzsCAvpZ1eFlkKCZyJCdifLvXP2B141OgE6PXpN26p87+jjJ1BWg2YPEyBK1Pv7Ep97IEb+QDQxxSb3nKFdsg==\"}} * priv_validator_key.json { \"address\": \"119A56D92EFC69D97BBBB92520253B96AA895996\", \"pub_key\": { \"type\": \"tendermint/PubKeyEd25519\", \"value\": \"sYUy78s+vYdnzYhIdpKhDYiipYQ1kyaJ5VIO83KVhG4=\" }, \"priv_key\": { \"type\": \"tendermint/PrivKeyEd25519\", \"value\": \"AwV4mrgDIDAn4fqN8V1lQ9yeplzOhaDSLW7eDDyvTW+xhTLvyz69h2fNiEh2kqENiKKlhDWTJonlUg7zcpWEbg==\" } } getFinalityProviderInfo.sh #!/bin/bash fpcli finality-provider-info --daemon-address 127.0.0.1:58619 --btc-pk 17d33e18ab85b33050c763a44d8757dfe4e0a3c49e12911f65e0529c3cd224b6 getListFinalityProviders.sh #!/bin/bash fpcli list-finality-providers --daemon-address 127.0.0.1:58619","title":"Backup"},{"location":"chains/babylon/testnet/bbn-test-3/bbn-testnet-3.service/","text":"[Unit] Description=Running a cosmovisor (Cosmos-SDK) as a background service ConditionPathExists=/home/babylon-testnet/go/bin/cosmovisor After=network.target [Service] Type=simple User=babylon-testnet Group=babylon-testnet ExecStart=/home/babylon-testnet/go/bin/cosmovisor run start --home /data/node/.babylond --x-crisis-skip-assert-invariants Restart=always RestartSec=3 LimitNOFILE=65535 Environment=DAEMON_NAME=babylond Environment=DAEMON_HOME=/data/node/.babylond Environment=DAEMON_ALLOW_DOWNLOAD_BINARIES=false Environment=DAEMON_RESTART_AFTER_UPGRADE=true Environment=UNSAFE_SKIP_BACKUP=true # make sure log directory exists and owned by syslog PermissionsStartOnly=true ExecStartPre=/bin/mkdir -p /var/log/cosmovisor_bbn-test-3 ExecStartPre=/bin/chown syslog:adm /var/log/cosmovisor_bbn-test-3 ExecStartPre=/bin/chmod 755 /var/log/cosmovisor_bbn-test-3 StandardOutput=syslog StandardError=syslog SyslogIdentifier=cosmovisor_bbn-test-3 [Install] WantedBy=multi-user.target","title":"Bbn testnet 3.service"},{"location":"chains/babylon/testnet/bbn-test-3/confluence/","text":"","title":"Confluence"},{"location":"chains/babylon/testnet/bbn-test-3/kering-test/%20cosmostation.info/","text":"eyJhbGciOiJQQkVTMi1IUzI1NitBMTI4S1ciLCJjcmVhdGVkIjoiMjAyNC0wMy0xMSAwNjowODo1OS45MTA0MTQyOSArMDAwMCBVVEMgbT0rNDAuNDY3MTA4MTEyIiwiZW5jIjoiQTI1NkdDTSIsInAyYyI6ODE5MiwicDJzIjoiNmNFV016elgtZ2U0X1JEcyJ9.V-0bkrA1-PR1hQkQmPdaL3Bi9ziGTi6mp-tAKSOoxCx22Cr2Hnp1Sw.Xh9i0jWEC8dN31uW.sk4etP2XQBcboJat8LapZXDWn4fIutM5U3q9u_IyR_Uu34EhSv5QS-saAo5QmQH1FcX_eDxVRXDUI9Uwp5NRzFNI9_h75j4PYjf3KJL9OEYI25dYUliKajbTJHSkZK1jYILvVJ3eRxycfJfX1zbq02SPAIxsqahq2OZCITo5e92mnsEF6EVn6kO82CMyOt06JedKX1_Mru8Wkq2gkjYARqtc5esoT_-lycHTwKncTuQ22THuSbeVjGs1EjTaXUYD-QYrFG1Stol2rQMAclpme1Fke-3DzmrdI4qpeK3JyNcGtYFhbu81FMFfjY53osJlwstS7ows8-vG4VrHK5SIBOKZf7Bzd7NVStqE2g_nEv16R6lCyfvwYzvV23Ddm_LMk9n2WUp--8VYJtDgOe-fp_Yl_VXMVMTrFJ67YGGwnWDy553If5UQltEPkUQe1F3bFMC6JYIhYq111NAFb9JM.6-08MHhwHTOJAYD9f72XyA","title":" cosmostation.info"},{"location":"chains/babylon/testnet/bbn-test-3/kering-test/351c8be98e2674f7322d5c2f02b760421c932bed.address/","text":"eyJhbGciOiJQQkVTMi1IUzI1NitBMTI4S1ciLCJjcmVhdGVkIjoiMjAyNC0wMy0xMSAwNjowODo1OS45MTMwMzcwMjkgKzAwMDAgVVRDIG09KzQwLjQ2OTczMDg1MSIsImVuYyI6IkEyNTZHQ00iLCJwMmMiOjgxOTIsInAycyI6IkRIQTZkZzJ3TzdvRmFQVk4ifQ.AGMO6-BCYYBX0vWIB70gXwXcA90UGH3OUyiYAH38E_VqVqa1aw-fgg.cDea90qRvjVYfC1J.WlctMNDhlyg00vWvKm_aIWTwM2WmdABLnqzwBOdbuFEkC5_U0pLxUY9Kr5-mTUxAJrf_RXZlwnqe5NDXMoH6yC-MoeGTWeN9DMOEZ7_aLyjk0iJdm0oWiELBZb7EsxN1K_GIoM2gXMMi0xPHqpmCNrAUnzJQN1Px26WKNpAlt-hXPBG8Z6-HoFFnYQrkzVTPUYt6u1qxpyVKjnIqB75L5-aj7x495I2bpzPlbBkmON4qN-1T56De615c-9y5fg.WJ5VxW7jjllfjzK-_Xcl-g","title":"351c8be98e2674f7322d5c2f02b760421c932bed.address"},{"location":"chains/babylon/testnet/bbn-test-3/keyring-file/09ad7fd35ca01a8e286256d8512b8901d18f979b.address/","text":"eyJhbGciOiJQQkVTMi1IUzI1NitBMTI4S1ciLCJjcmVhdGVkIjoiMjAyNC0wNS0xNyAwNDozMDoxOC45MjU0MDk4NjIgKzAwMDAgVVRDIG09KzE1LjcwNDU2OTcxOSIsImVuYyI6IkEyNTZHQ00iLCJwMmMiOjgxOTIsInAycyI6IlE4UzF1MHl2dzFqbFp6UFIifQ.1E4KnIlWPbR09caae59ile41Gv3ukcvnsV_9QL7VHv0XXk1t8Bdweg.--LDcKzXTIKDTTTI.yHC3Y3MJYLrSS7OuvRT4C_YlDwZPbwRRSfYtTNGqf2R-amqvO_SvDsV3F6ukW_6PA0TlMSaoY1H6QLi5k_47z6nZBo0NfpKVckq-lhPqdnjXUDRsi7AolNRXmigtTSEiexajEhfpf0al1HytvkW4F0O9GPjwiEJhs27s92E3vsAfKJneaa7WGiOxc6AqK1asJeljeyvqKFt-iYuNz4wApD2EI9QUZ9KizPnScIi6hNMtrhr4VcKN602JJtEUdw.uI17whsU37KYw0gYw7sfMQ","title":"09ad7fd35ca01a8e286256d8512b8901d18f979b.address"},{"location":"chains/babylon/testnet/bbn-test-3/keyring-file/cosmostation.info/","text":"eyJhbGciOiJQQkVTMi1IUzI1NitBMTI4S1ciLCJjcmVhdGVkIjoiMjAyNC0wNS0xNyAwNDozMDoxOC45MjI3ODg2NDUgKzAwMDAgVVRDIG09KzE1LjcwMTk0ODQ5MiIsImVuYyI6IkEyNTZHQ00iLCJwMmMiOjgxOTIsInAycyI6IjNTQ2ZNRmlQa1BMaENBX1IifQ.5yL2tWm8YXXEUxKa_av4al1QoT2vTdyFpSkpn9N0caBGWx9Uj9chaw.WA7Pxb2SaWBPuxAA.LK22uZOYV7UdgaAzpk8JkNn-wP1ZZqbOUomaWNNUT2TfLT8L9ClvKBOf--chVYAz4lZFJEngG-Y0N9VqZ25LH7UCR1eu4Wkbglk9lnnQ2GSSI2AITSl_DspXcY4Dj45zPsfZsAFgFlIDICfsOvuPfVMUmsTaclOBNEKZ8GO0a2bGNWLkyyTFpyOciV28jCTJbbbP6xv-BYi1JtMP7D0XSrLzNoguxd0lZU_UppgtqC9EIzqvfqIXBD-uqWVY1Cm4KGPZka5H0cdO1IhS2ZZqLEdDTDd-jJ5JTpyEMO9E4CTKmK0rlAOAAE6DFlByHtPoh5S-W21c1mSg9YEWvgs6bwj_q40_mF5k2jyEi9mFZfj37_7siZEX1YJhCtXJWM7phdTPTsbg0yJrCr-CGM_GmyW_1WEwbuJcCQQhPBSh0CDr2OlXt8Lxc5mwSJrfe-cAmxpCfeT4BjT0jrH3WL28.eUG0BoPlQmDyu55bqCQj2Q","title":"Cosmostation.info"},{"location":"chains/babylon/testnet/bbn-test-3/keyring-file/keyhash/","text":"$2a$10$hSZj3YwADqMexEk2Zqck0uvW8TX4TND1Ea.9Mo8nlyV3jtZr1Io7i","title":"Keyhash"},{"location":"chains/babylon/testnet/bbn-test-4/FP_BTC_PK/","text":"export FP_BTC_PK=17d33e18ab85b33050c763a44d8757dfe4e0a3c49e12911f65e0529c3cd224b6","title":"FP BTC PK"},{"location":"chains/babylon/testnet/bbn-test-4/SIGNED_TX/","text":"export SIGNED_TX=020000000001059a7e46843c9868b9199b61c8790b97190bcdfc4e52b27f7bdda02fe53c68fd680500000000fdffffffaa4d793a6ae5a39b7a816c9a1c4549d74b2b675347a736bdf145dea5a85376c30000000000fdffffff1fd092eed8834c98d91fe13f88fbd596dfa63b35551f52255fb006a99c8106580000000000fdffffff126c305021cdad294d742a87c5dcb47e44e1d5c4cb763c08277d6e374c5e4b5d0000000000fdffffffe344a690e18c4849c04660f556a7396e347ed793468f9ab3b4b830e6fdedc1940000000000fdffffff03809698000000000022512028c34e8cb48b7d1544112fb86ec6990f8fa24e58260967d64b60ce33db942a7b0d10500000000000160014c611adc83502b1a8ee89a8b55baaa80b6c80d3c20000000000000000496a476262743400dd338f9526b6c66aac79a51ed70524290c327f8ccd1a033d3942d2d8314cb90a17d33e18ab85b33050c763a44d8757dfe4e0a3c49e12911f65e0529c3cd224b6cd500247304402201b4122989fa98e942a08d6a453794f11413f7c39a3d747e6fc7b3f5fd6aa661002204d2412128c32cac69d713a7118bf9baa0de6843b112c936bf84b89bb8c5c7393012102dd338f9526b6c66aac79a51ed70524290c327f8ccd1a033d3942d2d8314cb90a0247304402205c0f92544b11e103f8e7ed059a3f14daff4452188ba1b1d3341aba84f74c233202202e74cdb5b659b11b3314af9c8cceb0165d3231c2fee76e2b5fa790fafd361f03012102dd338f9526b6c66aac79a51ed70524290c327f8ccd1a033d3942d2d8314cb90a02473044022067fd132d6ed5de0d2b119db43802c0e667089676b2e5423c296053c23a2bedbc02206474418f6d50cf03eb53efc0a25fd77aa598e4c2d752c3cafec562d4f8343be2012102dd338f9526b6c66aac79a51ed70524290c327f8ccd1a033d3942d2d8314cb90a0247304402202b3ddee6491f6de862a5f5a36e656e21fad8e710761f9919cf8d3aaca41efc130220600807365039a85cbae99ff98f73d85328d095c6844dc5f2fb75665546ae9c29012102dd338f9526b6c66aac79a51ed70524290c327f8ccd1a033d3942d2d8314cb90a024730440220187ec647b30fc0ee572430a469aaa3cd5f17169e8276edc7e7808969e28d0708022043d040524b7a1129f3220da49756943b2817dba16c3d83e390ec31ed40dbc4cb012102dd338f9526b6c66aac79a51ed70524290c327f8ccd1a033d3942d2d8314cb90a00000000","title":"SIGNED TX"},{"location":"chains/babylon/testnet/bbn-test-4/bitcoin-rpc-query/","text":"bitcoin rpc query bitcoin chain-id: 0xD9B4BEF9 POST https://rpc-office.cosmostation.io/bitcoin/ Content-Type: application/json { \"jsonrpc\": \"2.0\", \"id\": 1, \"method\": \"scantxoutset\", \"params\": [\"start\", [\"addr(bc1pcmzuksgdrw6ypvda33qlcnjywh0rlfjguxhw3yyv67zfnh42mv2q2paehu)\"]] } curl --user cosmostation:dnpfqldwhr --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"getblockchaininfo\", \"params\": [] }' -H 'content-type: text/plain;' http://222.106.187.14:54602/ curl --user cosmostation:dnpfqldwhr --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"getblockcount\", \"params\": [] }' -H 'content-type: text/plain;' http://222.106.187.14:54602/ curl --user cosmostation:dnpfqldwhr --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"getnetworkinfo\", \"params\": [] }' -H 'content-type: text/plain;' http://222.106.187.14:54602/ echo -n 'cosmostation:dnpfqldwhr' | base64 Y29zbW9zdGF0aW9uOmRucGZxbGR3aHI= * bitcoin rpc reference: https://developer.bitcoin.org/reference/rpc curl --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"getblockchaininfo\", \"params\": [] }' -H 'content-type: text/plain;' https://rpc-office.cosmostation.io/bitcoin/ curl --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"getblockcount\", \"params\": [] }' -H 'content-type: text/plain;' https://rpc-office.cosmostation.io/bitcoin/ curl --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"getnetworkinfo\", \"params\": [] }' -H 'content-type: text/plain;' https://rpc-office.cosmostation.io/bitcoin/ POST https://rpc-office.cosmostation.io/bitcoin/ Content-Type: application/json { \"jsonrpc\": \"2.0\", \"id\": 1, \"method\": \"scantxoutset\", \"params\": [\"start\", [\"addr(bc1pcmzuksgdrw6ypvda33qlcnjywh0rlfjguxhw3yyv67zfnh42mv2q2paehu)\"]] } curl --user cosmostation:dnpfqldwhr --data-binary '{\"jsonrpc\": \"1.0\", \"id\": \"curltest\", \"method\": \"getblockcount\", \"params\": [] }' -H 'content-type: text/plain;' http://222.106.187.14:8332/ bitcoin-cli getblockchaininfo -config /data/node/.bitcoind/bitcoin.conf bitcoin-cli -rpcuser=cosmostation -rpcpassword=dnpfqldwhr -rpcport=8332 getblockchaininfo curl --user cosmostation:dnpfqldwhr --data-binary '{\"jsonrpc\":\"1.0\",\"id\":\"curltest\",\"method\":\"getblockcount\",\"params\":[]}' -H 'content-type:text/plain;' http://222.106.187.14:8332 POST https://rpc-office.cosmostation.io/bitcoin/ Content-Type: application/json { \"jsonrpc\": \"2.0\", \"id\": 1, \"method\": \"scantxoutset\", \"params\": [\"start\", [\"addr(bc1pcmzuksgdrw6ypvda33qlcnjywh0rlfjguxhw3yyv67zfnh42mv2q2paehu)\"]] } * listunspent bitcoin-cli -signet \\ -rpcuser=cosmostation \\ -rpcpassword=dnpfqldwhr \\ -rpcport=38332 \\ -rpcwallet=btc-staker \\ listunspent","title":"Bitcoin rpc query"},{"location":"chains/babylon/testnet/bbn-test-4/docs/","text":"https://github.com/babylonchain/finality-provider/blob/ae30623a634450db81ce1755839754cc822bf5e5/docs/eots.md \\ https://github.com/babylonchain/networks/tree/main/bbn-test-4/finality-providers#3-create-your-finality-provider-information-object \\ https://github.com/babylonchain/finality-provider/blob/ae30623a634450db81ce1755839754cc822bf5e5/docs/eots.md#33-sign-schnorr-signatures finality provider \\ https://btcstaking.testnet.babylonchain.io/","title":"Docs"},{"location":"chains/babylon/testnet/bbn-test-4/fpcli-export-finality-provider/","text":"fpcli export-finality-provider --btc-pk 17d33e18ab85b33050c763a44d8757dfe4e0a3c49e12911f65e0529c3cd224b6 \\ --home /data/node/.fpd --key-name cosmostation --signed curl https://bitcoin-testnet-archive.allthatnode.com \\ --request POST \\ --header 'content-type: text/plain;' \\ --data '{\"jsonrpc\": \"1.0\", \"id\": \"1\", \"method\": \"sendrawtransaction\", \"params\": [\"curl https://bitcoin-testnet-archive.allthatnode.com \\ --request POST \\ --header 'content-type: text/plain;' \\ --data '{\"jsonrpc\": \"1.0\", \"id\": \"1\", \"method\": \"sendrawtransaction\", \"params\": [\"020000000001059a7e46843c9868b9199b61c8790b97190bcdfc4e52b27f7bdda02fe53c68fd680500000000fdffffffaa4d793a6ae5a39b7a816c9a1c4549d74b2b675347a736bdf145dea5a85376c30000000000fdffffff1fd092eed8834c98d91fe13f88fbd596dfa63b35551f52255fb006a99c8106580000000000fdffffff126c305021cdad294d742a87c5dcb47e44e1d5c4cb763c08277d6e374c5e4b5d0000000000fdffffffe344a690e18c4849c04660f556a7396e347ed793468f9ab3b4b830e6fdedc1940000000000fdffffff03809698000000000022512028c34e8cb48b7d1544112fb86ec6990f8fa24e58260967d64b60ce33db942a7b0d10500000000000160014c611adc83502b1a8ee89a8b55baaa80b6c80d3c20000000000000000496a476262743400dd338f9526b6c66aac79a51ed70524290c327f8ccd1a033d3942d2d8314cb90a17d33e18ab85b33050c763a44d8757dfe4e0a3c49e12911f65e0529c3cd224b6cd500247304402201b4122989fa98e942a08d6a453794f11413f7c39a3d747e6fc7b3f5fd6aa661002204d2412128c32cac69d713a7118bf9baa0de6843b112c936bf84b89bb8c5c7393012102dd338f9526b6c66aac79a51ed70524290c327f8ccd1a033d3942d2d8314cb90a0247304402205c0f92544b11e103f8e7ed059a3f14daff4452188ba1b1d3341aba84f74c233202202e74cdb5b659b11b3314af9c8cceb0165d3231c2fee76e2b5fa790fafd361f03012102dd338f9526b6c66aac79a51ed70524290c327f8ccd1a033d3942d2d8314cb90a02473044022067fd132d6ed5de0d2b119db43802c0e667089676b2e5423c296053c23a2bedbc02206474418f6d50cf03eb53efc0a25fd77aa598e4c2d752c3cafec562d4f8343be2012102dd338f9526b6c66aac79a51ed70524290c327f8ccd1a033d3942d2d8314cb90a0247304402202b3ddee6491f6de862a5f5a36e656e21fad8e710761f9919cf8d3aaca41efc130220600807365039a85cbae99ff98f73d85328d095c6844dc5f2fb75665546ae9c29012102dd338f9526b6c66aac79a51ed70524290c327f8ccd1a033d3942d2d8314cb90a024730440220187ec647b30fc0ee572430a469aaa3cd5f17169e8276edc7e7808969e28d0708022043d040524b7a1129f3220da49756943b2817dba16c3d83e390ec31ed40dbc4cb012102dd338f9526b6c66aac79a51ed70524290c327f8ccd1a033d3942d2d8314cb90a00000000\"]}'\"]}'","title":"Fpcli export finality provider"},{"location":"chains/babylon/testnet/bbn-test-4/staker/","text":"* stakercli transaction create-phase1-staking-transaction \\ --staker-pk dd338f9526b6c66aac79a51ed70524290c327f8ccd1a033d3942d2d8314cb90a \\ --staking-amount 10000000 \\ --staking-time 52560 \\ --magic-bytes 62627434 \\ --finality-provider-pk 17d33e18ab85b33050c763a44d8757dfe4e0a3c49e12911f65e0529c3cd224b6 \\ --covenant-quorum 1 \\ --covenant-committee-pks 50929b74c1a04954b78b4b6035e97a5e078a5a0f28ec96d547bfee9ace803ac0 \\ --network signet { \"staking_tx_hex\": \"020000000002809698000000000022512028c34e8cb48b7d1544112fb86ec6990f8fa24e58260967d64b60ce33db942a7b0000000000000000496a476262743400dd338f9526b6c66aac79a51ed70524290c327f8ccd1a033d3942d2d8314cb90a17d33e18ab85b33050c763a44d8757dfe4e0a3c49e12911f65e0529c3cd224b6cd5000000000\" } * curl https://bitcoin-testnet-archive.allthatnode.com \\ --request POST \\ --header 'content-type: text/plain;' \\ --data '{\"jsonrpc\": \"1.0\", \"id\": \"1\", \"method\": \"sendrawtransaction\", \"params\": [\"020000000002809698000000000022512028c34e8cb48b7d1544112fb86ec6990f8fa24e58260967d64b60ce33db942a7b0000000000000000496a476262743400dd338f9526b6c66aac79a51ed70524290c327f8ccd1a033d3942d2d8314cb90a17d33e18ab85b33050c763a44d8757dfe4e0a3c49e12911f65e0529c3cd224b6cd5000000000\"]}' * bitcoin-cli -signet \\ -rpcuser=cosmostation \\ -rpcpassword=dnpfqldwhr \\ -rpcport=38332 \\ -rpcwallet=btcstaker \\ fundrawtransaction 020000000002809698000000000022512028c34e8cb48b7d1544112fb86ec6990f8fa24e58260967d64b60ce33db942a7b0000000000000000496a476262743400dd338f9526b6c66aac79a51ed70524290c327f8ccd1a033d3942d2d8314cb90a17d33e18ab85b33050c763a44d8757dfe4e0a3c49e12911f65e0529c3cd224b6cd5000000000 { \"hex\": \"0200000006e344a690e18c4849c04660f556a7396e347ed793468f9ab3b4b830e6fdedc1940000000000fdffffffaa4d793a6ae5a39b7a816c9a1c4549d74b2b675347a736bdf145dea5a85376c30000000000fdffffff2cdf12c7c2bb25661914b08b8c82220f9f0cbbd3a0fe74f77766eb549ef9a1640100000000fdffffff6ac2b0c654c2f0405977a14de44d812e30686f44862979c9b2efc7a47f93df960000000000fdffffff547b2d19a7f167928e1f5b8c33c89d04734d6146ec2f68936661515b7f931ff80000000000fdffffff9a7e46843c9868b9199b61c8790b97190bcdfc4e52b27f7bdda02fe53c68fd680500000000fdffffff03809698000000000022512028c34e8cb48b7d1544112fb86ec6990f8fa24e58260967d64b60ce33db942a7bf11a50000000000016001439c455342c5c43a75fb5c743cb6e55bd941972be0000000000000000496a476262743400dd338f9526b6c66aac79a51ed70524290c327f8ccd1a033d3942d2d8314cb90a17d33e18ab85b33050c763a44d8757dfe4e0a3c49e12911f65e0529c3cd224b6cd5000000000\", \"fee\": 0.00000573, \"changepos\": 1 } {\"result\":null,\"error\":{\"code\":-22,\"message\":\"TX decode failed. Make sure the tx has at least one input.\"},\"id\":\"1\"} bitcoin-cli -testnet \\ -rpcuser=cosmostation \\ -rpcpassword=dnpfqldwhr \\ -rpcport=38332 \\ -rpcwallet=btcstaker \\ fundrawtransaction 020000000002809698000000000022512028c34e8cb48b7d1544112fb86ec6990f8fa24e58260967d64b60ce33db942a7b0000000000000000496a476262743400dd338f9526b6c66aac79a51ed70524290c327f8ccd1a033d3942d2d8314cb90a17d33e18ab85b33050c763a44d8757dfe4e0a3c49e12911f65e0529c3cd224b6cd5000000000 { \"hex\": \"0200000006aa4d793a6ae5a39b7a816c9a1c4549d74b2b675347a736bdf145dea5a85376c30000000000fdffffff126c305021cdad294d742a87c5dcb47e44e1d5c4cb763c08277d6e374c5e4b5d0000000000fdffffff9a7e46843c9868b9199b61c8790b97190bcdfc4e52b27f7bdda02fe53c68fd680500000000fdffffff6ac2b0c654c2f0405977a14de44d812e30686f44862979c9b2efc7a47f93df960000000000fdffffffe344a690e18c4849c04660f556a7396e347ed793468f9ab3b4b830e6fdedc1940000000000fdffffff547b2d19a7f167928e1f5b8c33c89d04734d6146ec2f68936661515b7f931ff80000000000fdffffff03ab8c51000000000016001464c3181216f267b7994d8160cf26a8986a4eb709809698000000000022512028c34e8cb48b7d1544112fb86ec6990f8fa24e58260967d64b60ce33db942a7b0000000000000000496a476262743400dd338f9526b6c66aac79a51ed70524290c327f8ccd1a033d3942d2d8314cb90a17d33e18ab85b33050c763a44d8757dfe4e0a3c49e12911f65e0529c3cd224b6cd5000000000\", \"fee\": 0.00000573, \"changepos\": 0 } signrawtransactionwithwallet \uc2dc\ub3c4 \uc911 error error code: -13 error message: Error: Please enter the wallet passphrase with walletpassphrase first. bitcoin-cli -signet \\ -rpcuser=cosmostation \\ -rpcpassword=dnpfqldwhr \\ -rpcport=38332 \\ -rpcwallet=btcstaker \\ fundrawtransaction 020000000002809698000000000022512028c34e8cb48b7d1544112fb86ec6990f8fa24e58260967d64b60ce33db942a7b0000000000000000496a476262743400dd338f9526b6c66aac79a51ed70524290c327f8ccd1a033d3942d2d8314cb90a17d33e18ab85b33050c763a44d8757dfe4e0a3c49e12911f65e0529c3cd224b6cd5000000000 { \"hex\": \"02000000051fd092eed8834c98d91fe13f88fbd596dfa63b35551f52255fb006a99c8106580000000000fdffffffe344a690e18c4849c04660f556a7396e347ed793468f9ab3b4b830e6fdedc1940000000000fdffffff547b2d19a7f167928e1f5b8c33c89d04734d6146ec2f68936661515b7f931ff80000000000fdffffff9a7e46843c9868b9199b61c8790b97190bcdfc4e52b27f7bdda02fe53c68fd680500000000fdffffff2cdf12c7c2bb25661914b08b8c82220f9f0cbbd3a0fe74f77766eb549ef9a1640100000000fdffffff03809698000000000022512028c34e8cb48b7d1544112fb86ec6990f8fa24e58260967d64b60ce33db942a7b0000000000000000496a476262743400dd338f9526b6c66aac79a51ed70524290c327f8ccd1a033d3942d2d8314cb90a17d33e18ab85b33050c763a44d8757dfe4e0a3c49e12911f65e0529c3cd224b6cd507011500000000000160014ee5e73ed9704dd0782484b48cc2ca7b564d9fc8300000000\", \"fee\": 0.00000506, \"changepos\": 2 } --------------------------------------------------------------------------------- * \ud655\uc778\ubc29\ubc95 https://live.blockcypher.com/btc-testnet/tx/020000000002809698000000000022512028c34e8cb48b7d1544112fb86ec6990f8fa24e58260967d64b60ce33db942a7b0000000000000000496a476262743400dd338f9526b6c66aac79a51ed70524290c327f8ccd1a033d3942d2d8314cb90a17d33e18ab85b33050c763a44d8757dfe4e0a3c49e12911f65e0529c3cd224b6cd5000000000 Invalid Transaction Hash","title":"Staker"},{"location":"chains/babylon/testnet/bbn-test-4/stakercli/","text":"stakercli transaction create-phase1-staking-transaction \\ --staker-pk dd338f9526b6c66aac79a51ed70524290c327f8ccd1a033d3942d2d8314cb90a \\ --staking-amount 10000000 \\ --staking-time 52560 \\ --magic-bytes 62627434 \\ --finality-provider-pk 17d33e18ab85b33050c763a44d8757dfe4e0a3c49e12911f65e0529c3cd224b6 \\ --covenant-quorum 1 \\ --covenant-committee-pks 50929b74c1a04954b78b4b6035e97a5e078a5a0f28ec96d547bfee9ace803ac0 \\ --network signet { \"staking_tx_hex\": \"020000000002809698000000000022512028c34e8cb48b7d1544112fb86ec6990f8fa24e58260967d64b60ce33db942a7b0000000000000000496a476262743400dd338f9526b6c66aac79a51ed70524290c327f8ccd1a033d3942d2d8314cb90a17d33e18ab85b33050c763a44d8757dfe4e0a3c49e12911f65e0529c3cd224b6cd5000000000\" } bitcoin-cli -signet \\ -rpcuser=cosmostation \\ -rpcpassword=dnpfqldwhr \\ -rpcport=38332 \\ -rpcwallet=btcstaker \\ fundrawtransaction 020000000002809698000000000022512028c34e8cb48b7d1544112fb86ec6990f8fa24e58260967d64b60ce33db942a7b0000000000000000496a476262743400dd338f9526b6c66aac79a51ed70524290c327f8ccd1a033d3942d2d8314cb90a17d33e18ab85b33050c763a44d8757dfe4e0a3c49e12911f65e0529c3cd224b6cd5000000000 { \"hex\": \"02000000059a7e46843c9868b9199b61c8790b97190bcdfc4e52b27f7bdda02fe53c68fd680500000000fdffffffaa4d793a6ae5a39b7a816c9a1c4549d74b2b675347a736bdf145dea5a85376c30000000000fdffffff1fd092eed8834c98d91fe13f88fbd596dfa63b35551f52255fb006a99c8106580000000000fdffffff126c305021cdad294d742a87c5dcb47e44e1d5c4cb763c08277d6e374c5e4b5d0000000000fdffffffe344a690e18c4849c04660f556a7396e347ed793468f9ab3b4b830e6fdedc1940000000000fdffffff03809698000000000022512028c34e8cb48b7d1544112fb86ec6990f8fa24e58260967d64b60ce33db942a7b0d10500000000000160014c611adc83502b1a8ee89a8b55baaa80b6c80d3c20000000000000000496a476262743400dd338f9526b6c66aac79a51ed70524290c327f8ccd1a033d3942d2d8314cb90a17d33e18ab85b33050c763a44d8757dfe4e0a3c49e12911f65e0529c3cd224b6cd5000000000\", \"fee\": 0.00000511, \"changepos\": 1 } bitcoin-cli -signet \\ -rpcuser=cosmostation \\ -rpcpassword=dnpfqldwhr \\ -rpcport=38332 \\ -rpcwallet=btcstaker \\ signrawtransactionwithwallet 02000000059a7e46843c9868b9199b61c8790b97190bcdfc4e52b27f7bdda02fe53c68fd680500000000fdffffffaa4d793a6ae5a39b7a816c9a1c4549d74b2b675347a736bdf145dea5a85376c30000000000fdffffff1fd092eed8834c98d91fe13f88fbd596dfa63b35551f52255fb006a99c8106580000000000fdffffff126c305021cdad294d742a87c5dcb47e44e1d5c4cb763c08277d6e374c5e4b5d0000000000fdffffffe344a690e18c4849c04660f556a7396e347ed793468f9ab3b4b830e6fdedc1940000000000fdffffff03809698000000000022512028c34e8cb48b7d1544112fb86ec6990f8fa24e58260967d64b60ce33db942a7b0d10500000000000160014c611adc83502b1a8ee89a8b55baaa80b6c80d3c20000000000000000496a476262743400dd338f9526b6c66aac79a51ed70524290c327f8ccd1a033d3942d2d8314cb90a17d33e18ab85b33050c763a44d8757dfe4e0a3c49e12911f65e0529c3cd224b6cd5000000000 error code: -13 error message: Error: Please enter the wallet passphrase with walletpassphrase first. bitcoin-cli walletpassphrase dnpfqldwhr 60 -rpcuser=cosmostation -rpcpassword=dnpfqldwhr -rpcport=38332 -rpcallowip=127.0.0.1 \uc544\ub798\uc640 \uac19\uc774 \uc785\ub825\ud574\uc57c cli\uac00 \ub3d9\uc791\ud568.. \uc774\uc0c1\ud558\ub124 \u279c ~ bitcoin-cli -signet \\ -rpcuser=cosmostation \\ -rpcpassword=dnpfqldwhr \\ -rpcport=38332 \\ walletpassphrase walletpass 60 \u279c ~ bitcoin-cli -signet \\ -rpcuser=cosmostation \\ -rpcpassword=dnpfqldwhr \\ -rpcport=38332 \\ -rpcwallet=btcstaker \\ signrawtransactionwithwallet 02000000059a7e46843c9868b9199b61c8790b97190bcdfc4e52b27f7bdda02fe53c68fd680500000000fdffffffaa4d793a6ae5a39b7a816c9a1c4549d74b2b675347a736bdf145dea5a85376c30000000000fdffffff1fd092eed8834c98d91fe13f88fbd596dfa63b35551f52255fb006a99c8106580000000000fdffffff126c305021cdad294d742a87c5dcb47e44e1d5c4cb763c08277d6e374c5e4b5d0000000000fdffffffe344a690e18c4849c04660f556a7396e347ed793468f9ab3b4b830e6fdedc1940000000000fdffffff03809698000000000022512028c34e8cb48b7d1544112fb86ec6990f8fa24e58260967d64b60ce33db942a7b0d10500000000000160014c611adc83502b1a8ee89a8b55baaa80b6c80d3c20000000000000000496a476262743400dd338f9526b6c66aac79a51ed70524290c327f8ccd1a033d3942d2d8314cb90a17d33e18ab85b33050c763a44d8757dfe4e0a3c49e12911f65e0529c3cd224b6cd5000000000 { \"hex\": \"020000000001059a7e46843c9868b9199b61c8790b97190bcdfc4e52b27f7bdda02fe53c68fd680500000000fdffffffaa4d793a6ae5a39b7a816c9a1c4549d74b2b675347a736bdf145dea5a85376c30000000000fdffffff1fd092eed8834c98d91fe13f88fbd596dfa63b35551f52255fb006a99c8106580000000000fdffffff126c305021cdad294d742a87c5dcb47e44e1d5c4cb763c08277d6e374c5e4b5d0000000000fdffffffe344a690e18c4849c04660f556a7396e347ed793468f9ab3b4b830e6fdedc1940000000000fdffffff03809698000000000022512028c34e8cb48b7d1544112fb86ec6990f8fa24e58260967d64b60ce33db942a7b0d10500000000000160014c611adc83502b1a8ee89a8b55baaa80b6c80d3c20000000000000000496a476262743400dd338f9526b6c66aac79a51ed70524290c327f8ccd1a033d3942d2d8314cb90a17d33e18ab85b33050c763a44d8757dfe4e0a3c49e12911f65e0529c3cd224b6cd500247304402201b4122989fa98e942a08d6a453794f11413f7c39a3d747e6fc7b3f5fd6aa661002204d2412128c32cac69d713a7118bf9baa0de6843b112c936bf84b89bb8c5c7393012102dd338f9526b6c66aac79a51ed70524290c327f8ccd1a033d3942d2d8314cb90a0247304402205c0f92544b11e103f8e7ed059a3f14daff4452188ba1b1d3341aba84f74c233202202e74cdb5b659b11b3314af9c8cceb0165d3231c2fee76e2b5fa790fafd361f03012102dd338f9526b6c66aac79a51ed70524290c327f8ccd1a033d3942d2d8314cb90a02473044022067fd132d6ed5de0d2b119db43802c0e667089676b2e5423c296053c23a2bedbc02206474418f6d50cf03eb53efc0a25fd77aa598e4c2d752c3cafec562d4f8343be2012102dd338f9526b6c66aac79a51ed70524290c327f8ccd1a033d3942d2d8314cb90a0247304402202b3ddee6491f6de862a5f5a36e656e21fad8e710761f9919cf8d3aaca41efc130220600807365039a85cbae99ff98f73d85328d095c6844dc5f2fb75665546ae9c29012102dd338f9526b6c66aac79a51ed70524290c327f8ccd1a033d3942d2d8314cb90a024730440220187ec647b30fc0ee572430a469aaa3cd5f17169e8276edc7e7808969e28d0708022043d040524b7a1129f3220da49756943b2817dba16c3d83e390ec31ed40dbc4cb012102dd338f9526b6c66aac79a51ed70524290c327f8ccd1a033d3942d2d8314cb90a00000000\", \"complete\": true } bitcoin-cli -signet \\ -rpcuser=cosmostation \\ -rpcpassword=dnpfqldwhr \\ -rpcport=38332 \\ sendrawtransaction 020000000001059a7e46843c9868b9199b61c8790b97190bcdfc4e52b27f7bdda02fe53c68fd680500000000fdffffffaa4d793a6ae5a39b7a816c9a1c4549d74b2b675347a736bdf145dea5a85376c30000000000fdffffff1fd092eed8834c98d91fe13f88fbd596dfa63b35551f52255fb006a99c8106580000000000fdffffff126c305021cdad294d742a87c5dcb47e44e1d5c4cb763c08277d6e374c5e4b5d0000000000fdffffffe344a690e18c4849c04660f556a7396e347ed793468f9ab3b4b830e6fdedc1940000000000fdffffff03809698000000000022512028c34e8cb48b7d1544112fb86ec6990f8fa24e58260967d64b60ce33db942a7b0d10500000000000160014c611adc83502b1a8ee89a8b55baaa80b6c80d3c20000000000000000496a476262743400dd338f9526b6c66aac79a51ed70524290c327f8ccd1a033d3942d2d8314cb90a17d33e18ab85b33050c763a44d8757dfe4e0a3c49e12911f65e0529c3cd224b6cd500247304402201b4122989fa98e942a08d6a453794f11413f7c39a3d747e6fc7b3f5fd6aa661002204d2412128c32cac69d713a7118bf9baa0de6843b112c936bf84b89bb8c5c7393012102dd338f9526b6c66aac79a51ed70524290c327f8ccd1a033d3942d2d8314cb90a0247304402205c0f92544b11e103f8e7ed059a3f14daff4452188ba1b1d3341aba84f74c233202202e74cdb5b659b11b3314af9c8cceb0165d3231c2fee76e2b5fa790fafd361f03012102dd338f9526b6c66aac79a51ed70524290c327f8ccd1a033d3942d2d8314cb90a02473044022067fd132d6ed5de0d2b119db43802c0e667089676b2e5423c296053c23a2bedbc02206474418f6d50cf03eb53efc0a25fd77aa598e4c2d752c3cafec562d4f8343be2012102dd338f9526b6c66aac79a51ed70524290c327f8ccd1a033d3942d2d8314cb90a0247304402202b3ddee6491f6de862a5f5a36e656e21fad8e710761f9919cf8d3aaca41efc130220600807365039a85cbae99ff98f73d85328d095c6844dc5f2fb75665546ae9c29012102dd338f9526b6c66aac79a51ed70524290c327f8ccd1a033d3942d2d8314cb90a024730440220187ec647b30fc0ee572430a469aaa3cd5f17169e8276edc7e7808969e28d0708022043d040524b7a1129f3220da49756943b2817dba16c3d83e390ec31ed40dbc4cb012102dd338f9526b6c66aac79a51ed70524290c327f8ccd1a033d3942d2d8314cb90a00000000 -> a1a8e00a6d3e3721c3e310557415c19e4aa490d1d6cdc22a20fe111f7636bd00 bitcoin-cli -signet \\ -rpcuser=cosmostation \\ -rpcpassword=dnpfqldwhr \\ -rpcport=38332 \\ gettransaction a1a8e00a6d3e3721c3e310557415c19e4aa490d1d6cdc22a20fe111f7636bd00 { \"amount\": -0.10000000, \"fee\": -0.00000511, \"confirmations\": 0, \"trusted\": true, \"txid\": \"a1a8e00a6d3e3721c3e310557415c19e4aa490d1d6cdc22a20fe111f7636bd00\", \"wtxid\": \"770f8e62eca2c1c7acd99898de0c7c23824fb3be50199197d8f186dd5fbf040b\", \"walletconflicts\": [ ], \"time\": 1715937980, \"timereceived\": 1715937980, \"bip125-replaceable\": \"yes\", \"details\": [ { \"address\": \"tb1p9rp5ar953d7323q397uxa35ep786ynjcycyk04jtvr8r8ku59fasq2273m\", \"category\": \"send\", \"amount\": -0.10000000, \"vout\": 0, \"fee\": -0.00000511, \"abandoned\": false }, { \"category\": \"send\", \"amount\": 0.00000000, \"vout\": 2, \"fee\": -0.00000511, \"abandoned\": false } ], \"hex\": \"020000000001059a7e46843c9868b9199b61c8790b97190bcdfc4e52b27f7bdda02fe53c68fd680500000000fdffffffaa4d793a6ae5a39b7a816c9a1c4549d74b2b675347a736bdf145dea5a85376c30000000000fdffffff1fd092eed8834c98d91fe13f88fbd596dfa63b35551f52255fb006a99c8106580000000000fdffffff126c305021cdad294d742a87c5dcb47e44e1d5c4cb763c08277d6e374c5e4b5d0000000000fdffffffe344a690e18c4849c04660f556a7396e347ed793468f9ab3b4b830e6fdedc1940000000000fdffffff03809698000000000022512028c34e8cb48b7d1544112fb86ec6990f8fa24e58260967d64b60ce33db942a7b0d10500000000000160014c611adc83502b1a8ee89a8b55baaa80b6c80d3c20000000000000000496a476262743400dd338f9526b6c66aac79a51ed70524290c327f8ccd1a033d3942d2d8314cb90a17d33e18ab85b33050c763a44d8757dfe4e0a3c49e12911f65e0529c3cd224b6cd500247304402201b4122989fa98e942a08d6a453794f11413f7c39a3d747e6fc7b3f5fd6aa661002204d2412128c32cac69d713a7118bf9baa0de6843b112c936bf84b89bb8c5c7393012102dd338f9526b6c66aac79a51ed70524290c327f8ccd1a033d3942d2d8314cb90a0247304402205c0f92544b11e103f8e7ed059a3f14daff4452188ba1b1d3341aba84f74c233202202e74cdb5b659b11b3314af9c8cceb0165d3231c2fee76e2b5fa790fafd361f03012102dd338f9526b6c66aac79a51ed70524290c327f8ccd1a033d3942d2d8314cb90a02473044022067fd132d6ed5de0d2b119db43802c0e667089676b2e5423c296053c23a2bedbc02206474418f6d50cf03eb53efc0a25fd77aa598e4c2d752c3cafec562d4f8343be2012102dd338f9526b6c66aac79a51ed70524290c327f8ccd1a033d3942d2d8314cb90a0247304402202b3ddee6491f6de862a5f5a36e656e21fad8e710761f9919cf8d3aaca41efc130220600807365039a85cbae99ff98f73d85328d095c6844dc5f2fb75665546ae9c29012102dd338f9526b6c66aac79a51ed70524290c327f8ccd1a033d3942d2d8314cb90a024730440220187ec647b30fc0ee572430a469aaa3cd5f17169e8276edc7e7808969e28d0708022043d040524b7a1129f3220da49756943b2817dba16c3d83e390ec31ed40dbc4cb012102dd338f9526b6c66aac79a51ed70524290c327f8ccd1a033d3942d2d8314cb90a00000000\", \"lastprocessedblock\": { \"hash\": \"0000011b58f20bc6e9534f91bc77f38f2f98b105e3c5e4599f3a2263d96c493f\", \"height\": 195955 } } bitcoin-cli -signet \\ -rpcuser=cosmostation \\ -rpcpassword=dnpfqldwhr \\ -rpcport=38332 \\ gettransaction a1a8e00a6d3e3721c3e310557415c19e4aa490d1d6cdc22a20fe111f7636bd00 { \"amount\": -0.10000000, \"fee\": -0.00000511, \"confirmations\": 34, \"blockhash\": \"000001459111835f651bb8dfcdda68571ef8d444142d872faf877ab121d011a2\", \"blockheight\": 195956, \"blockindex\": 14, \"blocktime\": 1715939006, \"txid\": \"a1a8e00a6d3e3721c3e310557415c19e4aa490d1d6cdc22a20fe111f7636bd00\", \"wtxid\": \"770f8e62eca2c1c7acd99898de0c7c23824fb3be50199197d8f186dd5fbf040b\", \"walletconflicts\": [ ], \"time\": 1715937980, \"timereceived\": 1715937980, \"bip125-replaceable\": \"no\", \"details\": [ { \"address\": \"tb1p9rp5ar953d7323q397uxa35ep786ynjcycyk04jtvr8r8ku59fasq2273m\", \"category\": \"send\", \"amount\": -0.10000000, \"vout\": 0, \"fee\": -0.00000511, \"abandoned\": false }, { \"category\": \"send\", \"amount\": 0.00000000, \"vout\": 2, \"fee\": -0.00000511, \"abandoned\": false } ], \"hex\": \"020000000001059a7e46843c9868b9199b61c8790b97190bcdfc4e52b27f7bdda02fe53c68fd680500000000fdffffffaa4d793a6ae5a39b7a816c9a1c4549d74b2b675347a736bdf145dea5a85376c30000000000fdffffff1fd092eed8834c98d91fe13f88fbd596dfa63b35551f52255fb006a99c8106580000000000fdffffff126c305021cdad294d742a87c5dcb47e44e1d5c4cb763c08277d6e374c5e4b5d0000000000fdffffffe344a690e18c4849c04660f556a7396e347ed793468f9ab3b4b830e6fdedc1940000000000fdffffff03809698000000000022512028c34e8cb48b7d1544112fb86ec6990f8fa24e58260967d64b60ce33db942a7b0d10500000000000160014c611adc83502b1a8ee89a8b55baaa80b6c80d3c20000000000000000496a476262743400dd338f9526b6c66aac79a51ed70524290c327f8ccd1a033d3942d2d8314cb90a17d33e18ab85b33050c763a44d8757dfe4e0a3c49e12911f65e0529c3cd224b6cd500247304402201b4122989fa98e942a08d6a453794f11413f7c39a3d747e6fc7b3f5fd6aa661002204d2412128c32cac69d713a7118bf9baa0de6843b112c936bf84b89bb8c5c7393012102dd338f9526b6c66aac79a51ed70524290c327f8ccd1a033d3942d2d8314cb90a0247304402205c0f92544b11e103f8e7ed059a3f14daff4452188ba1b1d3341aba84f74c233202202e74cdb5b659b11b3314af9c8cceb0165d3231c2fee76e2b5fa790fafd361f03012102dd338f9526b6c66aac79a51ed70524290c327f8ccd1a033d3942d2d8314cb90a02473044022067fd132d6ed5de0d2b119db43802c0e667089676b2e5423c296053c23a2bedbc02206474418f6d50cf03eb53efc0a25fd77aa598e4c2d752c3cafec562d4f8343be2012102dd338f9526b6c66aac79a51ed70524290c327f8ccd1a033d3942d2d8314cb90a0247304402202b3ddee6491f6de862a5f5a36e656e21fad8e710761f9919cf8d3aaca41efc130220600807365039a85cbae99ff98f73d85328d095c6844dc5f2fb75665546ae9c29012102dd338f9526b6c66aac79a51ed70524290c327f8ccd1a033d3942d2d8314cb90a024730440220187ec647b30fc0ee572430a469aaa3cd5f17169e8276edc7e7808969e28d0708022043d040524b7a1129f3220da49756943b2817dba16c3d83e390ec31ed40dbc4cb012102dd338f9526b6c66aac79a51ed70524290c327f8ccd1a033d3942d2d8314cb90a00000000\", \"lastprocessedblock\": { \"hash\": \"00000055bea6b4080b7be05d8948272448e86cfc2a72117421100ce2d25afd78\", \"height\": 195989 } }","title":"Stakercli"},{"location":"chains/babylon/testnet/bbn-test-4/validator-description/","text":"{ \"description\": { \"moniker\": \"Cosmostation\", \"identity\": \"AE4C403A6E7AA1AC\", \"website\": \"https://www.cosmostation.io\", \"security_contact\": \"node@stamper.network\", \"details\": \"Cosmostation validator node. Delegate your tokens and Start Earning Staking Rewards\" }, \"btc_pk\": \"17d33e18ab85b33050c763a44d8757dfe4e0a3c49e12911f65e0529c3cd224b6\", \"commission\": \"0.05\", \"deposit\": { \"tx_hash\": \"a1a8e00a6d3e3721c3e310557415c19e4aa490d1d6cdc22a20fe111f7636bd00\", \"signed_tx\": \"020000000001059a7e46843c9868b9199b61c8790b97190bcdfc4e52b27f7bdda02fe53c68fd680500000000fdffffffaa4d793a6ae5a39b7a816c9a1c4549d74b2b675347a736bdf145dea5a85376c30000000000fdffffff1fd092eed8834c98d91fe13f88fbd596dfa63b35551f52255fb006a99c8106580000000000fdffffff126c305021cdad294d742a87c5dcb47e44e1d5c4cb763c08277d6e374c5e4b5d0000000000fdffffffe344a690e18c4849c04660f556a7396e347ed793468f9ab3b4b830e6fdedc1940000000000fdffffff03809698000000000022512028c34e8cb48b7d1544112fb86ec6990f8fa24e58260967d64b60ce33db942a7b0d10500000000000160014c611adc83502b1a8ee89a8b55baaa80b6c80d3c20000000000000000496a476262743400dd338f9526b6c66aac79a51ed70524290c327f8ccd1a033d3942d2d8314cb90a17d33e18ab85b33050c763a44d8757dfe4e0a3c49e12911f65e0529c3cd224b6cd500247304402201b4122989fa98e942a08d6a453794f11413f7c39a3d747e6fc7b3f5fd6aa661002204d2412128c32cac69d713a7118bf9baa0de6843b112c936bf84b89bb8c5c7393012102dd338f9526b6c66aac79a51ed70524290c327f8ccd1a033d3942d2d8314cb90a0247304402205c0f92544b11e103f8e7ed059a3f14daff4452188ba1b1d3341aba84f74c233202202e74cdb5b659b11b3314af9c8cceb0165d3231c2fee76e2b5fa790fafd361f03012102dd338f9526b6c66aac79a51ed70524290c327f8ccd1a033d3942d2d8314cb90a02473044022067fd132d6ed5de0d2b119db43802c0e667089676b2e5423c296053c23a2bedbc02206474418f6d50cf03eb53efc0a25fd77aa598e4c2d752c3cafec562d4f8343be2012102dd338f9526b6c66aac79a51ed70524290c327f8ccd1a033d3942d2d8314cb90a0247304402202b3ddee6491f6de862a5f5a36e656e21fad8e710761f9919cf8d3aaca41efc130220600807365039a85cbae99ff98f73d85328d095c6844dc5f2fb75665546ae9c29012102dd338f9526b6c66aac79a51ed70524290c327f8ccd1a033d3942d2d8314cb90a024730440220187ec647b30fc0ee572430a469aaa3cd5f17169e8276edc7e7808969e28d0708022043d040524b7a1129f3220da49756943b2817dba16c3d83e390ec31ed40dbc4cb012102dd338f9526b6c66aac79a51ed70524290c327f8ccd1a033d3942d2d8314cb90a00000000\" } } { \"description\": { \"moniker\": \"Cosmostation\", \"identity\": \"AE4C403A6E7AA1AC\", \"website\": \"https://www.cosmostation.io\", \"security_contact\": \"node@stamper.network\", \"details\": \"Cosmostation validator node. Delegate your tokens and Start Earning Staking Rewards\" }, \"btc_pk\": \"17d33e18ab85b33050c763a44d8757dfe4e0a3c49e12911f65e0529c3cd224b6\", \"commission\": \"0.05\", \"deposit\": { \"tx_hash\": \"a1a8e00a6d3e3721c3e310557415c19e4aa490d1d6cdc22a20fe111f7636bd00\", \"signed_tx\": \"02000000059a7e46843c9868b9199b61c8790b97190bcdfc4e52b27f7bdda02fe53c68fd680500000000fdffffffaa4d793a6ae5a39b7a816c9a1c4549d74b2b675347a736bdf145dea5a85376c30000000000fdffffff1fd092eed8834c98d91fe13f88fbd596dfa63b35551f52255fb006a99c8106580000000000fdffffff126c305021cdad294d742a87c5dcb47e44e1d5c4cb763c08277d6e374c5e4b5d0000000000fdffffffe344a690e18c4849c04660f556a7396e347ed793468f9ab3b4b830e6fdedc1940000000000fdffffff03809698000000000022512028c34e8cb48b7d1544112fb86ec6990f8fa24e58260967d64b60ce33db942a7b0d10500000000000160014c611adc83502b1a8ee89a8b55baaa80b6c80d3c20000000000000000496a476262743400dd338f9526b6c66aac79a51ed70524290c327f8ccd1a033d3942d2d8314cb90a17d33e18ab85b33050c763a44d8757dfe4e0a3c49e12911f65e0529c3cd224b6cd5000000000\" } }","title":"Validator description"},{"location":"chains/babylon/testnet/bbn-test-4/eotsd/eotsd-sign-schnorr/","text":"eotsd sign-schnorr \\ /home/babylon-testnet/cosmostation.json \\ --home /data/node/.eotsd \\ --keyring-backend file \\ --key-name cosmostation { \"key_name\": \"cosmostation\", \"pub_key_hex\": \"894add70131a47375ce48ff2adc969721c13b600f8726ad21ee018b9b97f4db4\", \"signed_data_hash_hex\": \"cef84c59190d58a991b89ea5a4c8f89a6ff03adabbfef182c87f479e37d0fe33\", \"schnorr_signature_hex\": \"d3e3ba015abfd96410b5060ca60f2b904016c4b0cc6cee945744381ffb93f5a2cae56f20c8abf0deff1eb7ea0bbb48af666baa2b0382b63e105f5aeed75d1961\" } eotsd verify-schnorr-sig /home/babylon-testnet/cosmostation.json --btc-pk 17d33e18ab85b33050c763a44d8757dfe4e0a3c49e12911f65e0529c3cd224b6 --signature d3e3ba015abfd96410b5060ca60f2b904016c4b0cc6cee945744381ffb93f5a2cae56f20c8abf0deff1eb7ea0bbb48af666baa2b0382b63e105f5aeed75d1961 * keyring-file -> keyring-test\ub85c \uc218\uc815, \uc6d0\ubcf5 => Success! eotsd sign-schnorr /home/babylon-testnet/cosmostation.json --home /data/node/.eotsd --keyring-backend test --key-name cosmostation { \"key_name\": \"cosmostation\", \"pub_key_hex\": \"17d33e18ab85b33050c763a44d8757dfe4e0a3c49e12911f65e0529c3cd224b6\", \"signed_data_hash_hex\": \"cef84c59190d58a991b89ea5a4c8f89a6ff03adabbfef182c87f479e37d0fe33\", \"schnorr_signature_hex\": \"5b1802eddc43fa52efbd8f37d71f98409a49bcba1df318bc6f9c08cbaac306bedfa63f7d1733e9801d74163d6bcc462a21ea4edc9981139d0dca78c475a2874a\" } eotsd verify-schnorr-sig /home/babylon-testnet/cosmostation.json --btc-pk 17d33e18ab85b33050c763a44d8757dfe4e0a3c49e12911f65e0529c3cd224b6 --signature 5b1802eddc43fa52efbd8f37d71f98409a49bcba1df318bc6f9c08cbaac306bedfa63f7d1733e9801d74163d6bcc462a21ea4edc9981139d0dca78c475a2874a -> Verification is successful!","title":"Eotsd sign schnorr"},{"location":"chains/babylon/testnet/bbn-test-4/eotsd/eotsd.service/","text":"[Unit] ConditionPathExists=/home/babylon-testnet/go/bin/eotsd After=network.target [Service] Type=simple User=babylon-testnet Group=babylon-testnet ExecStart=/home/babylon-testnet/go/bin/eotsd start --home /data/node/.eotsd Restart=always RestartSec=3 LimitNOFILE=4096 # make sure log directory exists and owned by syslog PermissionsStartOnly=true ExecStartPre=/bin/mkdir -p /var/log/eotsd_bbn-test-4 ExecStartPre=/bin/chown syslog:adm /var/log/eotsd_bbn-test-4 ExecStartPre=/bin/chmod 755 /var/log/eotsd_bbn-test-4 StandardOutput=syslog StandardError=syslog SyslogIdentifier=eotsd_bbn-test-4 [Install] WantedBy=multi-user.target","title":"Eotsd.service"},{"location":"chains/babylon/testnet/bbn-test-4/eotsd/key-backup/","text":"eotsd keys add --home /data/node/.eotsd --key-name cosmostation --keyring-backend file --recover > Enter your mnemonic dirt room total defense clarify dress tuition code decrease horror another benefit tongue stick industry ship enact swim ketchup double pigeon infant wish odor Enter keyring passphrase (attempt 1/3): Re-enter keyring passphrase: 2024-05-17T04:30:18.938251Z info successfully created an EOTS key {\"key name\": \"cosmostation\", \"pk\": \"894add70131a47375ce48ff2adc969721c13b600f8726ad21ee018b9b97f4db4\"} New key for the BTC chain is created (mnemonic should be kept in a safe place for recovery): { \"name\": \"cosmostation\", \"pub_key_hex\": \"894add70131a47375ce48ff2adc969721c13b600f8726ad21ee018b9b97f4db4\", \"mnemonic\": \"dirt room total defense clarify dress tuition code decrease horror another benefit tongue stick industry ship enact swim ketchup double pigeon infant wish odor\" }","title":"Key backup"},{"location":"chains/babylon/testnet/bbn-test-4/fpd/fpd.service/","text":"[Unit] ConditionPathExists=/home/babylon-testnet/go/bin/fpd After=network.target [Service] Type=simple User=babylon-testnet Group=babylon-testnet ExecStart=/home/babylon-testnet/go/bin/fpd start --home /data/node/.fpd Restart=always RestartSec=3 LimitNOFILE=4096 # make sure log directory exists and owned by syslog PermissionsStartOnly=true ExecStartPre=/bin/mkdir -p /var/log/fpd_bbn-test-4 ExecStartPre=/bin/chown syslog:adm /var/log/fpd_bbn-test-4 ExecStartPre=/bin/chmod 755 /var/log/fpd_bbn-test-4 StandardOutput=syslog StandardError=syslog SyslogIdentifier=fpd_bbn-test-4 [Install] WantedBy=multi-user.target","title":"Fpd.service"},{"location":"chains/babylon/testnet/bbn-test-4/fpd/kering-test/351c8be98e2674f7322d5c2f02b760421c932bed.address/","text":"eyJhbGciOiJQQkVTMi1IUzI1NitBMTI4S1ciLCJjcmVhdGVkIjoiMjAyNC0wMy0xMSAwNjowODo1OS45MTMwMzcwMjkgKzAwMDAgVVRDIG09KzQwLjQ2OTczMDg1MSIsImVuYyI6IkEyNTZHQ00iLCJwMmMiOjgxOTIsInAycyI6IkRIQTZkZzJ3TzdvRmFQVk4ifQ.AGMO6-BCYYBX0vWIB70gXwXcA90UGH3OUyiYAH38E_VqVqa1aw-fgg.cDea90qRvjVYfC1J.WlctMNDhlyg00vWvKm_aIWTwM2WmdABLnqzwBOdbuFEkC5_U0pLxUY9Kr5-mTUxAJrf_RXZlwnqe5NDXMoH6yC-MoeGTWeN9DMOEZ7_aLyjk0iJdm0oWiELBZb7EsxN1K_GIoM2gXMMi0xPHqpmCNrAUnzJQN1Px26WKNpAlt-hXPBG8Z6-HoFFnYQrkzVTPUYt6u1qxpyVKjnIqB75L5-aj7x495I2bpzPlbBkmON4qN-1T56De615c-9y5fg.WJ5VxW7jjllfjzK-_Xcl-g","title":"351c8be98e2674f7322d5c2f02b760421c932bed.address"},{"location":"chains/babylon/testnet/bbn-test-4/fpd/kering-test/cosmostation.info/","text":"eyJhbGciOiJQQkVTMi1IUzI1NitBMTI4S1ciLCJjcmVhdGVkIjoiMjAyNC0wMy0xMSAwNjowODo1OS45MTA0MTQyOSArMDAwMCBVVEMgbT0rNDAuNDY3MTA4MTEyIiwiZW5jIjoiQTI1NkdDTSIsInAyYyI6ODE5MiwicDJzIjoiNmNFV016elgtZ2U0X1JEcyJ9.V-0bkrA1-PR1hQkQmPdaL3Bi9ziGTi6mp-tAKSOoxCx22Cr2Hnp1Sw.Xh9i0jWEC8dN31uW.sk4etP2XQBcboJat8LapZXDWn4fIutM5U3q9u_IyR_Uu34EhSv5QS-saAo5QmQH1FcX_eDxVRXDUI9Uwp5NRzFNI9_h75j4PYjf3KJL9OEYI25dYUliKajbTJHSkZK1jYILvVJ3eRxycfJfX1zbq02SPAIxsqahq2OZCITo5e92mnsEF6EVn6kO82CMyOt06JedKX1_Mru8Wkq2gkjYARqtc5esoT_-lycHTwKncTuQ22THuSbeVjGs1EjTaXUYD-QYrFG1Stol2rQMAclpme1Fke-3DzmrdI4qpeK3JyNcGtYFhbu81FMFfjY53osJlwstS7ows8-vG4VrHK5SIBOKZf7Bzd7NVStqE2g_nEv16R6lCyfvwYzvV23Ddm_LMk9n2WUp--8VYJtDgOe-fp_Yl_VXMVMTrFJ67YGGwnWDy553If5UQltEPkUQe1F3bFMC6JYIhYq111NAFb9JM.6-08MHhwHTOJAYD9f72XyA","title":"Cosmostation.info"},{"location":"chains/babylon/testnet/bbn-test-4/keyring-file/37e88082fc1263c8c5a99823d9c6bb8abf88121a.address/","text":"eyJhbGciOiJQQkVTMi1IUzI1NitBMTI4S1ciLCJjcmVhdGVkIjoiMjAyNC0wMy0xMiAwMjo0MToyMy41NzM2ODU0MSArMDAwMCBVVEMgbT0rNzE4NjcuMDAzODI0NDM1IiwiZW5jIjoiQTI1NkdDTSIsInAyYyI6ODE5MiwicDJzIjoiREd3MENOV3lfaFk3NnhKaCJ9.aBVleuyJk6Qic1Zs_5TWbEETUj4o5Ky4LBOYZzu76k2mFKw77_5xBw.8RCimye4lA_CAd-i.Kqv_ek44IfUJUBWZbNW5jYVhXS_ijeXOBkLFTAVmrETX005impblUKMpxDgfmdK3zM0K-fgGfmZZV84lm34Uw8YrFHagjcd12OkRupbtJs8zeqdA-0BBKggkVHCs-_6SQ6Cegons10UDRNx_5uLl7SitR7WseDj_KrufNm6WYR0qQfBlBP7gGLJgZiXah11ulnloDn8vIn99hCVJwifnKQc2Oy8M9sRtOKCtn2dCOjj2bEdd_IbkLdrKTU9Dqw.-ZZzFSmhaIv-m6zO3ZV_4Q","title":"37e88082fc1263c8c5a99823d9c6bb8abf88121a.address"},{"location":"chains/babylon/testnet/bbn-test-4/keyring-file/cosmostation.info/","text":"eyJhbGciOiJQQkVTMi1IUzI1NitBMTI4S1ciLCJjcmVhdGVkIjoiMjAyNC0wMy0xMiAwMjo0MToyMy41NzExMjYzMTkgKzAwMDAgVVRDIG09KzcxODY3LjAwMTI2NTM0NCIsImVuYyI6IkEyNTZHQ00iLCJwMmMiOjgxOTIsInAycyI6IlM1OUw2VjJsVXZLQ1VFYmEifQ.oTYs_NMsZzJCGIOY1HWiY3T8nDN4OtHuH9z7SHKiDA2ONFLDbgEtZQ.ITaUIID6D1EBGtbJ.worHlMyA63xsIhOKaRWoecqZ42fvhNoOYE6dTx1APsU47N78HRhGp-nBQZS90Lc21OB5KG6nT8klV2u0-f2vcpsc8YvJPReSxu_p70S7UG4jpWxb5-7ANMxP_VD0Z77cdTo6e262pz51vE2qc3r0VBL1RF4DXImKVHLLcqkYvNw8Ck4BLNPM7jMbI7lhL2Q8_Wf8oSJaWiC77GSYOYTRpYOgRTo9Cc_N9gYlbNv_pbiKzrJ6bDE4AqFvcxUgRZ0Z-ntKT3j0QojxnbCvwsSzM2Oj3zwmYR-BuwQ4nabH70SIUhpq5gGJvz4H1kcft2lzpM-KRxPZyoKkPOwpAUZaRk2dBKNKvPChg09jfK0UQ0a4ALzS8orTOXd3gU1Za9R0-AImXYyuCm9EnCO8FgdZ8qsZviGslgwDYCbyFGJNaZhSMDDh-62OAzYqhQYnr1uhkyoZfbeTm_GNU0B0NPPK.qI1iImS6OiRSJGEexphvRQ","title":"Cosmostation.info"},{"location":"chains/babylon/testnet/bbn-test-5/Q%26A/","text":"Q: is it okay to use the same wallet for fpd and stakerd (from security perspective it's better to have two wallets; i'm interested if there's a technical possibility to do so)? A: The staker public key should be different than the finality provider public key that receives the delegation. That being said, you can use the same key pair for the finality provider and the staker, given that the above condition is satisfied. However, this is ** strongly ** discouraged. The finality provider private key will be exposed in the event of slashing, meaning that all funds that are being held by the finality provider key are exposed to retrieval by anyone. For this reason, the finality provider private key should hold no funds. Q: FPD(Finality Provider Daemon)\uc640 Stakerd\uc5d0 \ub3d9\uc77c\ud55c \uc9c0\uac11\uc744 \uc0ac\uc6a9\ud558\ub294 \uac83\uc774 \uad1c\ucc2e\uc744\uae4c\uc694? (\ubcf4\uc548 \uad00\uc810\uc5d0\uc11c\ub294 \ub450 \uac1c\uc758 \uc9c0\uac11\uc744 \uc0ac\uc6a9\ud558\ub294 \uac83\uc774 \ub354 \uc88b\uc9c0\ub9cc, \uae30\uc220\uc801\uc73c\ub85c \uac00\ub2a5\ud55c\uc9c0 \uad81\uae08\ud569\ub2c8\ub2e4.) A: Staker\uc758 \uacf5\uac1c\ud0a4\ub294 \uc704\uc784\uc744 \ubc1b\ub294 Finality Provider\uc758 \uacf5\uac1c\ud0a4\uc640 \ub2ec\ub77c\uc57c \ud569\ub2c8\ub2e4. \uc774\ub294 \uac15\ub825\ud788 \uad8c\uc7a5\ub418\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. \uc2ac\ub798\uc2f1(Slashing) \ubc1c\uc0dd \uc2dc Finality Provider\uc758 \uac1c\uc778\ud0a4\uac00 \ub178\ucd9c\ub418\uba70, \uc774 \ud0a4\uac00 \ubcf4\uc720\ud55c \ubaa8\ub4e0 \uc790\uae08\uc774 \ub204\uad6c\ub4e0\uc9c0 \uc811\uadfc \uac00\ub2a5\ud55c \uc0c1\ud0dc\uac00 \ub429\ub2c8\ub2e4. \ub530\ub77c\uc11c Finality Provider\uc758 \uac1c\uc778\ud0a4\ub294 \uc790\uae08\uc744 \ubcf4\uc720\ud558\uc9c0 \uc54a\ub3c4\ub85d \ud574\uc57c \ud569\ub2c8\ub2e4. \uae30\uc220\uc801\uc73c\ub85c\ub294 \uac00\ub2a5\ud558\uc9c0\ub9cc, \ubcf4\uc548\uc0c1\uc758 \uc774\uc720\ub85c Finality Provider\uc640 Staker\uc5d0 \uc11c\ub85c \ub2e4\ub978 \uc9c0\uac11\uc744 \uc0ac\uc6a9\ud558\ub294 \uac83\uc774 \ub354 \uc548\uc804\ud569\ub2c8\ub2e4. \ucd9c\ucc98: https://cosmostation.slack.com/archives/C06CJ0J6UJ3/p1719399186982409?thread_ts=1719398811.668349&cid=C06CJ0J6UJ3 Q: The finality provider private key will be exposed in the event of slashing, meaning that all funds that are being held by the finality provider key are exposed to retrieval by anyone. A: I mean they Babylon key pairs created by keys verb in the CLIs. Ah for Babylon key pairs you can use the same without major concerns In the above, I\u2019m referring to the Bitcoin wallet. do you guys plan to release any other backend than test for the sidecars? it seems like test is passwordless, which is concerning We use test as the programs need to automatically submit transactions. If we use an encrypted type of back-end, the keyring will need to be unlocked each time (e.g. every time fpd submits a vote). Not sure if there are options for keeping an encrypted keyring unlocked. Q: \uc2ac\ub798\uc2f1(Slashing) \ubc1c\uc0dd \uc2dc Finality Provider\uc758 \uac1c\uc778\ud0a4\uac00 \ub178\ucd9c\ub418\uba70, \ud574\ub2f9 \ud0a4\uac00 \ubcf4\uc720\ud55c \ubaa8\ub4e0 \uc790\uae08\uc774 \ub204\uad6c\ub4e0\uc9c0 \uc811\uadfc \uac00\ub2a5\ud55c \uc0c1\ud0dc\uac00 \ub41c\ub2e4\ub294 \uc758\ubbf8\ub294 \ubb34\uc5c7\uc778\uac00\uc694? \uc81c3\uc790\uac00 \uc5b4\ub5bb\uac8c \uc774\ub7f0 \uc790\uae08\uc744 \uac00\uc838\uac08 \uc218 \uc788\ub098\uc694? A: CLI\uc758 keys \uba85\ub839\uc5b4\ub85c \uc0dd\uc131\ub41c Babylon \ud0a4 \uc30d\uc744 \uc758\ubbf8\ud569\ub2c8\ub2e4. Babylon \ud0a4 \uc30d\uc758 \uacbd\uc6b0 \ub3d9\uc77c\ud55c \ud0a4\ub97c \uc0ac\uc6a9\ud574\ub3c4 \ud070 \ubb38\uc81c\uac00 \uc5c6\uc744 \uac83\uc785\ub2c8\ub2e4. \uc704\uc5d0\uc11c \uc5b8\uae09\ud55c \ub0b4\uc6a9\uc740 Bitcoin \uc9c0\uac11\uc5d0 \uad00\ud55c \uc774\uc57c\uae30\uc600\uc2b5\ub2c8\ub2e4. Q: \uc0ac\uc774\ub4dc\uce74(Sidecars)\uc5d0\uc11c \ud14c\uc2a4\ud2b8 \uc678\uc758 \ub2e4\ub978 \ubc31\uc5d4\ub4dc\ub97c \ucd9c\uc2dc\ud560 \uacc4\ud68d\uc774 \uc788\ub098\uc694? \ud604\uc7ac \ud14c\uc2a4\ud2b8\ub294 \ube44\ubc00\ubc88\ud638 \uc5c6\uc774 \ub3d9\uc791\ud558\ub294\ub370, \uc774\ub294 \ubcf4\uc548\uc0c1 \uc6b0\ub824\ub429\ub2c8\ub2e4. A: \ud14c\uc2a4\ud2b8\ub97c \uc0ac\uc6a9\ud558\ub294 \uc774\uc720\ub294 \ud504\ub85c\uadf8\ub7a8\uc774 \uc790\ub3d9\uc73c\ub85c \ud2b8\ub79c\uc7ad\uc158\uc744 \uc81c\ucd9c\ud574\uc57c \ud558\uae30 \ub54c\ubb38\uc785\ub2c8\ub2e4. \uc554\ud638\ud654\ub41c \ubc31\uc5d4\ub4dc\ub97c \uc0ac\uc6a9\ud558\uba74 \ud0a4\ub9c1(Keyring)\uc744 \ub9e4\ubc88 \uc7a0\uae08 \ud574\uc81c\ud574\uc57c \ud558\uba70, \uc608\ub97c \ub4e4\uc5b4 FPD\uac00 \ud22c\ud45c\ub97c \uc81c\ucd9c\ud560 \ub54c\ub9c8\ub2e4 \uc774 \uacfc\uc815\uc774 \ud544\uc694\ud569\ub2c8\ub2e4. \uc554\ud638\ud654\ub41c \ud0a4\ub9c1\uc744 \uc9c0\uc18d\uc801\uc73c\ub85c \uc7a0\uae08 \ud574\uc81c \uc0c1\ud0dc\ub85c \uc720\uc9c0\ud560 \uc218 \uc788\ub294 \uc635\uc158\uc774 \uc788\ub294\uc9c0\ub294 \ud655\uc2e4\ud558\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. -> Babylon \ud0a4 \uc30d\uc740 \ub3d9\uc77c\ud55c \ud0a4\ub97c \uc0ac\uc6a9\ud574\ub3c4 \ubcf4\uc548\uc0c1 \ud070 \ubb38\uc81c\uac00 \uc5c6\uc9c0\ub9cc, Bitcoin \uc9c0\uac11\uc758 \uacbd\uc6b0 Finality Provider \ud0a4\uac00 \uc2ac\ub798\uc2f1\uc73c\ub85c \ub178\ucd9c\ub418\uba74 \uc81c3\uc790\uac00 \uc790\uae08\uc744 \uac00\uc838\uac08 \uc704\ud5d8\uc774 \uc788\uc2b5\ub2c8\ub2e4. \ud14c\uc2a4\ud2b8 \ubc31\uc5d4\ub4dc\ub294 \uc790\ub3d9 \ud2b8\ub79c\uc7ad\uc158 \uc81c\ucd9c\uc744 \uc704\ud574 \ube44\ubc00\ubc88\ud638 \uc5c6\uc774 \uc124\uc815\ub418\uc5b4 \uc788\uc73c\uba70, \uc554\ud638\ud654\ub41c \ubc31\uc5d4\ub4dc\uc758 \uc0ac\uc6a9 \uac00\ub2a5\uc131\uc740 \ucd94\uac00 \ub17c\uc758\uac00 \ud544\uc694\ud569\ub2c8\ub2e4. \ucd9c\ucc98: https://cosmostation.slack.com/archives/C06CJ0J6UJ3/p1719399186982409?thread_ts=1719398811.668349&cid=C06CJ0J6UJ3 \u2757\ufe0f BLS-KEY https://en.wikipedia.org/wiki/BLS_digital_signature -> bls_key\uac00 priv_validator_key.json\uc5d0 \ud3ec\ud568\ub418\uc5b4\uc788\uc9c0 \uc54a\uc73c\uba74 \u201cBLS signer is not in the validator set\u201d log \ubc1c\uc0dd create-bls-key -> \uacc4\uc18d \uc2dc\ub3c4\ud558\uba74 \ubb34\uc791\uc704 \uc0dd\uc131\ub428 => \ub531 \ud55c \ubc88 \uc0dd\uc131 \ud6c4 backup \uc11c\uba85\uc774 BLS (Boneh-Lynn-Shacham) \ud615\ud0dc\ub85c \ub4e4\uc5b4\uac04\ub2e4\ub294 \uc758\ubbf8\ub294 Babylon \uccb4\uc778\uc774 BLS \uc11c\uba85 \uc54c\uace0\ub9ac\uc998\uc744 \uc0ac\uc6a9\ud558\uc5ec \ubc38\ub9ac\ub370\uc774\ud130 \uc11c\uba85\uc744 \ucc98\ub9ac\ud558\uace0 \uae30\ub85d\ud55c\ub2e4\ub294 \uac83\uc744 \ub73b\ud569\ub2c8\ub2e4. BLS \uc11c\uba85\uc740 \uc554\ud638\ud559\uc801\uc73c\ub85c \ub9e4\uc6b0 \ud6a8\uc728\uc801\uc774\uace0 \uac15\ub825\ud55c \uc11c\uba85 \ubc29\uc2dd\uc73c\ub85c, \ud2b9\ud788 \uc9d1\uacc4 \uc11c\uba85(Aggregate Signature)\uc744 \uc9c0\uc6d0\ud558\ub294 \uac83\uc774 \ud070 \ud2b9\uc9d5\uc785\ub2c8\ub2e4. BLS \uc11c\uba85\uc758 \uc8fc\uc694 \ud2b9\uc9d5 \uc9d1\uacc4 \uc11c\uba85(Aggregate Signature): BLS \uc11c\uba85\uc740 \uc5ec\ub7ec \uac1c\uc758 \uac1c\ubcc4 \uc11c\uba85\uc744 \ud558\ub098\uc758 \ub2e8\uc77c \uc11c\uba85\uc73c\ub85c \uc9d1\uacc4\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. Babylon\uc5d0\uc11c\ub294 \ube14\ub85d\uc5d0 \uc11c\uba85\ud55c \ubc38\ub9ac\ub370\uc774\ud130\ub4e4\uc758 \uac1c\ubcc4 \uc11c\uba85(\uc608: 2/3 \uc774\uc0c1\uc758 \uc11c\uba85)\uc744 \ud558\ub098\uc758 BLS \uc9d1\uacc4 \uc11c\uba85\uc73c\ub85c \ud569\uce69\ub2c8\ub2e4. \uc774\ub85c \uc778\ud574 \ube14\ub85d\uccb4\uc778 \ub370\uc774\ud130\uc758 \ud06c\uae30\uac00 \uc904\uc5b4\ub4e4\uace0, \uc11c\uba85\uc758 \uac80\uc99d\uc774 \ub354\uc6b1 \ud6a8\uc728\uc801\uc73c\ub85c \uc774\ub8e8\uc5b4\uc9d1\ub2c8\ub2e4. \uac04\uacb0\ud55c \uc11c\uba85 \ud06c\uae30: BLS \uc11c\uba85\uc740 \ud56d\uc0c1 \uace0\uc815\ub41c \ud06c\uae30\ub97c \uac00\uc9d1\ub2c8\ub2e4(\uc77c\ubc18\uc801\uc73c\ub85c 48\ubc14\uc774\ud2b8). \ub530\ub77c\uc11c \ub9ce\uc740 \ubc38\ub9ac\ub370\uc774\ud130\uac00 \uc11c\uba85\ud574\ub3c4 \ube14\ub85d \ud06c\uae30\uac00 \ud06c\uac8c \uc99d\uac00\ud558\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. \uac80\uc99d \ud6a8\uc728\uc131: \uc9d1\uacc4\ub41c \uc11c\uba85\uc740 \ud558\ub098\uc758 \uc11c\uba85\ucc98\ub7fc \uac80\uc99d\ub429\ub2c8\ub2e4. \uc989, BLS \uc11c\uba85 \uc54c\uace0\ub9ac\uc998\uc740 \uc5ec\ub7ec \uc11c\uba85\uc744 \uac1c\ubcc4\uc801\uc73c\ub85c \uac80\uc99d\ud560 \ud544\uc694 \uc5c6\uc774 \ud55c \ubc88\uc758 \uac80\uc99d \uacfc\uc815\uc73c\ub85c \uc9d1\uacc4 \uc11c\uba85\uc744 \ud655\uc778\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. BLS key\uac00 \uc5c6\uc744 \uc2dc pre-commit\uc774 \uc548\ub418\ub294 \ubc84\uadf8 \uc874\uc7ac, \ucd94\ud6c4 cli\ub85c \uc5c5\ub370\uc774\ud2b8 \ud558\ub3c4\ub85d \uc5f0\uad6c\ud574\ubcf4\uaca0\ub2e4(24.05.) \ucd9c\ucc98: https://cosmostation.slack.com/archives/C07ES6D6Y0H/p1715179792303519 -> \ud604\uc7ac\ub85c\uc11c\ub294 \ubc31\uc5c5\uc798\ud574\uc57c\ud568 Q: I noticed that the babylond create-bls-key command generates a BLS key pair in the priv_validator_key.json and that testing the command multiple times updates the BLS key. I understand that missing the BLS key may lead to a pre-commit bug. Should validators run the create-bls-key command just once, back up the priv_validator_key.json , and manage it separately? Also, is it possible to update the BLS key if needed? A: Once the validator is registered on Babylon, then the BLS key is bonded with the Comet consensus key, and cannot be changed. Just treat it the same as the ed25519 key Q: babylond create-bls-key \uba85\ub839\uc5b4\uac00 priv_validator_key.json\uc5d0 BLS \ud0a4 \uc30d\uc744 \uc0dd\uc131\ud558\uba70, \ud574\ub2f9 \uba85\ub839\uc5b4\ub97c \uc5ec\ub7ec \ubc88 \ud14c\uc2a4\ud2b8\ud558\uba74 BLS \ud0a4\uac00 \uc5c5\ub370\uc774\ud2b8\ub418\ub294 \uac83\uc744 \ud655\uc778\ud588\uc2b5\ub2c8\ub2e4. BLS \ud0a4\uac00 \ub204\ub77d\ub418\uba74 pre-commit \ubc84\uadf8\uac00 \ubc1c\uc0dd\ud560 \uc218 \uc788\ub2e4\ub294 \uc810\uc744 \uc774\ud574\ud588\uc2b5\ub2c8\ub2e4. \uadf8\ub807\ub2e4\uba74, \ubc38\ub9ac\ub370\uc774\ud130\ub4e4\uc774 create-bls-key \uba85\ub839\uc5b4\ub97c \ud55c \ubc88\ub9cc \uc2e4\ud589\ud55c \ud6c4, priv_validator_key.json \ud30c\uc77c\uc744 \ubc31\uc5c5\ud558\uc5ec \ubcc4\ub3c4\ub85c \uad00\ub9ac\ud574\uc57c \ud560\uae4c\uc694? \ub610\ud55c, \ud544\uc694 \uc2dc BLS \ud0a4\ub97c \uc5c5\ub370\uc774\ud2b8\ud560 \uc218 \uc788\ub294\uc9c0\ub3c4 \uad81\uae08\ud569\ub2c8\ub2e4. A: \ubc38\ub9ac\ub370\uc774\ud130\uac00 Babylon\uc5d0 \ub4f1\ub85d\ub418\uba74, BLS \ud0a4\ub294 Comet \ud569\uc758 \ud0a4\uc640 \uc5f0\ub3d9\ub418\uba70 \ubcc0\uacbd\ud560 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4. ed25519 \ud0a4\uc640 \ub3d9\uc77c\ud558\uac8c \uad00\ub9ac\ud558\uc2dc\uba74 \ub429\ub2c8\ub2e4. \u2757\ufe0f Q: If I join bbn-test-5 without backing up both the eotsd.db and fpd.db but recover the keys, will that cause any issues? A: No. \\*.db does not matter. Only the keys matter -> \uc544\ub2c8\uc694. \\*.db \ud30c\uc77c\uc740 \uc911\uc694\ud558\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. \ud0a4\ub9cc \uc911\uc694\ud569\ub2c8\ub2e4. \ucd9c\ucc98: https://cosmostation.slack.com/archives/C07ES6D6Y0H/p1735814594392219?thread_ts=1731353479.950749&cid=C07ES6D6Y0H \u2757\ufe0f Q: When running the following commands, if the same mnemonic is used, should the addresses be the same? \ucd9c\ucc98: https://cosmostation.slack.com/archives/C07ES6D6Y0H/p1735815155919889?thread_ts=1731353479.950749&cid=C07ES6D6Y0H babylond keys add validator --recover --keyring-backend test vs eotsd keys add validator --recover --keyring-backend test A: Please stick with eotsd keys as we did some modification to the eotsd keys add commands, e.g., the pk-keyname mapping is stored in db after creation Q: In this case, is it fine if the eotsd address is different? babylond keys add validator --recover --keyring-backend test - address: bbn1x5wgh6vwye60wv3dtshs9dmqggwfx2ldy7agnk name: validator pubkey: '{\"@type\":\"/cosmos.crypto.secp256k1.PubKey\",\"key\":\"AnDGSF7VFQs9VKEceS6cWhfajxh/mmv+Mbu9bCM9BDzK\"}' type: local eotsd keys add validator --recover --keyring-backend test - address: bbn1pxkhl56u5qdgu2rz2mv9z2ufq8gcl9umcf53vm name: validator pubkey: '{\"@type\":\"/cosmos.crypto.secp256k1.PubKey\",\"key\":\"A4lK3XATGkc3XOSP8q3JaXIcE7YA+HJq0h7gGLm5f020\"}' pubkey_hex: 894add70131a47375ce48ff2adc969721c13b600f8726ad21ee018b9b97f4db4 type: local fpd keys add validator --recover --keyring-backend test {\"name\":\"validator\",\"type\":\"local\",\"address\":\"bbn1x5wgh6vwye60wv3dtshs9dmqggwfx2ldy7agnk\",\"pubkey\":\"{\\\"@type\\\":\\\"/cosmos.crypto.secp256k1.PubKey\\\",\\\"key\\\":\\\"AnDGSF7VFQs9VKEceS6cWhfajxh/mmv+Mbu9bCM9BDzK\\\"}\"} - A1: Oh yes, it is fine. The reason why eotsd keys add generates different pk/address with other programs using the same mnemonic is because eotsd keys add uses the master key if hdpath is given empty, while the other two will use a default hdpath \ub124, \ub9de\uc2b5\ub2c8\ub2e4. eotsd keys add\uac00 \ub3d9\uc77c\ud55c \ub2c8\ubaa8\ub2c9\uc744 \uc0ac\uc6a9\ud558\ub294 \ub2e4\ub978 \ud504\ub85c\uadf8\ub7a8\uacfc \ub2e4\ub978 \uacf5\uac1c \ud0a4(PK)\ub098 \uc8fc\uc18c\ub97c \uc0dd\uc131\ud558\ub294 \uc774\uc720\ub294, eotsd keys add\uac00 HD \uacbd\ub85c\uac00 \ube44\uc5b4 \uc788\uc744 \uacbd\uc6b0 \ub9c8\uc2a4\ud130 \ud0a4\ub97c \uc0ac\uc6a9\ud558\ub294 \ubc18\uba74, \ub2e4\ub978 \ub450 \ud504\ub85c\uadf8\ub7a8\uc740 \uae30\ubcf8 HD \uacbd\ub85c\ub97c \uc0ac\uc6a9\ud558\uae30 \ub54c\ubb38\uc785\ub2c8\ub2e4. \ub530\ub77c\uc11c, \uc6b0\ub9ac\ub294 \uac01 \ud504\ub85c\uadf8\ub7a8\ub9c8\ub2e4 \uc11c\ub85c \ub2e4\ub978 \ud0a4\ub97c \uc0ac\uc6a9\ud558\ub294 \uac83\uc744 \uad8c\uc7a5\ud569\ub2c8\ub2e4. \uc774\ub294 \uc7a0\uc7ac\uc801\uc778 \ucda9\ub3cc\uc744 \ubc29\uc9c0\ud558\uace0 \ubcf4\uc548\uc131\uc744 \uac15\ud654\ud558\ub294 \ub370 \ub3c4\uc6c0\uc774 \ub429\ub2c8\ub2e4. - A2: So, if the same hd path is used in all of those keys, yes! ex: --hd-path \"m/44'/118'/0'/0\" But, specifically for eotsd our old command version allowed to create the keys with a master key, the babylond and fpd if no hd-path is set it creates one to avoid using the master key as a derivation to be retro-compatible with already mainnet eots keys created, we had to allow eotsd to create keys with a master key \ub124, \ub3d9\uc77c\ud55c HD \uacbd\ub85c\ub97c \ubaa8\ub4e0 \ud0a4\uc5d0\uc11c \uc0ac\uc6a9\ud558\uba74 \uac00\ub2a5\ud569\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4, --hd-path \"m/44'/118'/0'/0\" \uac19\uc740 \uacbd\uc6b0\uc785\ub2c8\ub2e4. \ud558\uc9c0\ub9cc, \ud2b9\ud788 eotsd\uc758 \uacbd\uc6b0, \uc774\uc804 \uba85\ub839\uc5b4 \ubc84\uc804\uc740 \ub9c8\uc2a4\ud130 \ud0a4\ub85c \ud0a4\ub97c \uc0dd\uc131\ud560 \uc218 \uc788\ub3c4\ub85d \ud5c8\uc6a9\ud588\uc2b5\ub2c8\ub2e4. babylond\uc640 fpd\uc758 \uacbd\uc6b0, HD \uacbd\ub85c\uac00 \uc124\uc815\ub418\uc9c0 \uc54a\uc73c\uba74 \uae30\ubcf8\uc801\uc73c\ub85c \ub9c8\uc2a4\ud130 \ud0a4\ub97c \uc0ac\uc6a9\ud558\uc9c0 \uc54a\ub3c4\ub85d HD \uacbd\ub85c\ub97c \uc0dd\uc131\ud569\ub2c8\ub2e4. \uc774\ubbf8 \uba54\uc778\ub137 eots \ud0a4\uac00 \uc0dd\uc131\ub41c \uc0c1\ud0dc\uc5d0\uc11c \ud558\uc704 \ud638\ud658\uc131\uc744 \uc720\uc9c0\ud558\ub824\uba74, eotsd\uac00 \ub9c8\uc2a4\ud130 \ud0a4\ub85c \ud0a4\ub97c \uc0dd\uc131\ud560 \uc218 \uc788\ub3c4\ub85d \ud5c8\uc6a9\ud574\uc57c \ud588\uc2b5\ub2c8\ub2e4. \ucd9c\ucc98: https://cosmostation.slack.com/archives/C07ES6D6Y0H/p1735819121000289?thread_ts=1723749022.237139&cid=C07ES6D6Y0H \u2757\ufe0fmigration \uc2dc eotsd/data/eots.db, fpd/data/finality-provider.db \ub3c4 \ud568\uaed8 \ubc31\uc5c5 \ud6c4 \uc62e\uaca8\uc57c\ud568 \u2757\ufe0fEOTSD Q: How to migrate them to a new server? Do we need to move/copy/backup the keys AND the eots.db? Is there a recommended way to failover? I see you covered some of this on the post above, but to further expand on the matter: fpd create-finality-provider creates two unique keys/wallets; what\u2019s the purpose of each of these keys and why does it create keys in both locations? Do we need to back them up? If we need to ever migrate and/or failover our fpd, what\u2019s the correct way to do this? BTC staking rewards flow once fully launched: On the stakers side; how will stakers receive their rewards and what is the process of claiming them? On the operators side: Where do rewards for Finality Providers go? What keys/accounts receive the rewards and how to set it? How to claim/redeem? A: Hey, thank you for your questions. As we are actively working on Phase 2, I can only have tentative answers: 1. Yes, currently you need to backup both the keyring file and eots.db. A basic failover with minimal interruption would look like: a. Stop the running eots daemon b. Copy these 2 files to the new daemon c. Start the new daemon and connect your FP to it 2. EOTSD and FPD are expected to be running on separate machines for safety. EOTS key is a BTC key for generating randomness and signing finality votes, while the key in FPD is a Babylon key for signing the vote message itself. They are equally important for running a finality provider, so we need to back them up. They currently share the same name. Maybe we can add different prefix to them for differenciation. 3. As said in 2, EOTSD can be considered as a remote signer of FPD. You may also be able to choose EOTS services from a third-party. 4. Answered in 2 5. You need also backup the fpd.db and the keyring file. Will have a runbook ready before the next testnet 6. This part is WIP but in general, stakers can claim the reward by talking directly to Babylon. The reward will go to its Babylon account with a poof that it also holds the BTC private key that relates to the BTC staking. 7. After phase-2 launch, finality providers will need to register themselves on Babylon by bonding the EOTS key and the Babylon key. All the reward will go to the Babylon account. The claiming part is WIP. EOTSD \ub9c8\uc774\uadf8\ub808\uc774\uc158: - \ubc31\uc5c5 \ud544\uc694 \ud30c\uc77c: keyring \ud30c\uc77c\uacfc eots.db\ub97c \ubc31\uc5c5\ud574\uc57c \ud569\ub2c8\ub2e4. - \ud398\uc77c\uc624\ubc84 \uc808\ucc28: - \uc2e4\ud589 \uc911\uc778 EOTS \ub370\ubaac\uc744 \uc911\uc9c0. - \uc704 \ud30c\uc77c\ub4e4\uc744 \uc0c8\ub85c\uc6b4 \uc11c\ubc84\ub85c \ubcf5\uc0ac. - \uc0c8\ub85c\uc6b4 \ub370\ubaac\uc744 \uc2dc\uc791\ud558\uace0 Finality Provider(FP)\uc640 \uc5f0\uacb0. EOTSD\uc640 FPD \ubd84\ub9ac: \uc548\uc804\uc744 \uc704\ud574 EOTSD\uc640 FPD\ub97c \ubcc4\ub3c4\uc758 \uba38\uc2e0\uc5d0\uc11c \uc2e4\ud589\ud574\uc57c \ud569\ub2c8\ub2e4. EOTS \ud0a4: \ube44\ud2b8\ucf54\uc778 \ud0a4\ub85c, \ub79c\ub364 \uac12 \uc0dd\uc131 \ubc0f \ucd5c\uc885\uc131 \ud22c\ud45c \uc11c\uba85\uc5d0 \uc0ac\uc6a9. FPD \ud0a4: Babylon \ud0a4\ub85c, \ud22c\ud45c \uba54\uc2dc\uc9c0 \uc11c\uba85\uc5d0 \uc0ac\uc6a9. \ub450 \ud0a4 \ubaa8\ub450 \uc911\uc694\ud558\uba70, \uc774\ub984\uc774 \ub3d9\uc77c\ud558\ubbc0\ub85c \uad6c\ubd84\uc744 \uc704\ud574 \ubcc4\ub3c4\uc758 \uc811\ub450\uc0ac\ub97c \ucd94\uac00\ud558\ub294 \ubc29\uc548 \uac80\ud1a0 \uc911. EOTSD\uc758 \uc5ed\ud560: EOTSD\ub294 FPD\uc758 \uc6d0\uaca9 \uc11c\uba85\uc790(remote signer) \uc5ed\ud560\uc744 \ud558\uba70, \uc11c\ub4dc\ud30c\ud2f0 \uc11c\ube44\uc2a4\ub97c \uc120\ud0dd\ud558\ub294 \uac83\ub3c4 \uac00\ub2a5. FPD \ub9c8\uc774\uadf8\ub808\uc774\uc158: - \ubc31\uc5c5 \ud544\uc694 \ud30c\uc77c: fpd.db\uc640 keyring \ud30c\uc77c\ub3c4 \ubc31\uc5c5 \ud544\uc694. - \ub2e4\uc74c \ud14c\uc2a4\ud2b8\ub137 \uc774\uc804\uc5d0 \ub7f0\ubd81(runbook)\uc774 \uc81c\uacf5\ub420 \uc608\uc815. BTC \uc2a4\ud14c\uc774\ud0b9 \ubcf4\uc0c1 \ud750\ub984: \uc2a4\ud14c\uc774\ucee4: \uc2a4\ud14c\uc774\ucee4\ub294 Babylon\uacfc \uc9c1\uc811 \uc0c1\ud638\uc791\uc6a9\ud558\uc5ec \ubcf4\uc0c1\uc744 \uccad\uad6c. \ubcf4\uc0c1\uc740 \uc2a4\ud14c\uc774\ucee4\uc758 Babylon \uacc4\uc815\uc73c\ub85c \uc9c0\uae09\ub418\uba70, BTC \uac1c\uc778 \ud0a4 \uc18c\uc720 \uc99d\uba85\uc774 \ud544\uc694. Finality Provider: Phase-2 \ucd9c\uc2dc \ud6c4, Finality Provider\ub294 EOTS \ud0a4\uc640 Babylon \ud0a4\ub97c \ubc14\uc778\ub529\ud558\uc5ec Babylon\uc5d0 \ub4f1\ub85d\ud574\uc57c \ud568. \ubcf4\uc0c1\uc740 Babylon \uacc4\uc815\uc73c\ub85c \uc9c0\uae09\ub418\uba70, \ubcf4\uc0c1 \uccad\uad6c \ubc29\uc2dd\uc740 \ud604\uc7ac \uc791\uc5c5 \uc9c4\ud589 \uc911(WIP). \ucd9c\ucc98: https://cosmostation.slack.com/archives/C07ES6D6Y0H/p1731353489383059?thread_ts=1731353479.950749&cid=C07ES6D6Y0H \u2757\ufe0f finality-provider Finality Provider\uc758 \ub4f1\ub85d\uc740 Extractable-One-Time-Signature (EOTS) \ud0a4 \uc30d\uc744 \uc0dd\uc131\ud558\ub294 \uac83\uc73c\ub85c \uc2dc\uc791\ub429\ub2c8\ub2e4. \uc774 \ud0a4 \uc30d\uc740 finality provider\uc758 \uc2dd\ubcc4\uc790\ub85c \uc0ac\uc6a9\ub429\ub2c8\ub2e4. EOTS \uba54\ucee4\ub2c8\uc998\uc740 \ube44\ud2b8\ucf54\uc778\uc5d0\uc11c \uc0ac\uc6a9\ub418\ub294 \uc11c\uba85 \ubc29\uc2dd\uc778 Schnorr \uc11c\uba85\uc744 \uae30\ubc18\uc73c\ub85c \uad6c\ucd95\ub418\uc5c8\uc2b5\ub2c8\ub2e4. \uc774\uc5d0 \ub300\ud55c \uc790\uc138\ud55c \ub0b4\uc6a9\uc740 Bitcoin Staking Light Paper\uc5d0 \uc124\uba85\ub418\uc5b4 \uc788\uc2b5\ub2c8\ub2e4. Phase-1\uc5d0\uc11c\ub294 \ucd5c\uc885\uc131 \uc81c\uacf5\uc790\ub4e4\uc774 EOTS \ud0a4 \uc30d\uc744 \uc0dd\uc131\ud558\uace0, fianlity provider \uc815\ubcf4\ub97c \uc11c\uba85\ud558\uae30\ub9cc \ud558\uba74 \ub429\ub2c8\ub2e4. \uc774\ud6c4 \ub2e8\uacc4\uc5d0\uc11c\ub294 finality provider\ub4e4\uc774 \uc790\uc2e0\uc758 EOTS \ud0a4\ub97c \uc0ac\uc6a9\ud558\uc5ec Finality Provider Program\uc744 \uc801\uadf9\uc801\uc73c\ub85c \uc2e4\ud589\ud558\uace0, \uc774\ub97c \ud1b5\ud574 PoS \uccb4\uc778\uc5d0 \uacbd\uc81c\uc801 \ubcf4\uc548\uc744 \uc81c\uacf5\ud558\uba70 \uc218\uc218\ub8cc \uc218\uc775\uc744 \uc5bb\uc744 \uac83\uc73c\ub85c \uae30\ub300\ub429\ub2c8\ub2e4.","title":"Q&A"},{"location":"chains/babylon/testnet/bbn-test-5/babylond/","text":"babylon-testnet-5 https://github.com/babylonlabs-io/networks/tree/main/bbn-test-5 https://docs.google.com/document/d/13G3J-01iub5KY52z34ug8LiJB-aUbgIjPNxGp91j690/edit?tab=t.0 https://docs.google.com/document/d/1ONiSEkYCU9Cew-cxlzIfKyroIwHc2q_o2Bg2JnJTfHA/edit?tab=t.0 * make install BABYLON_BUILD_OPTIONS=\"testnet\" make install * genesis wget https://raw.githubusercontent.com/babylonlabs-io/networks/refs/heads/main/bbn-test-5/network-artifacts/genesis.json * babylond keys add validator --home /data/node/.babylond --keyring-backend test --recover - address: bbn1x5wgh6vwye60wv3dtshs9dmqggwfx2ldy7agnk name: validator pubkey: '{\"@type\":\"/cosmos.crypto.secp256k1.PubKey\",\"key\":\"AnDGSF7VFQs9VKEceS6cWhfajxh/mmv+Mbu9bCM9BDzK\"}' type: local * babylond create-bls-key bbn1x5wgh6vwye60wv3dtshs9dmqggwfx2ldy7agnk --home /data/node/.babylond priv_validator_key.json (with bls_key) { \"acc_address\": \"bbn1x5wgh6vwye60wv3dtshs9dmqggwfx2ldy7agnk\", \"address\": \"01458B61F0D7DE6E90798FE8C370413D718EB34C\", \"pub_key\": { \"type\": \"tendermint/PubKeyEd25519\", \"value\": \"LKwKvQPVTwxwW4UDpyIvGW8Sa9sUdaxhhhVdOigrEyA=\" }, \"priv_key\": { \"type\": \"tendermint/PrivKeyEd25519\", \"value\": \"wvh5A1C7zG+GrUyhOmbZL/PnGDeZnyaMOgtESnrd6kMsrAq9A9VPDHBbhQOnIi8ZbxJr2xR1rGGGFV06KCsTIA==\" }, \"bls_pub_key\": \"kpMYhsluTmPmQURZrDRE8oNBdcYB2U4zSDn0azPu/QodbY8qjN1lJmWTc0+40qFnAukyRgZhx2Ue79NDvEy3LNt+FNliJhTxWlSygp/cfiOkjOXt3TzWJQGPJrxcN37o\", \"bls_priv_key\": \"EL+QUWgi/US5V4E6/2DFIrm0EyoGEQxHtlAa1H7Ta1A=\" } babylond tendermint show-validator --home $NODE_HOME {\"@type\":\"/cosmos.crypto.ed25519.PubKey\",\"key\":\"LKwKvQPVTwxwW4UDpyIvGW8Sa9sUdaxhhhVdOigrEyA=\"} babylond keys list --home /data/node/.babylond --keyring-backend test - address: bbn1x5wgh6vwye60wv3dtshs9dmqggwfx2ldy7agnk name: validator pubkey: '{\"@type\":\"/cosmos.crypto.secp256k1.PubKey\",\"key\":\"AnDGSF7VFQs9VKEceS6cWhfajxh/mmv+Mbu9bCM9BDzK\"}' type: local babylond keys show validator --bech val -a --home /data/node/.babylond --keyring-backend test bbnvaloper1x5wgh6vwye60wv3dtshs9dmqggwfx2ldeuh4lh balance check babylond q bank balances bbn1x5wgh6vwye60wv3dtshs9dmqggwfx2ldy7agnk --node http://localhost:58602 \u2757\ufe0fremote-sign \uc548\ub428 \u26a0\ufe0f **Important**: The `priv_validator_key.json` file contains sensitive key material. Make sure to backup this file and store it securely, as it's essential for your validator's operation and cannot be recovered if lost. Note that BLS keys are currently not supported by Horcrux or other remote signing solutions, so alternative security measures should be considered for key management such as hardware wallets or offline storage. validator.json \uc0dd\uc131 cat > $HOME/infra-organizer/scripts/validator.json << EOF { \"pubkey\": {\"@type\":\"/cosmos.crypto.ed25519.PubKey\",\"key\":\"LKwKvQPVTwxwW4UDpyIvGW8Sa9sUdaxhhhVdOigrEyA=\"}, \"amount\": \"1000000ubbn\", \"moniker\": \"Cosmostation\", \"identity\": \"AE4C403A6E7AA1AC\", \"website\": \"https://www.cosmostation.io\", \"security\": \"node@stamper.network\", \"details\": \"Cosmostation is an institutional-grade cryptocurrency infrastructure provider, managing billions of dollars across 70 protocols. Since 2018, we have served more than 500k users globally, providing products that enable protocols to scale\", \"commission-rate\": \"0.1\", \"commission-max-rate\": \"0.2\", \"commission-max-change-rate\": \"0.01\", \"min-self-delegation\": \"1\" } EOF create-validator babylond tx checkpointing create-validator \\ /home/babylon/infra-organizer/scripts/validator.json \\ --chain-id bbn-test-5 \\ --gas \"auto\" \\ --gas-adjustment 1.5 \\ --gas-prices \"0.005ubbn\" \\ --from validator \\ --keyring-backend test \\ --home /data/node/.babylond check operator address(valoper) babylond keys show validator --address --bech val --home /data/node/.babylond --keyring-backend test check validator details babylond query staking validator bbnvaloper1x5wgh6vwye60wv3dtshs9dmqggwfx2ldeuh4lh \u2757\ufe0fphase1\uc5d0\uc11c \ucc38\uc5ec\ud55c eots key & finality-provider key \uc0ac\uc6a9\ud544\uc694! https://btcstaking.testnet.babylonchain.io/ \"btc_pk\": \"17d33e18ab85b33050c763a44d8757dfe4e0a3c49e12911f65e0529c3cd224b6\", Finality providers that received delegations on the first phase of the launch are required to transition their finality providers to the second phase using the same EOTS key that they used and registered with during Phase-1. The usage of a different key corresponds to setting up an entirely different finality provider which will not inherit the Phase-1 delegations. Not transitioning your Phase-1 finality provider prevents your Phase-1 delegations from transitioning to the second phase. eotsd, finality-provider \ucc38\uace0: https://docs.cosmos.network/main/learn/beginner/accounts * make install * make dir * make service * key-recover \\ eotsd keys add <key-name> --home <path> --recover --keyring-backend test eotsd keys add cosmostation --home /data/node/.eotsd --recover --keyring-backend test - address: bbn1pxkhl56u5qdgu2rz2mv9z2ufq8gcl9umcf53vm name: cosmostation pubkey: '{\"@type\":\"/cosmos.crypto.secp256k1.PubKey\",\"key\":\"A4lK3XATGkc3XOSP8q3JaXIcE7YA+HJq0h7gGLm5f020\"}' pubkey_hex: 894add70131a47375ce48ff2adc969721c13b600f8726ad21ee018b9b97f4db4 type: local verify the key - address: bbn1x5wgh6vwye60wv3dtshs9dmqggwfx2ldy7agnk name: validator pubkey: '{\"@type\":\"/cosmos.crypto.secp256k1.PubKey\",\"key\":\"AnDGSF7VFQs9VKEceS6cWhfajxh/mmv+Mbu9bCM9BDzK\"}' type: local eotsd start Dec 26 14:32:31 sensible-cricket eotsd_bbn-test-5[2439553]: 2024-12-26T14:32:31.426568Z info Metrics server is starting {\"addr\": \"127.0.0.1:58607\"} Dec 26 14:32:31 sensible-cricket eotsd_bbn-test-5[2439553]: 2024-12-26T14:32:31.426632Z info RPC server listening {\"address\": \"127.0.0.1:58618\"} Dec 26 14:32:31 sensible-cricket eotsd_bbn-test-5[2439553]: 2024-12-26T14:32:31.426667Z info EOTS Manager Daemon is fully active! fpd recovery (\uc774\uac74 \uc815\uc0c1\uc791\ub3d9\ub428) fpd keys add validator --recover --home /data/node/.fpd --keyring-backend test {\"name\":\"validator\",\"type\":\"local\",\"address\":\"bbn1x5wgh6vwye60wv3dtshs9dmqggwfx2ldy7agnk\",\"pubkey\":\"{\\\"@type\\\":\\\"/cosmos.crypto.secp256k1.PubKey\\\",\\\"key\\\":\\\"AnDGSF7VFQs9VKEceS6cWhfajxh/mmv+Mbu9bCM9BDzK\\\"}\"} Dec 26 16:26:02 sensible-cricket fpd_bbn-test-5[2448552]: 2024-12-26T16:26:02.450728Z info starting metrics update loop {\"interval seconds\": 0.1} Dec 26 16:26:02 sensible-cricket fpd_bbn-test-5[2448552]: 2024-12-26T16:26:02.450889Z info RPC server listening {\"address\": \"127.0.0.1:58619\"} Dec 26 16:26:02 sensible-cricket fpd_bbn-test-5[2448552]: 2024-12-26T16:26:02.450912Z info Metrics server is starting {\"addr\": \"127.0.0.1:58617\"} Dec 26 16:26:02 sensible-cricket fpd_bbn-test-5[2448552]: 2024-12-26T16:26:02.450935Z info Finality Provider Daemon is fully active! --eots-pk : The EOTS public key maintained by the connected EOTS manager instance that the finality provider should use. If one is not provided the finality provider will request the creation of a new one from the connected EOTS manager instance. TBD... stakerd /data/node/.stakerd https://github.com/babylonlabs-io/btc-staker stakercli admin dump-config --config-file-dir /data/node/.stakerd/staerd.conf stakerd key\ub294 recovery\ud574\ub3c4 \ub418\uc9c0\ub9cc, \uadf8\ub0e5 babylon\uaebc \uac00\uc838\uc634(\ubcf5\ubd99) Create a Keyring \\ https://docs.babylonchain.io/docs/user-guides/btc-staking-testnet/getting-funds https://github.com/babylonlabs-io/btc-staker?tab=readme-ov-file https://docs.babylonchain.io/docs/user-guides/btc-staking-testnet/become-btc-staker Reference \\ https://www.youtube.com/watch?v=Qodnge3wmKs \\ https://github.com/babylonlabs-io/networks/tree/main/bbn-test-5 \\ https://xangle.io/research/detail/2095 \\ https://research.despread.io/ko/crypto-times-babylon/ \\ https://medium.com/@cosmonautcurious/babylon-overview-and-whitepaper-by-babylon-team-d865c183bc73 \\ https://medium.com/@organmo/babylon-chain-%EB%B9%84%ED%8A%B8%EC%BD%94%EC%9D%B8%EC%9D%98-%EB%B3%B4%EC%95%88%EC%9D%84-pos-%EC%B2%B4%EC%9D%B8%EC%9C%BC%EB%A1%9C-%EA%B0%80%EC%A0%B8%EC%98%A4%EC%9E%90-95bf5c519c4b \\ https://github.com/babylonlabs-io/networks/blob/main/bbn-1/finality-providers/README.md \\ https://github.com/babylonlabs-io/finality-provider/blob/main/docs/finality-provider-operation.md \\","title":"Babylond"},{"location":"chains/babylon/testnet/bbn-test-5/mnemonics/","text":"role - validator 24 words (cosmos default) dirt room total defense clarify dress tuition code decrease horror another benefit tongue stick industry ship enact swim ketchup double pigeon infant wish odor","title":"Mnemonics"},{"location":"chains/band/mainnet/yoda/","text":"config.yaml address: false broadcast-timeout: 5m chain-id: laozi-mainnet executor: \"rest:https://1x3wlk3alf.execute-api.us-west-2.amazonaws.com/live/band-mainnet-yoda?timeout=7s\" gas-prices: \"\" log-level: info max-report: \"10\" max-try: \"5\" node: tcp://localhost:13102 rpc-poll-interval: 1s validator: \"bandvaloper17d3uhcjlh4jyqcep82jfsrg8avsngklxxan5tg\" yoda keys list \u2753 REPORTER_1 => band12lkypk7k2ljlsgsyhlt3k8w6xcaufwv62n74sj \u2753 REPORTER_2 => band14et3jy3mcuehc95rmfmltetd6yrhs9da88gkq6 \u2753 REPORTER_3 => band18g70544qp3xgwmuat7k752wangre8cwcavlmuq \u2753 REPORTER_4 => band1g2u4l7ma7x6e6xnkj8vly3uqwngfkul68dt8c4 \u2753 REPORTER_5 => band1nv8j6lemkey8x6p7fjk6kje68j6s36g8mqf6ge REPORTER_1.info eyJhbGciOiJQQkVTMi1IUzI1NitBMTI4S1ciLCJjcmVhdGVkIjoiMjAyMy0wNy0yMCAxMDoyNTozMC43NTI4Njg3OTYgKzAwMDAgVVRDIG09KzUuOTM2ODgzMzAzIiwiZW5jIjoiQTI1NkdDTSIsInAyYyI6ODE5MiwicDJzIjoiNmtiWmRDWGI5czZKVW1vVCJ9.31gBWG4BElJAshpFNKGajF6wTHUYZ2mdYamWMRTEOI7iRzi6YZmOsA.8LaViEh-a3_O11d3.7qp1i8ilpBd3yj80jGIwk1QS-acmp6iEMh2OHP4gGZ_jm0QKawHqeU31gDkzsUd95V8TrO3dpsRlFfl19gxwEuRIyl99SxJAECnVZUn7WGteqAOuxGXLs4wyyCdPf5KHfRv4JJ4N2VRQKr2SwbwjO4rxwiZ_dJsjLMQXESqscMG713j_ud0ykm4oIdsIrIBVvqXiZ8ARjVg1y34ctntCO_4XRl5ZqVbMIEODGJRUGDzDI5hJ91KsI5dQbJ4xI2noDxuGh8jMLkktEgOd3LsQfZmB2sQMnapAzhiGty_gCoj8ocZH6Tbovymq61_SwesP1_YZyvgMhqimzFra5ZVk60rjdVmbbGCcKHj1TjyYarTIeglVvQ.8-X9KkSJOeY7fZU9o5v6Kg REPORTER_2.info eyJhbGciOiJQQkVTMi1IUzI1NitBMTI4S1ciLCJjcmVhdGVkIjoiMjAyMy0wNy0yMCAxMDoyNTo0Ni45NjkwNDMwMzIgKzAwMDAgVVRDIG09KzQuMTA2MzY2NDE5IiwiZW5jIjoiQTI1NkdDTSIsInAyYyI6ODE5MiwicDJzIjoidlphbHVBS3RURFQ2cnNmUyJ9.AG90gatZT-dCLU6p195HZRr8s2kjlW_QCei02H0HiYjfa28JKHGuiA.3eLi-z28sWWdS9fs.Hndblvw8XsEmfMgYyslIf6OvNHoGMZ2tkh_yjWdQREBLoCjI8q_3AYZ7_M_P1gdSmfXfQ4CACFMoMm6VjIMH0214CpgKENNrmiojg_1HXd4V_-G_kTQUf55BZTCHbs9GzbTcvIcUagerlGVGwfophsFrJ-cIHDfFwphY0ctbuedDZi0tzpJmNGv-h4rce_JqeNO_vnDzGqueHbutS4Iika4NZNjVQvqvFMEVdyz6X50HYwfXnSU1mWC-Ru0n2UTtbIBQ6-anrSsw-8qOotqx5wmdhyq8Gq6N-04OGOJDEq9OTiuZVh_YZcMwBKG5db1g2UhAQTuI1KB50mWTUHg3X3_JRlR2PK5H26XtCk4rx-9_m5dkRw.Ek7eT4aXEowNkqJNMj5lSQ REPORTER_3.info eyJhbGciOiJQQkVTMi1IUzI1NitBMTI4S1ciLCJjcmVhdGVkIjoiMjAyMy0wNy0yMCAxMDoyNTo1Ni45ODY2NjczNDYgKzAwMDAgVVRDIG09KzQuNTQ0NzIwMDg2IiwiZW5jIjoiQTI1NkdDTSIsInAyYyI6ODE5MiwicDJzIjoiNWxBN19XY0xQWVdYanhxSSJ9.9RKC2DyyXJnwfUCWzc1BMAlYiwoaUHOrrPZJMeMH_o31XyxYbPzceg.Nm14PADhHQU_nFCh.p0PjjpDuqG6KlrxLp0elvbPP_rmlyn88U6o02UArIQA8XoQqHQhXZ1fGSGqUpT1HPYP7zwmISMI7aAbgZ1jaC-D96jX5nZlNHgNoV2XwYqJWNLCeru7S2CQkMqt2SOfLLTqeLKOdwUmlX3CDcfbofq421jeasdt-O3sg2Hl2_n7oo1hmUEOT_PEDFRGMmPy9rTIZ8Y1x4fs2EvbkY9EQ8CYMtVqVJiF1Xj5Gk8fJtAvfGXSbmCXgJvAvmFOBiUOFz9fXU3Bl-SdIC-oeOpx_C8cg_L-d_1hjQ3wZtSwU70Hd4aVZ4HRbYRGN7SmUzU52-Aqsj9V3PjfAbnaiCoRu2-burggQquWNFyrD87xL4oGfPgrLiQ.eCghQxyFu5joBb94Mf92OA REPORTER_4.info eyJhbGciOiJQQkVTMi1IUzI1NitBMTI4S1ciLCJjcmVhdGVkIjoiMjAyMy0wNy0yMCAxMDoyNjowNi42NDc4NzM3NjEgKzAwMDAgVVRDIG09KzMuNDk0MDcxNjczIiwiZW5jIjoiQTI1NkdDTSIsInAyYyI6ODE5MiwicDJzIjoiMHozcGxfTjZjOVJmMGF6LSJ9.nCtrfmc7m8LYMGOmHKbo_1CH1Nl3QLBVqyahILssrb2HP5Hk3SLjsw.1aY6WfiANbtClhGQ.XjnFWvvobvRuXWVieMK09rg6_GLfzPlsrNk1cBx-bHAOypSi4iLpyQDjLLtb5TWQVexa-ccmF9VDOgWGmwq-NhTwsqe__0aUpvb3WrN709Yku61JrUO3oF8esPouRG8o8bOWqCsKp6j5512bS9MVKB3UykdAxvdTDduO51TWefbilPpsskrMbV2H2wEGSGJwgnwaSaUbDnmJYuNU3hQdjKDEvX8O4X2oSWUQpN2NX2MtDA4hIec2tX_WAFaXPcOrrpTJMqaJfQcaOTjUrkgwbjmRA5VWhNkXq-U4nWs0nWZOyJeZKTYXJLKtE7_hcpxyqV-6nEmTj4s1IxhvLuW9bdPFhzyyLWJqS-iZjE-peWTdDSOp4Q.i1x9DOscy94J9tuwZTQpEg REPORTER_5.info eyJhbGciOiJQQkVTMi1IUzI1NitBMTI4S1ciLCJjcmVhdGVkIjoiMjAyMy0wNy0yMCAxMDoyNjoxNC44MDg2MjI4ODIgKzAwMDAgVVRDIG09KzMuNDY2NDEzMDQ1IiwiZW5jIjoiQTI1NkdDTSIsInAyYyI6ODE5MiwicDJzIjoiT0NuckdHWmpnNDlILWRBaCJ9.C1h88rwN5kUdh_dt3PC6qwvCcC35Kq7sqYdXW3qMUHBTNMRroIZlKg.Ji9D_SKdBnxibaJn.UnlXh_UTSRWXZ0D_ftTAW4_aMoh1hsAy7-wwBv6v151C0wha34pMLWODn1Wlt707IoRHx3R8b-394Y2NLF_2AUw2lINN0ew8Wuy5oBgeDu2DlBvTKps4DcX3L-m-B1RLx9BJHpG1vLk8rNj2_w9Gk-uxCQ8y4u7m6jHwP2l6ZddWvIveZhkT6CB71-sxuY_eUB53PBk3IbgG_ENuWyOuYF0Rk7uKwng_G8hcbsnbDE6ztFzJvYiikOvKKnvKR_EElQerXCzgvHsaAbfomhoFw8xO58yxCiJDIXePXbdKJ7tc4f_YlxQzBweAYcCS4uRLajs9EADNTYfHrYk_IndNGYEy_zxIaNGaNm3_inNDaBwWJn1sDw.cKFhPBSdwmZvzJgHh84FCQ 3a3cfa56a00c4c876f9d5fadea29dd9a0793e1d8.address eyJhbGciOiJQQkVTMi1IUzI1NitBMTI4S1ciLCJjcmVhdGVkIjoiMjAyMy0wNy0yMCAxMDoyNTo1Ni45OTA2MTUxMTMgKzAwMDAgVVRDIG09KzQuNTQ4NjY3ODUzIiwiZW5jIjoiQTI1NkdDTSIsInAyYyI6ODE5MiwicDJzIjoidU1BNkt5d296VFV6YVdYRyJ9.VDQwDAxkwstGhfcy3z-yNYBbIWPf4dbaXJl5gfUvRY9hLpuOeIl1tQ.WUkswc__792h51bN.GgKUx08Fnb_HnVgW9SlJTA0xeaBcnf1cUXRu17Qf7_DzI9vUI3wXJEi4UgMO6xqRDeo1fqtZApz7Q3I7TcWws6NKv1_TKegBt4Bq2yYinGgKcjD-ybi2Vcb80UHZn39CZD3Y3nSJebRuIVQ9ke7FFBjxJdpU8SEe7-mWB6xxBE6oU_GpH6GBJI5X0KD9MFSYjMREyia5zcpUHU4E9PpI006lMTk4ou3IdF3jkqBYAue-Tk6M0mFmx2Eg.8fdTl--E4buRsW_qrL0Gcg 42b95ffb7df1b59d1a7691d9f2478074d09b73fa.address eyJhbGciOiJQQkVTMi1IUzI1NitBMTI4S1ciLCJjcmVhdGVkIjoiMjAyMy0wNy0yMCAxMDoyNjowNi42NTE2NzA0OTkgKzAwMDAgVVRDIG09KzMuNDk3ODY4NDExIiwiZW5jIjoiQTI1NkdDTSIsInAyYyI6ODE5MiwicDJzIjoiZ19mbV9NT29rQXYxZjFIZiJ9.3-cdzFiRtvxvbbPDMS72JsnezLH8MJY67USlEGqB3qV0thlQKKKIzA.eCJdM1qNbz_pQ3th.8KeQN_iQy87QynQtliqjZL5wU4WAZ_ufYmwMkvb7W9LNNu2C8KBiR3zWrbHIQiap-AEXhj9trY-y3cgEhwN28G4VLHp0IXZybg2LS5eWNjrQsVEAzydq686YMuLoC_gHfQU1uKVlh_AfjMaVtW89CmiNTb7P-XF9d2nO9JCn9luGjOcL2ZXTDJsrA4NGGO09i9jLzJ3fSM3d_u_lK6ZfohpoLgEifkudHi4lPJvmq8BVkQ8QjAUXRjrp.OIZi3LopovrH5v4nnwsxvA 57ec40dbd657e5f82204bfd71b1dda363bc4b99a.address eyJhbGciOiJQQkVTMi1IUzI1NitBMTI4S1ciLCJjcmVhdGVkIjoiMjAyMy0wNy0yMCAxMDoyNTozMC43NTcyNTcyMzcgKzAwMDAgVVRDIG09KzUuOTQxMjcxNzMzIiwiZW5jIjoiQTI1NkdDTSIsInAyYyI6ODE5MiwicDJzIjoiakpES0lHV2xYU05ra2MwMiJ9.YggS0gwdfZB4a-HaI4NqMN8XrpWGBzUXq9AvyarwjHV1py3hzb3r6w.-xqDt-WXx56NBsF3.ospspKj98yWccYOZfPH43jXUW8KwPup9suKjQSs-5xot0IQB1jezJCZKAvAJicu6tTWMmTCz9Gc03ZpI-Z5eUbea-1qKUEtAXHM0-8ddN3XCFB9o4Ia2l3bBmCRBJM5YXFc_3OUzCkzXn0S6DAEcT57qJQ9Ar-SwtxhTBpx-G8crg6nHQozZ-uEiLABbeMfDUXxA3LBQQPhdkxorY6oFiFfhf6pBD_4yORawWojyD-ZK5Ryc22j7T4DH.ea_FibF-GmNy84MQ7d88lw 9b0f2d7f3bb64873683e4cadab4b3a3cb508e907.address eyJhbGciOiJQQkVTMi1IUzI1NitBMTI4S1ciLCJjcmVhdGVkIjoiMjAyMy0wNy0yMCAxMDoyNjoxNC44MTM5MDM3NjQgKzAwMDAgVVRDIG09KzMuNDcxNjkzOTA3IiwiZW5jIjoiQTI1NkdDTSIsInAyYyI6ODE5MiwicDJzIjoidXIwYlhoWk9BODV0OUtYVyJ9.QgKm64-728uAMb-FMWE2Pj7kelRyM3YefaGjgXvPplH7lsTmZL7BFA.Tymsw31xLLTDz6v6.L8M_KJoATiIHXtyh_OY97D52tn6s8lKqbU8cJm4hoDjKifR5GOEQixGP_FhX8nS6SyoZCxCrLvaucrEh4ivipppW23-QGp_AdMGalT7Oa6n1Qj56-A5IuWLXgBraGoCTrSxwdb_C6sb_JuaXXb_OkhWpXEixWiX79imvehaDv_e-BqLtMGI8Ba69Q8a-D1RnzhhVhJjKfFyUtu9I4_lGx9fR1WJixJTfCEW3Ij6gTaa20vulTsE_thWs.BYGvcS8_7ZUPfxp6iRiBjQ ae5719123bc7337c1683da77f5e56dd1077815bd.address eyJhbGciOiJQQkVTMi1IUzI1NitBMTI4S1ciLCJjcmVhdGVkIjoiMjAyMy0wNy0yMCAxMDoyNTo0Ni45NzQxNjIyNzUgKzAwMDAgVVRDIG09KzQuMTExNDg1NjUyIiwiZW5jIjoiQTI1NkdDTSIsInAyYyI6ODE5MiwicDJzIjoiSnRKWU12NnJESm56UWh0RiJ9.lLdTCrA17hJYjSN6oiNwJF1DAvjYF0omZl_XrbwtIMykMXeJCrZdhA.ixDErexSS_Cud9J2.xsMxyJbwvxM4gA6OhB-04TGq4PUhsKvqlHNtahwrWXHAYx2ebps2IiigzHhWL5WmqwdRfQrNGgXY-Et4hXj9xOrAKhQp9Sge4wbLF41qZeMCCWUWW6_t80Z37rW1VWPTZmyXoG5rz5GNjsMjnYzgbeRFhxrYj7EvoIUcx9Utoh2rd1CaP4jMDQDU-iU1uoU65L-9oawAWs2_wVsGEJ-yB6S_DuZe4NlzLAGOt7RSG_H3LZK2N1ANEXNM.TFzDNzojuJScj_XDtEa0sw","title":"Yoda"},{"location":"chains/band/testnet/band-laozi-testnet6/","text":"","title":"Index"},{"location":"chains/band/testnet/band-laozi-testnet6/address_check/","text":"band consensus_pubkey: '@type': /cosmos.crypto.secp256k1.PubKey key: A7okBZY52OKOu3eW2nBLlgK6Vn5PaF6mk2HYf5elCzM9 { \"address\": \"442BD7871A352E9525E20F9D2537FAD3CBC3FE30\", \"pub_key\": { \"type\": \"tendermint/PubKeySecp256k1\", \"value\": \"A7okBZY52OKOu3eW2nBLlgK6Vn5PaF6mk2HYf5elCzM9\" }, \"priv_key\": { \"type\": \"tendermint/PrivKeySecp256k1\", \"value\": \"Y7CWj3ZvlAl2e8ly9j2Mvu32p6ErhoCTg3vKIkeOdRg=\" } } local test(\uc6b0\ub9ac \ub2c8\ubaa8\ub2c9\uc73c\ub85c \ubcf5\uc6d0\uc2dc\ub3c4) role - validator 24 words (cosmos default) dirt room total defense clarify dress tuition code decrease horror another benefit tongue stick industry ship enact swim ketchup double pigeon infant wish odor - name: test type: local address: band1kfj48adjsnrgu83lau6wc646q2uf65rftr0pem pubkey: '{\"@type\":\"/cosmos.crypto.secp256k1.PubKey\",\"key\":\"AqHyIytsThoteWJRqqL73WqEtnac9TdLfhX5HCHdeS0k\"}' mnemonic: \"\" -> bandvaloper1kfj48adjsnrgu83lau6wc646q2uf65rf84tzus(\uc77c\uce58\ud655\uc778)","title":"Address check"},{"location":"chains/band/testnet/band-laozi-testnet6/lamda_check/","text":"https://5pc8iauj70.execute-api.us-west-2.amazonaws.com/live/band-testnet-yoda curl --location --request POST 'https://5pc8iauj70.execute-api.us-west-2.amazonaws.com/live/band-testnet-yoda' \\ --header 'Content-Type: application/json' \\ --data-raw '{ \"executable\": \"IyEvdXNyL2Jpbi9lbnYgcHl0aG9uMwoKaW1wb3J0IHN5cwoKZGVmIG1haW4oZGF0YSk6CiAgICByZXR1cm4gZGF0YQoKCmlmIF9fbmFtZV9fID09ICJfX21haW5fXyI6CiAgICB0cnk6CiAgICAgICAgcHJpbnQobWFpbigqc3lzLmFyZ3ZbMTpdKSkKICAgIGV4Y2VwdCBFeGNlcHRpb24gYXMgZToKICAgICAgICBwcmludChzdHIoZSksIGZpbGU9c3lzLnN0ZGVycikKICAgICAgICBzeXMuZXhpdCgxKQo=\", \"calldata\": \"\\\"Hello lambda\\\"\", \"timeout\": 3000 }'","title":"Lamda check"},{"location":"chains/band/testnet/band-laozi-testnet6/mnemonics/","text":"mnemonic for band-yoda(0~5) chalk cart salon stumble solution damage false sand clay duck exercise armed police clever obvious piece domain echo laptop clarify weapon gold divide sad","title":"Mnemonics"},{"location":"chains/band/testnet/band-laozi-testnet6/mnemonics/#mnemonic-for-band-yoda05","text":"chalk cart salon stumble solution damage false sand clay duck exercise armed police clever obvious piece domain echo laptop clarify weapon gold divide sad","title":"mnemonic for band-yoda(0~5)"},{"location":"chains/band/testnet/band-laozi-testnet6/tmkms/","text":"Rust curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh Setup tmkms cd $HOME git clone https://github.com/iqlusioninc/tmkms.git cd $HOME/tmkms cargo install tmkms --features=softsign init tmkms init config Creating config Generated KMS configuration: /home/signer/config/tmkms.toml Generated Secret Connection key: /home/signer/config/secrets/kms-identity.key tmkms softsign keygen ./config/secrets/secret_connection_key Generated consensus (Ed25519) private key at: ./config/secrets/secret_connection_key tmkms_band-laozi-testnet6.service [Unit] Description=Running a remote signer as a background service After=network.target [Service] Type=simple User=signer Group=signer LimitNOFILE=65535 Restart=on-failure RestartSec=10 StartLimitInterval=60 WorkingDirectory=/home/signer/infra-organizer ExecStart=/signer/signer-testnet/.cargo/bin/tmkms start -c /signer/signer-testnet/infra-organizer/config/band-laozi-testnet6/tmkms.toml [Install] WantedBy=multi-user.target priv_validator_key.json \ubcf5\uc0ac(secrets \ub514\ub809\ud1a0\ub9ac\uc5d0) import tmkms softsign import $HOME/config/secrets/priv_validator_key.json $HOME/config/secrets/priv_validator_key 2024-12-16T14:17:42.943735Z INFO tmkms::commands::softsign::import: Imported Secp256k1 private key to /home/signer/config/secrets/priv_validator_key $HOME/config -> /home/signer/infra-organizer/config/band-laozi-testnet-6 secrets \ubcf5\uc0ac priv_validator_state.json {\"height\":\"0\",\"round\":\"0\",\"step\":0,\"block_id\":{\"hash\":\"\",\"parts\":{\"total\":0,\"hash\":\"\"}}} tmkms(v0.13.0) - secp256k1 consensus key \uc9c0\uc6d0 https://github.com/iqlusioninc/tmkms/pull/796 https://github.com/iqlusioninc/tmkms/issues/761 tmkms.toml \uc791\uc131(band\ub294 key type\uc774 \ub2ec\ub77c\uc11c chain.key_format \ucd94\uac00\ud574\uc57c\ud568) [[chain]] id = \"band-laozi-testnet6\" state_file = \"/home/signer/infra-organizer/config/band-laozi-testnet-6/state/band-consensus.json\" [chain.key_format] account_key_prefix = \"bandvalconspub\" consensus_key_prefix = \"bandvalconspub\" type = \"bech32\" [[validator]] chain_id = \"band-laozi-testnet6\" addr = \"tcp://222.106.187.14:53509\" secret_key = \"/signer/signer-testnet/infra-organizer/config/band-laozi-testnet6/secrets/secret_connection_key\" protocol_version = \"v0.34\" reconnect = true [[providers.softsign]] chain_ids = [\"band-laozi-testnet6\"] key_type = \"account\" path = \"/home/signer/infra-organizer/config/band-laozi-testnet6/secrets/priv_validator_key\" node error 12\uc6d4 16 23:29:57 testnet-desktop cosmovisor_band-laozi-testnet6[2848158]: Error: error with private validator socket client: can't get pubkey: send: EOF -> tmkms.toml \ub2e4\uc2dc \uccb4\ud06c! (chain-id, path, typo error \ub4f1\ub4f1 \uccb4\ud06c) tmkms 12\uc6d4 16 14:56:14 testnet-desktop tmkms[1286214]: 2024-12-16T14:56:14.024771Z INFO tmkms::commands::start: tmkms 0.14.0 starting up... 12\uc6d4 16 14:56:14 testnet-desktop tmkms[1286214]: 2024-12-16T14:56:14.024839Z INFO tmkms::keyring: [keyring:softsign] added consensus Ed25519 key: bandvalconspub1zcjduepqnk92rk5zv9648eg6yvk4agspfey9f0ly7pa4gfxlpe6ljcz7s2nsnwy265 12\uc6d4 16 14:56:14 testnet-desktop tmkms[1286214]: 2024-12-16T14:56:14.024935Z INFO tmkms::connection::tcp: KMS node ID: b231faf3b7f8bd9e4082232e56548fedcaa42bb9 12\uc6d4 16 14:56:14 testnet-desktop tmkms[1286214]: 2024-12-16T14:56:14.025476Z ERROR tmkms::client: [band-laozi-testnet-6@tcp://222.106.187.14:53509] I/O error: Connection refused (os error 111) 12\uc6d4 16 15:48:37 testnet-desktop tmkms[1989285]: 2024-12-16T15:48:37.547745Z INFO tmkms::connection::tcp: KMS node ID: b231faf3b7f8bd9e4082232e56548fedcaa42bb9 12\uc6d4 16 15:48:37 testnet-desktop tmkms[1989285]: 2024-12-16T15:48:37.549023Z INFO tmkms::session: [band-laozi-testnet6@tcp://222.106.187.14:53509] connected to validator successfully 12\uc6d4 16 15:48:37 testnet-desktop tmkms[1989285]: 2024-12-16T15:48:37.549030Z WARN tmkms::session: [band-laozi-testnet6@tcp://222.106.187.14:53509]: unverified validator peer ID! (839a1e3bf86565831a1d2bf4d2f8d7b4b2755eeb)","title":"Tmkms"},{"location":"chains/band/testnet/band-laozi-testnet6/yoda/","text":"docs \\ https://docs.bandchain.org/node-validators/run-node/joining-mainnet/installation#step-5-setup-yoda \\ https://github.com/bandprotocol/data-source-runtime/wiki/Setup-Yoda-Executor-Using-AWS-Lambda set yoda EXECUTOR_URL https://5pc8iauj70.execute-api.us-west-2.amazonaws.com/live/band-testnet-yoda yoda config chain-id $CHAIN_ID yoda config node http://localhost:26657 yoda config broadcast-timeout \"5m\" yoda config rpc-poll-interval \"1s\" yoda config max-try 5 yoda config validator $(bandd keys show $WALLET_NAME -a --bech val) yoda keys add REPORTER_1 Mnemonic: point symptom decide divorce april patrol also woman aim sail goose pyramid flush ecology build switch pet legend analyst horn neck mule coil wage Address: band1xfzu5k5mzjqacetj5hde2lcat0qxw9c6yxwf24 \u279c ~ yoda keys add REPORTER_2 Mnemonic: shock diary divide lens inflict dismiss stone type cage bid edit naive repeat tent napkin mango theory glory engage pole pioneer define maple pet Address: band1jzl2ppcfy3lcrqg52tcgx6yd75hp7efrpa4fh9 \u279c ~ yoda keys add REPORTER_3 Mnemonic: advance add common february burst easy need ring smooth soda battle tobacco federal wide okay any account sea pen reveal seek mirror lamp erode Address: band1c5suyl8mpc3avaate238egf7yx9fzpdf0e89wr \u279c ~ yoda keys add REPORTER_4 Mnemonic: goat govern mercy infant honey upset diagram dance arena play cup oven typical process spice tomato slab evil pigeon mechanic client wreck visa exile Address: band1x7jwa22y9pnaj7yq50uz5ex5eezl5c4kekp4ll \u279c ~ yoda keys add REPORTER_5 Mnemonic: choice language cook excite name drop famous damp depend easy siren enjoy short hole congress pony finger credit asthma demise soul step mirror fox Address: band1d4ert3qx9ne63dazpmmmj7zpc7atvzut8vdhu3 service [Unit] Description=Yoda Daemon After=network-online.target [Service] User=band-testnet ExecStart=/home/band-testnet/go/bin/yoda run Restart=always RestartSec=3 LimitNOFILE=4096 # make sure log directory exists and owned by syslog PermissionsStartOnly=true ExecStartPre=/bin/mkdir -p /var/log/yoda_band-laozi-testnet6 ExecStartPre=/bin/chown syslog:adm /var/log/yoda_band-laozi-testnet6 ExecStartPre=/bin/chmod 755 /var/log/yoda_band-laozi-testnet6 StandardOutput=syslog StandardError=syslog SyslogIdentifier=yoda_band-laozi-testnet6 [Install] WantedBy=multi-user.target yoda activate \\ https://docs.bandchain.org/node-validators/run-node/joining-mainnet/become-validator#step-3-register-reporters-and-become-oracle-provider bandd tx multi-send 1uband $(yoda keys list -a) \\ --from validator \\ --chain-id $CHAIN_ID \\ --fees 500uband DB548C5DCD96FFDC57F4F62C0BDC7B60FA4E3D702D36D033A5BAC510066669EF bandd tx oracle add-reporters $(yoda keys list -a) --from validator --fees 500uband --chain-id band-laozi-testnet6 3B7E8FDEA52BCC8025FA595B94268CCD0024CDE7BD787265B106FAA4C92588DE result 12\uc6d4 17 23:27:29 testnet-desktop yoda_band-laozi-testnet6[1821099]: I[2024-12-17|23:27:29.224] \ud83d\udd0d Found 2 pending requests 12\uc6d4 17 23:27:29 testnet-desktop yoda_band-laozi-testnet6[1821099]: I[2024-12-17|23:27:29.226] \ud83d\ude9a Processing request rid=3644962 12\uc6d4 17 23:27:29 testnet-desktop yoda_band-laozi-testnet6[1821099]: I[2024-12-17|23:27:29.226] \ud83d\ude9a Processing request rid=3644961 12\uc6d4 17 23:27:32 testnet-desktop yoda_band-laozi-testnet6[1821099]: I[2024-12-17|23:27:32.294] \ud83d\udce7 Sending report transaction attempt: (1/5) rids=[3644962] 12\uc6d4 17 23:27:32 testnet-desktop yoda_band-laozi-testnet6[1821099]: I[2024-12-17|23:27:32.294] \u270d\ufe0f Try to sign and broadcast report transaction(1/5) rids=[3644962] 12\uc6d4 17 23:27:33 testnet-desktop yoda_band-laozi-testnet6[1821099]: I[2024-12-17|23:27:33.653] \ud83d\udce7 Sending report transaction attempt: (1/5) rids=[3644961] 12\uc6d4 17 23:27:33 testnet-desktop yoda_band-laozi-testnet6[1821099]: I[2024-12-17|23:27:33.654] \u270d\ufe0f Try to sign and broadcast report transaction(1/5) rids=[3644961] 12\uc6d4 17 23:27:34 testnet-desktop yoda_band-laozi-testnet6[1821099]: I[2024-12-17|23:27:34.312] \ud83d\ude0e Successfully broadcast tx with hash: 8B621FF8F9B35DCD149EFA11BE78E3B3DF642241994AEE617C251EC4C89D8275 rids=[3644962] \uc704 \uc808\ucc28\ub97c \ub530\ub974\uc9c0 \uc54a\uc73c\uba74 \ubc1c\uc0dd\ud558\ub294 error 12\uc6d4 17 22:33:40 testnet-desktop yoda_band-laozi-testnet6[1541346]: I[2024-12-17|22:33:40.569] \ud83d\udd0d Found 3 pending requests 12\uc6d4 17 22:33:40 testnet-desktop yoda_band-laozi-testnet6[1541346]: I[2024-12-17|22:33:40.570] \ud83d\ude9a Processing request rid=3644905 12\uc6d4 17 22:33:40 testnet-desktop yoda_band-laozi-testnet6[1541346]: I[2024-12-17|22:33:40.570] \ud83d\ude9a Processing request rid=3644906 12\uc6d4 17 22:33:40 testnet-desktop yoda_band-laozi-testnet6[1541346]: I[2024-12-17|22:33:40.571] \ud83d\ude9a Processing request rid=3644904 12\uc6d4 17 22:33:42 testnet-desktop yoda_band-laozi-testnet6[1541346]: I[2024-12-17|22:33:42.323] \ud83d\udce7 Sending report transaction attempt: (1/5) rids=[3644904] 12\uc6d4 17 22:33:42 testnet-desktop yoda_band-laozi-testnet6[1541346]: I[2024-12-17|22:33:42.323] \u270d\ufe0f Try to sign and broadcast report transaction(1/5) rids=[3644904] 12\uc6d4 17 22:33:42 testnet-desktop yoda_band-laozi-testnet6[1541346]: I[2024-12-17|22:33:42.326] \u26a0\ufe0f unable to get account: rpc error: code = NotFound desc = rpc error: code = NotFound desc = account band1erz9wt2h4zcr08hknhe94fvemtpfhfe2eqxj0g not found: key not found rids=[3644904] 12\uc6d4 17 22:33:43 testnet-desktop yoda_band-laozi-testnet6[1541346]: I[2024-12-17|22:33:43.326] \u270d\ufe0f Try to sign and broadcast report transaction(2/5) rids=[3644904] 12\uc6d4 17 22:33:43 testnet-desktop yoda_band-laozi-testnet6[1541346]: I[2024-12-17|22:33:43.328] \u26a0\ufe0f unable to get account: rpc error: code = NotFound desc = rpc error: code = NotFound desc = account band1erz9wt2h4zcr08hknhe94fvemtpfhfe2eqxj0g not found: key not found rids=[3644904] 12\uc6d4 17 22:33:44 testnet-desktop yoda_band-laozi-testnet6[1541346]: I[2024-12-17|22:33:44.307] \ud83d\udce7 Sending report transaction attempt: (1/5) rids=[3644906] 12\uc6d4 17 22:33:44 testnet-desktop yoda_band-laozi-testnet6[1541346]: I[2024-12-17|22:33:44.307] \u270d\ufe0f Try to sign and broadcast report transaction(1/5) rids=[3644906] 12\uc6d4 17 22:33:44 testnet-desktop yoda_band-laozi-testnet6[1541346]: I[2024-12-17|22:33:44.309] \u26a0\ufe0f unable to get account: rpc error: code = NotFound desc = rpc error: code = NotFound desc = account band1t6ljlq5y9awcdcvgmtm3uw6g59vd5mzl5h2y2t not found: key not found rids=[3644906] 12\uc6d4 17 22:33:44 testnet-desktop yoda_band-laozi-testnet6[1541346]: I[2024-12-17|22:33:44.329] \u270d\ufe0f Try to sign and broadcast report transaction(3/5) rids=[3644904] 12\uc6d4 17 22:33:44 testnet-desktop yoda_band-laozi-testnet6[1541346]: I[2024-12-17|22:33:44.332] \u26a0\ufe0f unable to get account: rpc error: code = NotFound desc = rpc error: code = NotFound desc = account band1erz9wt2h4zcr08hknhe94fvemtpfhfe2eqxj0g not found: key not found rids=[3644904] 12\uc6d4 17 22:33:44 testnet-desktop yoda_band-laozi-testnet6[1541346]: I[2024-12-17|22:33:44.856] \ud83d\udce7 Sending report transaction attempt: (1/5) rids=[3644905] 12\uc6d4 17 22:33:44 testnet-desktop yoda_band-laozi-testnet6[1541346]: I[2024-12-17|22:33:44.856] \u270d\ufe0f Try to sign and broadcast report transaction(1/5) rids=[3644905] 12\uc6d4 17 22:33:44 testnet-desktop yoda_band-laozi-testnet6[1541346]: I[2024-12-17|22:33:44.859] \u26a0\ufe0f unable to get account: rpc error: code = NotFound desc = rpc error: code = NotFound desc = account band1ec9tmnf4h38gwjzdpuvmurx9dv8wgjsd20mtcr not found: key not found rids=[3644905] reporters \uc0ad\uc81c bandd tx oracle remove-reporters $(yoda keys list -a) --from validator --fees 500uband --chain-id band-laozi-testnet6","title":"Yoda"},{"location":"chains/band/testnet/band-laozi-testnet6/yoda_back/","text":"yoda keys add REPORTER_1 Mnemonic: quit report saddle midnight foster slot oak silk idle peasant foam life sure human appear hip length neglect entry glimpse stomach flower winter tip Address: band1ec9tmnf4h38gwjzdpuvmurx9dv8wgjsd20mtcr \u279c ~ yoda keys add REPORTER_2 Mnemonic: civil impulse three wood happy dose unable code demand review public gown okay mushroom stadium candy mercy panel doctor bind notable float retire kitchen Address: band1t6ljlq5y9awcdcvgmtm3uw6g59vd5mzl5h2y2t \u279c ~ yoda keys add REPORTER_3 Mnemonic: wool result human garlic casual ankle meadow option wisdom burst another evoke media coral excess clip speak option member dog loan morning parrot village Address: band1erz9wt2h4zcr08hknhe94fvemtpfhfe2eqxj0g \u279c ~ yoda keys add REPORTER_4 Mnemonic: bike fog load upset public hollow before tissue soldier discover type sound awake appear food dial rule brother neutral figure render before mom brown Address: band1lwvx5kjdde25rf8dyh2kgjfqen72rc5fme24a3 \u279c ~ yoda keys add REPORTER_5 Mnemonic: crop perfect basket panther entry half provide bomb train story play mixed exact pistol oval water science funny sweet resource castle suggest lemon crawl Address: band1cre852j64dvgynjde0w45z9yvgyh3wemju06m8","title":"Yoda back"},{"location":"chains/band/testnet/band-v3-testnet-1/tx_history/","text":"Consensus - create validator: CB48EA4A5B14915E1AA3486CC98F000966EAA8A86C4C35F6385DE7A1A1517503 Yoda(oracle) - yoda accound create: C7E469CB0DE3698007E7A3020CA3BD27664FEF6D9DF49032F82B3BBE27BEE1E0 - oracle(yoda) add repoters: 7BFFDB4E068FCA4A966DD52614EE154C3D3B5AABAE04956BD5C572FF8F448C0D - oracle(yoda) activate Tx: 6E868F607A1D3825982CD96F06B1B66CAA456021B740800448895A802788F964 Grogu - grogu account create: 2F24992AB90B3BEC47E1D0AE17F4F3EF89E96C0FB9D7A93007E2E1921A916C93 - grogu add feeder: CD5767544CCD5A06716898038104B5A4B9B04E188713B992BF9D3F2B9762DEB3 Cylinder - cylinder account create: 130D7E33A2665E88B6E5246D7AB864055C4D41AA2C4CC7FA1B8C66C2C4FF8072 - cylinder tss add-grantee: 9A21D9824626E553FFF55B740D7681F5C3CDE6F43C654FEA0EE9C2F8E1262D3E","title":"Tx history"},{"location":"chains/band/testnet/band-v3-testnet-1/bandd/mnemonic/","text":"band-v3-testnet-1 (validator) vendor people spice cruise rapid unfair dress nasty dumb original traffic cannon clip weasel shrimp silly west jelly card spider aim egg sugar member","title":"Mnemonic"},{"location":"chains/band/testnet/band-v3-testnet-1/bothan/keys/","text":"docker exec -it $CONTAINER_ID /bin/sh -c \"bothan key --help\" Key command for the bothan-api server Usage: bothan key [OPTIONS] <COMMAND> Commands: generate Generates a new monitoring key export Exports Bothan's hex-encoded monitoring private key import Imports a hex-encoded monitoring private key display Displays the monitoring public key help Print this message or the help of the given subcommand(s) Options: --config <CONFIG> -h, --help Print help bothan \uc2e4\ud589\uc2dc \uc790\ub3d9\uc73c\ub85c keyring\uc744 \uc0dd\uc131\ud568. //with display commend Public Key (Bothan Broadcaster) 1f8a2600c9e77de289f5525ea82137498f9619ea65e658c8c7a1275031005f41 //with export commend Private Key (Bothan Broadcaster) 59b82983da69b69076451b530dd4c787c10b14a997bf4970f0dce9b76f695d68","title":"Keys"},{"location":"chains/band/testnet/band-v3-testnet-1/cylinder/mnemonic/","text":"//SIGNER_1 (Band V3 Cylinder) Mnemonic: luxury bachelor stamp creek traffic disease decline cigar broccoli uphold thrive visual basic parade stairs dust health demise swing away notable bulk kid deny Address: band1k7xz9q2m2s3q7748h8nx4k52ts0dk769xhp0pk //SIGNER_2 (Band V3 Cylinder) Mnemonic: duck steel barrel keep save trouble render divorce ancient medal reason canyon melody master design way spread gate morning amount horror pupil chalk diesel Address: band1pwh3c58xqrpw96egg74gpkz8z20zfatp43sdpw //SIGNER_3 (Band V3 Cylinder) Mnemonic: brain divorce leisure trial charge bring noodle foil world situate chase pill august rural subway gauge high volume board search afraid what dawn drastic Address: band17axfps3ckz2r50r7se42f939sfat6mtuvrg33a //SIGNER_4 (Band V3 Cylinder) Mnemonic: cancel stick report like board oil beyond off innocent swap negative current ladder exchange siren pattern mad pair fault brush practice emerge prize mountain Address: band198paugrd5wr9u0jv2sdkrq3x8ckq295xgtekc8 //SIGNER_5 (Band V3 Cylinder) Mnemonic: message broom movie romance gauge welcome person soccer timber warrior denial stamp melt dignity toward promote enlist nature rare scatter ahead name supply tooth Address: band1fna64em8t6auhs2k6n79l5pvf2gyqlkjwx8plr","title":"Mnemonic"},{"location":"chains/band/testnet/band-v3-testnet-1/grogu/mnemonic/","text":"//FEEDER_1 Mnemonic: onion laugh post rural sick include drive era jaguar diesel negative minute pen park sock twist brisk width eternal reason happy pizza glance sponsor Address: band12mxrk5p8hwaay59k62mfymad5gn3ne7rr2nuwq //FEEDER_2 Mnemonic: minimum cushion curtain remove prepare label space toward hole decrease shallow second erosion aim heavy crater educate blush apology dice east quiz lesson daring Address: band1kkdytg0ald0r6rs4lz36qz035m94dtvj4qt6xu //FEEDER_3 Mnemonic: dentist pride pride upset govern damage neck primary captain letter goddess bargain inquiry collect essence comic seek retire ahead invest spirit erupt focus shove Address: band1szthy42svlu77pmtfxjjwg8rw2lknrrxgm68ua //FEEDER_4 Mnemonic: airport verify illness place kangaroo adjust type cheese key salute cigar field maid school over walk tail puzzle stick control program leisure alter tired Address: band1zu0gjyhnfuczx9st4z6dlmws4srlncycfvf4ts //FEEDER_5 Mnemonic: online immune chicken refuse similar blame card warfare enough borrow city sphere bounce trap razor food awesome base chaos artist grow volume angry frequent Address: band10aumrk6zvksqhuhmegz6wy2fxduysemmd5rx43","title":"Mnemonic"},{"location":"chains/band/testnet/band-v3-testnet-1/yoda/mnemonic/","text":"//REPORTER_1 Mnemonic: theory excuse control endless impulse engage any original sleep afraid region web close tool disorder cricket exclude then sea course genius split differ pelican Address: band1af88yf2kgccpzsmq4hd5eexewesj5w49dfm3zs //REPORTER_2 Mnemonic: carbon tide blue ripple oxygen shoe success hill combine agent fortune where auction cover enable maid column system ski brown frozen asset task creek Address: band1avynt4dhyrug278ppzvk260gm56g4yz3lh5kxd //REPORTER_3 Mnemonic: differ broken alpha walnut asthma tobacco glide pave nut swim stool brother monkey exhaust exist gown dutch energy used smart split clown daughter hire Address: band1lc4se6ect7n4x978f3ue0w29aygddqrvmr8ulx //REPORTER_4 Mnemonic: hover capable mystery treat cancel talent section merit voyage spin until electric hand universe usual main sibling attack double chat into attitude ghost squeeze Address: band1ptk07vlxz6m8kugl2yusfm9pcee77xzfvnz2cj //REPORTER_5 Mnemonic: jungle security future blade curtain member clutch message dirt island fish tobacco ripple walnut empty anxiety canvas typical pole frost wall soap test amused Address: band159scm35sfetwrpzk6afhxf8nm0tnwk3qxcmr3t","title":"Mnemonic"},{"location":"chains/base/mainnet/backup/env.mainnet/","text":"RETH_CHAIN=base RETH_SEQUENCER_HTTP=https://mainnet-sequencer.base.org OP_GETH_SEQUENCER_HTTP=https://mainnet-sequencer.base.org # [optional] used to enable geth stats: # OP_GETH_ETH_STATS=nodename:secret@host:port # [required] replace with your preferred L1 (Ethereum, not Base) node RPC URL: #OP_NODE_L1_ETH_RPC=https://1rpc.io/eth #OP_NODE_L1_ETH_RPC=http://148.113.6.97:8545 # Nethermind [recommended] replace with your preferred L1 (Ethereum, not Base) node RPC URL #OP_NODE_L1_ETH_RPC=http://148.113.6.159:8545 # Geth [recommended] replace with your preferred L1 (Ethereum, not Base) node RPC URL OP_NODE_L1_ETH_RPC=http://222.106.187.14:11001 # Geth office5 # [required] replace with your preferred L1 CL beacon endpoint: #OP_NODE_L1_BEACON=https://your.mainnet.beacon.node/endpoint-here #OP_NODE_L1_BEACON=http://148.113.6.97:5052 # teku #OP_NODE_L1_BEACON=http://148.113.6.159:5052 #lighthouse OP_NODE_L1_BEACON=http://222.106.187.14:11006 #office5 prysm # auth secret used by op-geth engine API: OP_NODE_L2_ENGINE_AUTH_RAW=688f5d737bad920bdfb2fc2f488d6b6209eebda1dae949a8de91398d932c517a OP_NODE_L2_ENGINE_AUTH=/tmp/engine-auth-jwt OP_NODE_L2_ENGINE_RPC=ws://execution:8551 OP_NODE_LOG_LEVEL=info OP_NODE_METRICS_ADDR=0.0.0.0 OP_NODE_METRICS_ENABLED=true OP_NODE_METRICS_PORT=7300 OP_NODE_NETWORK=base-mainnet OP_NODE_P2P_AGENT=base OP_NODE_P2P_BOOTNODES=enr:-J24QNz9lbrKbN4iSmmjtnr7SjUMk4zB7f1krHZcTZx-JRKZd0kA2gjufUROD6T3sOWDVDnFJRvqBBo62zuF-hYCohOGAYiOoEyEgmlkgnY0gmlwhAPniryHb3BzdGFja4OFQgCJc2VjcDI1NmsxoQKNVFlCxh_B-716tTs-h1vMzZkSs1FTu_OYTNjgufplG4N0Y3CCJAaDdWRwgiQG,enr:-J24QH-f1wt99sfpHy4c0QJM-NfmsIfmlLAMMcgZCUEgKG_BBYFc6FwYgaMJMQN5dsRBJApIok0jFn-9CS842lGpLmqGAYiOoDRAgmlkgnY0gmlwhLhIgb2Hb3BzdGFja4OFQgCJc2VjcDI1NmsxoQJ9FTIv8B9myn1MWaC_2lJ-sMoeCDkusCsk4BYHjjCq04N0Y3CCJAaDdWRwgiQG,enr:-J24QDXyyxvQYsd0yfsN0cRr1lZ1N11zGTplMNlW4xNEc7LkPXh0NAJ9iSOVdRO95GPYAIc6xmyoCCG6_0JxdL3a0zaGAYiOoAjFgmlkgnY0gmlwhAPckbGHb3BzdGFja4OFQgCJc2VjcDI1NmsxoQJwoS7tzwxqXSyFL7g0JM-KWVbgvjfB8JA__T7yY_cYboN0Y3CCJAaDdWRwgiQG,enr:-J24QHmGyBwUZXIcsGYMaUqGGSl4CFdx9Tozu-vQCn5bHIQbR7On7dZbU61vYvfrJr30t0iahSqhc64J46MnUO2JvQaGAYiOoCKKgmlkgnY0gmlwhAPnCzSHb3BzdGFja4OFQgCJc2VjcDI1NmsxoQINc4fSijfbNIiGhcgvwjsjxVFJHUstK9L1T8OTKUjgloN0Y3CCJAaDdWRwgiQG,enr:-J24QG3ypT4xSu0gjb5PABCmVxZqBjVw9ca7pvsI8jl4KATYAnxBmfkaIuEqy9sKvDHKuNCsy57WwK9wTt2aQgcaDDyGAYiOoGAXgmlkgnY0gmlwhDbGmZaHb3BzdGFja4OFQgCJc2VjcDI1NmsxoQIeAK_--tcLEiu7HvoUlbV52MspE0uCocsx1f_rYvRenIN0Y3CCJAaDdWRwgiQG OP_NODE_P2P_LISTEN_IP=0.0.0.0 OP_NODE_P2P_LISTEN_TCP_PORT=9222 OP_NODE_P2P_LISTEN_UDP_PORT=9222 OP_NODE_RPC_ADDR=0.0.0.0 OP_NODE_RPC_PORT=8545 OP_NODE_SNAPSHOT_LOG=/tmp/op-node-snapshot-log OP_NODE_VERIFIER_L1_CONFS=4 OP_NODE_ROLLUP_LOAD_PROTOCOL_VERSIONS=true # OP_NODE_L1_TRUST_RPC allows for faster syncing, but should be used *only* if your L1 RPC node # is fully trusted. It also allows op-node to work with clients such as Erigon that do not # support storage proofs: OP_NODE_L1_TRUST_RPC=true # SNAP SYNC # NOTE: This feature is experimental and may lead to syncing issues, delays or difficulties as a result of inability to find peers. We recommend running a full or archive node for production purposes. # To enable snap sync, uncomment and set the env vars below: OP_NODE_SYNCMODE=execution-layer OP_GETH_BOOTNODES=enode://87a32fd13bd596b2ffca97020e31aef4ddcc1bbd4b95bb633d16c1329f654f34049ed240a36b449fda5e5225d70fe40bc667f53c304b71f8e68fc9d448690b51@3.231.138.188:30301,enode://ca21ea8f176adb2e229ce2d700830c844af0ea941a1d8152a9513b966fe525e809c3a6c73a2c18a12b74ed6ec4380edf91662778fe0b79f6a591236e49e176f9@184.72.129.189:30301,enode://acf4507a211ba7c1e52cdf4eef62cdc3c32e7c9c47998954f7ba024026f9a6b2150cd3f0b734d9c78e507ab70d59ba61dfe5c45e1078c7ad0775fb251d7735a2@3.220.145.177:30301,enode://8a5a5006159bf079d06a04e5eceab2a1ce6e0f721875b2a9c96905336219dbe14203d38f70f3754686a6324f786c2f9852d8c0dd3adac2d080f4db35efc678c5@3.231.11.52:30301,enode://cdadbe835308ad3557f9a1de8db411da1a260a98f8421d62da90e71da66e55e98aaa8e90aa7ce01b408a54e4bd2253d701218081ded3dbe5efbbc7b41d7cef79@54.198.153.150:30301 OP_GETH_SYNCMODE=snap","title":"Env.mainnet"},{"location":"chains/base/mainnet/backup/env.mainnet.regacy/","text":"OP_GETH_GENESIS_FILE_PATH=mainnet/genesis-l2.json OP_GETH_SEQUENCER_HTTP=https://mainnet-sequencer.base.org # [optional] used to enable geth stats: # OP_GETH_ETH_STATS=nodename:secret@host:port # [recommended] replace with your preferred L1 (Ethereum, not Base) node RPC URL: #OP_NODE_L1_ETH_RPC=https://1rpc.io/eth #OP_NODE_L1_ETH_RPC=http://148.113.6.97:8545 # Nethermind [recommended] replace with your preferred L1 (Ethereum, not Base) node RPC URL #OP_NODE_L1_ETH_RPC=http://148.113.6.159:8545 # Geth [recommended] replace with your preferred L1 (Ethereum, not Base) node RPC URL OP_NODE_L1_ETH_RPC=http://222.106.187.14:11001 # Geth office5 # [required] replace with your preferred L1 CL beacon endpoint: #OP_NODE_L1_BEACON=http://148.113.6.97:5052 # teku #OP_NODE_L1_BEACON=http://148.113.6.159:5052 #lighthouse OP_NODE_L1_BEACON=http://222.106.187.14:11006 #office5 prysm # auth secret used by op-geth engine API: OP_NODE_L2_ENGINE_AUTH_RAW=688f5d737bad920bdfb2fc2f488d6b6209eebda1dae949a8de91398d932c517a OP_NODE_BETA_EXTRA_NETWORKS=true OP_NODE_L2_ENGINE_AUTH=/tmp/engine-auth-jwt OP_NODE_L2_ENGINE_RPC=http://geth:8551 OP_NODE_LOG_LEVEL=info OP_NODE_METRICS_ADDR=0.0.0.0 OP_NODE_METRICS_ENABLED=true OP_NODE_METRICS_PORT=7300 OP_NODE_NETWORK=base-mainnet OP_NODE_P2P_AGENT=base OP_GETH_GCMODE=full OP_NODE_P2P_BOOTNODES=enr:-J24QNz9lbrKbN4iSmmjtnr7SjUMk4zB7f1krHZcTZx-JRKZd0kA2gjufUROD6T3sOWDVDnFJRvqBBo62zuF-hYCohOGAYiOoEyEgmlkgnY0gmlwhAPniryHb3BzdGFja4OFQgCJc2VjcDI1NmsxoQKNVFlCxh_B-716tTs-h1vMzZkSs1FTu_OYTNjgufplG4N0Y3CCJAaDdWRwgiQG,enr:-J24QH-f1wt99sfpHy4c0QJM-NfmsIfmlLAMMcgZCUEgKG_BBYFc6FwYgaMJMQN5dsRBJApIok0jFn-9CS842lGpLmqGAYiOoDRAgmlkgnY0gmlwhLhIgb2Hb3BzdGFja4OFQgCJc2VjcDI1NmsxoQJ9FTIv8B9myn1MWaC_2lJ-sMoeCDkusCsk4BYHjjCq04N0Y3CCJAaDdWRwgiQG,enr:-J24QDXyyxvQYsd0yfsN0cRr1lZ1N11zGTplMNlW4xNEc7LkPXh0NAJ9iSOVdRO95GPYAIc6xmyoCCG6_0JxdL3a0zaGAYiOoAjFgmlkgnY0gmlwhAPckbGHb3BzdGFja4OFQgCJc2VjcDI1NmsxoQJwoS7tzwxqXSyFL7g0JM-KWVbgvjfB8JA__T7yY_cYboN0Y3CCJAaDdWRwgiQG,enr:-J24QHmGyBwUZXIcsGYMaUqGGSl4CFdx9Tozu-vQCn5bHIQbR7On7dZbU61vYvfrJr30t0iahSqhc64J46MnUO2JvQaGAYiOoCKKgmlkgnY0gmlwhAPnCzSHb3BzdGFja4OFQgCJc2VjcDI1NmsxoQINc4fSijfbNIiGhcgvwjsjxVFJHUstK9L1T8OTKUjgloN0Y3CCJAaDdWRwgiQG,enr:-J24QG3ypT4xSu0gjb5PABCmVxZqBjVw9ca7pvsI8jl4KATYAnxBmfkaIuEqy9sKvDHKuNCsy57WwK9wTt2aQgcaDDyGAYiOoGAXgmlkgnY0gmlwhDbGmZaHb3BzdGFja4OFQgCJc2VjcDI1NmsxoQIeAK_--tcLEiu7HvoUlbV52MspE0uCocsx1f_rYvRenIN0Y3CCJAaDdWRwgiQG OP_NODE_P2P_LISTEN_IP=0.0.0.0 OP_NODE_P2P_LISTEN_TCP_PORT=9222 OP_NODE_P2P_LISTEN_UDP_PORT=9222 OP_NODE_ROLLUP_CONFIG=mainnet/rollup.json OP_NODE_RPC_ADDR=0.0.0.0 OP_NODE_RPC_PORT=8545 OP_NODE_SNAPSHOT_LOG=/tmp/op-node-snapshot-log OP_NODE_VERIFIER_L1_CONFS=4 OP_NODE_ROLLUP_LOAD_PROTOCOL_VERSIONS=true GETH_SNAPSHOT=false OP_NODE_SYNCMODE=execution-layer # OP_NODE_L1_TRUST_RPC allows for faster syncing, but should be used *only* if your L1 RPC node # is fully trusted. It also allows op-node to work with clients such as Erigon that do not # support storage proofs: OP_NODE_L1_TRUST_RPC=true","title":"Env.mainnet.regacy"},{"location":"chains/berachain/testnet/Artio-v1/","text":"","title":"Index"},{"location":"chains/berachain/testnet/Artio-v1/mnemonics/","text":"mnemonic for bera new-cosmostation role - validator 24 words vicious token ancient guard damage tattoo over initial coin roast clump age space april afraid chalk ocean dizzy permit review topic artefact learn stock","title":"Mnemonics"},{"location":"chains/berachain/testnet/Artio-v1/mnemonics/#mnemonic-for-bera-new-cosmostation","text":"role - validator 24 words vicious token ancient guard damage tattoo over initial coin roast clump age space april afraid chalk ocean dizzy permit review topic artefact learn stock","title":"mnemonic for bera new-cosmostation"},{"location":"chains/celestia/mainnet/","text":"BBR option \uad00\ub828 \uc815\ub9ac BBR TCP BBR\uc740 \uad6c\uae00\uc5d0\uc11c \uac1c\ubc1c\ub41c \ud63c\uc7a1 \uc81c\uc5b4 \uc54c\uace0\ub9ac\uc998 \\ https://www.ietf.org/archive/id/draft-cardwell-iccrg-bbr-congestion-control-01.html net.core.default_qdisc=fq net.ipv4.tcp_congestion_control=bbr First, make sure that the BBR (\"Bottleneck Bandwidth and Round-trip propagation time\") congestion control algorithm is enabled in the system's kernel. The result should contain bbr: sysctl net.ipv4.tcp_congestion_control If not, enable it on Linux by calling the make enable-bbr or by running: sudo modprobe tcp_bbr net.core.default_qdisc=fq net.ipv4.tcp_congestion_control=bbr sudo sysctl -p sudo modprobe tcp_bbr tcp_bbr \ubaa8\ub4c8\uc740 TCP \ub124\ud2b8\uc6cc\ud06c \uc5f0\uacb0\uc5d0\uc11c \ud63c\uc7a1 \uc81c\uc5b4\ub97c \ucd5c\uc801\ud654\ud558\uae30 \uc704\ud55c \ucd5c\uc2e0 \uc54c\uace0\ub9ac\uc998 -> TCP \uc5f0\uacb0\uc758 \uc18d\ub3c4\ub97c \ud5a5\uc0c1\uc2dc\ucf1c latency\ub97c \ucd5c\uc18c\ud654\ud558\uace0 \ub300\uc5ed\ud3ed \uc0ac\uc6a9\ub7c9\uc744 \uadf9\ub300\ud654 echo \"net.core.default_qdisc=fq\" | sudo tee -a fq\ub294 \ub124\ud2b8\uc6cc\ud06c \ud328\ud0b7\uc758 \uacf5\uc815\ud55c \ucc98\ub9ac\uc640 \uc9c0\uc5f0\uc744 \uc904\uc774\uae30 \uc704\ud574 \uc0ac\uc6a9, sysctl.conf\uc5d0 \uc774 \uc124\uc815\uc744 \ucd94\uac00\ud558\uba74 \uc2dc\uc2a4\ud15c \uc7ac\ubd80\ud305 \ud6c4\uc5d0\ub3c4 \uc801\uc6a9\ub428 -> \uc774 \uc124\uc815\uc740 \ub124\ud2b8\uc6cc\ud06c \ud328\ud0b7\uc744 \uacf5\uc815\ud558\uac8c \ubd84\ubc30\ud558\uace0, \ud2b8\ub798\ud53d\uc744 \ub354 \ud6a8\uc728\uc801\uc73c\ub85c \ucc98\ub9ac echo \"net.ipv4.tcp_congestion_control=bbr\" | sudo tee -a /etc/sysctl.conf TCP \uc5f0\uacb0\uc758 \uae30\ubcf8 \ud63c\uc7a1 \uc81c\uc5b4 \uc54c\uace0\ub9ac\uc998\uc73c\ub85c BBR\uc744 \uc124\uc815\ud569\ub2c8\ub2e4. \uc774 \uac12 \uc5ed\uc2dc sysctl.conf\uc5d0 \ucd94\uac00\ub418\uba70, \uc2dc\uc2a4\ud15c \uc7ac\ubd80\ud305 \ud6c4\uc5d0\ub3c4 \uc124\uc815\uc774 \uc720\uc9c0\ub428 -> BBR\uc740 \uace0\uc18d \ub124\ud2b8\uc6cc\ud06c \ud658\uacbd\uc5d0\uc11c \ud2b9\ud788 \uc720\uc6a9\ud558\uba70, \ub124\ud2b8\uc6cc\ud06c\uc758 \ub300\uc5ed\ud3ed\uc744 \ucd5c\ub300\ud55c \ud65c\uc6a9\ud560 \uc218 \uc788\ub3c4\ub85d \ud63c\uc7a1\uc744 \ucd5c\uc18c\ud654 sudo sysctl -p /etc/sysctl.conf \ud30c\uc77c\uc758 \ubaa8\ub4e0 \uc124\uc815\uc744 \uc989\uc2dc \uc801\uc6a9 -> \ub124\ud2b8\uc6cc\ud06c \uad00\ub828 \uc124\uc815\uc774 \uc7ac\ubd80\ud305 \uc5c6\uc774\ub3c4 \ud65c\uc131\ud654 # Print help celestia-appd --help \uc801\uc6a9 \ud6c4 /etc/sysctl.conf \uc81c\uc77c \uc544\ub798\uc5d0 \ucd94\uac00\ub428 net.core.default_qdisc=fq net.ipv4.tcp_congestion_control=bbr BBR \uc124\uc815 \uad00\ub828 github link https://github.com/celestiaorg/celestia-app/issues/3745 \ucc38\uace0\uc790\ub8cc Ginger: https://blog.celestia.org/ginger/ \\ BBR: https://www.ietf.org/archive/id/draft-cardwell-iccrg-bbr-congestion-control-01.html Q&A Does this configuration apply temporarily, or will it persist permanently? Should BBR be applied to the validator node? https://docs.celestia.org/how-to-guides/nodes-overview sentry node = consensus full node","title":"BBR option \uad00\ub828 \uc815\ub9ac"},{"location":"chains/celestia/mainnet/#bbr-option","text":"","title":"BBR option \uad00\ub828 \uc815\ub9ac"},{"location":"chains/celestia/mainnet/#bbr","text":"TCP BBR\uc740 \uad6c\uae00\uc5d0\uc11c \uac1c\ubc1c\ub41c \ud63c\uc7a1 \uc81c\uc5b4 \uc54c\uace0\ub9ac\uc998 \\ https://www.ietf.org/archive/id/draft-cardwell-iccrg-bbr-congestion-control-01.html net.core.default_qdisc=fq net.ipv4.tcp_congestion_control=bbr First, make sure that the BBR (\"Bottleneck Bandwidth and Round-trip propagation time\") congestion control algorithm is enabled in the system's kernel. The result should contain bbr: sysctl net.ipv4.tcp_congestion_control If not, enable it on Linux by calling the make enable-bbr or by running: sudo modprobe tcp_bbr net.core.default_qdisc=fq net.ipv4.tcp_congestion_control=bbr sudo sysctl -p sudo modprobe tcp_bbr tcp_bbr \ubaa8\ub4c8\uc740 TCP \ub124\ud2b8\uc6cc\ud06c \uc5f0\uacb0\uc5d0\uc11c \ud63c\uc7a1 \uc81c\uc5b4\ub97c \ucd5c\uc801\ud654\ud558\uae30 \uc704\ud55c \ucd5c\uc2e0 \uc54c\uace0\ub9ac\uc998 -> TCP \uc5f0\uacb0\uc758 \uc18d\ub3c4\ub97c \ud5a5\uc0c1\uc2dc\ucf1c latency\ub97c \ucd5c\uc18c\ud654\ud558\uace0 \ub300\uc5ed\ud3ed \uc0ac\uc6a9\ub7c9\uc744 \uadf9\ub300\ud654 echo \"net.core.default_qdisc=fq\" | sudo tee -a fq\ub294 \ub124\ud2b8\uc6cc\ud06c \ud328\ud0b7\uc758 \uacf5\uc815\ud55c \ucc98\ub9ac\uc640 \uc9c0\uc5f0\uc744 \uc904\uc774\uae30 \uc704\ud574 \uc0ac\uc6a9, sysctl.conf\uc5d0 \uc774 \uc124\uc815\uc744 \ucd94\uac00\ud558\uba74 \uc2dc\uc2a4\ud15c \uc7ac\ubd80\ud305 \ud6c4\uc5d0\ub3c4 \uc801\uc6a9\ub428 -> \uc774 \uc124\uc815\uc740 \ub124\ud2b8\uc6cc\ud06c \ud328\ud0b7\uc744 \uacf5\uc815\ud558\uac8c \ubd84\ubc30\ud558\uace0, \ud2b8\ub798\ud53d\uc744 \ub354 \ud6a8\uc728\uc801\uc73c\ub85c \ucc98\ub9ac echo \"net.ipv4.tcp_congestion_control=bbr\" | sudo tee -a /etc/sysctl.conf TCP \uc5f0\uacb0\uc758 \uae30\ubcf8 \ud63c\uc7a1 \uc81c\uc5b4 \uc54c\uace0\ub9ac\uc998\uc73c\ub85c BBR\uc744 \uc124\uc815\ud569\ub2c8\ub2e4. \uc774 \uac12 \uc5ed\uc2dc sysctl.conf\uc5d0 \ucd94\uac00\ub418\uba70, \uc2dc\uc2a4\ud15c \uc7ac\ubd80\ud305 \ud6c4\uc5d0\ub3c4 \uc124\uc815\uc774 \uc720\uc9c0\ub428 -> BBR\uc740 \uace0\uc18d \ub124\ud2b8\uc6cc\ud06c \ud658\uacbd\uc5d0\uc11c \ud2b9\ud788 \uc720\uc6a9\ud558\uba70, \ub124\ud2b8\uc6cc\ud06c\uc758 \ub300\uc5ed\ud3ed\uc744 \ucd5c\ub300\ud55c \ud65c\uc6a9\ud560 \uc218 \uc788\ub3c4\ub85d \ud63c\uc7a1\uc744 \ucd5c\uc18c\ud654 sudo sysctl -p /etc/sysctl.conf \ud30c\uc77c\uc758 \ubaa8\ub4e0 \uc124\uc815\uc744 \uc989\uc2dc \uc801\uc6a9 -> \ub124\ud2b8\uc6cc\ud06c \uad00\ub828 \uc124\uc815\uc774 \uc7ac\ubd80\ud305 \uc5c6\uc774\ub3c4 \ud65c\uc131\ud654 # Print help celestia-appd --help","title":"BBR"},{"location":"chains/celestia/mainnet/#_1","text":"/etc/sysctl.conf \uc81c\uc77c \uc544\ub798\uc5d0 \ucd94\uac00\ub428 net.core.default_qdisc=fq net.ipv4.tcp_congestion_control=bbr","title":"\uc801\uc6a9 \ud6c4"},{"location":"chains/celestia/mainnet/#bbr-github-link","text":"https://github.com/celestiaorg/celestia-app/issues/3745","title":"BBR \uc124\uc815 \uad00\ub828 github link"},{"location":"chains/celestia/mainnet/#_2","text":"Ginger: https://blog.celestia.org/ginger/ \\ BBR: https://www.ietf.org/archive/id/draft-cardwell-iccrg-bbr-congestion-control-01.html","title":"\ucc38\uace0\uc790\ub8cc"},{"location":"chains/celestia/mainnet/#qa","text":"Does this configuration apply temporarily, or will it persist permanently? Should BBR be applied to the validator node? https://docs.celestia.org/how-to-guides/nodes-overview sentry node = consensus full node","title":"Q&amp;A"},{"location":"chains/celestia/mainnet/legacy/bridge_key/","text":"NAME: my_celes_key ADDRESS: celestia1dx27g9zd0td8lzs6kc9gp2guh7vy0aawv0jaha MNEMONIC (save this somewhere safe!!!): inquiry issue trick twelve next onion bitter era huge sphere fuel grunt vague student opinion fit during stairs runway illegal drink spend donor safe Mainnet Old Bridge Id 12D3KooWDnc9NAjoqN1f1LuVvsmKgFzFsu1KX99jqKSXDNUS6SJz","title":"Bridge key"},{"location":"chains/celestia/mainnet/legacy/keyring-test/","text":"6995e4144d7ada7f8a1ab60a80a91cbf9847f7ae.address eyJhbGciOiJQQkVTMi1IUzI1NitBMTI4S1ciLCJjcmVhdGVkIjoiMjAyMy0xMC0zMCAwMzoyOTowOS45ODQxNjA1NTMgKzAxMDAgQ0VUIG09KzAuMDI0NzI3MDUwIiwiZW5jIjoiQTI1NkdDTSIsInAyYyI6ODE5MiwicDJzIjoiY2VDOWFIZTNBTjEyeDBvRiJ9.mqfqs_kS1TJ4vGmJ8MpH8uD1T8DHeg_-QqzEoew43Er-WhNdm-QRkQ.yzeF-ga-Lq4QYTd7.Hd4mwlLijO8jay6XNgoAlR8ahhLgtLSvXgRLDHWLiyyuaP6x3-zNDwwvwCUOHIRJLjc9gkdXsUAyKzAT16ISRbZ2C4GlBKz2yejdKoNdtcLOuFrwh5bimg5eTj6vl8XTAG7klQ6FGHf-FJfTizuhVxfpF9aeKugumtKO6cdq066AhBkvChya5sVFX6jVM2ZsaSNWfR7UhOosV6NrI9OHGooe36aq5FbgDFxMCAbsYO0bwnlnizXBa1YtHcdZcg.oPC7ixh6q9SG_kkMYAIUoA bridge.info eyJhbGciOiJQQkVTMi1IUzI1NitBMTI4S1ciLCJjcmVhdGVkIjoiMjAyMy0xMC0zMSAxNTo0NToxMC43MzQ5MzU1MzIgKzAxMDAgQ0VUIG09KzUuNzEwNDE5MTY3IiwiZW5jIjoiQTI1NkdDTSIsInAyYyI6ODE5MiwicDJzIjoiRWZYcG9SNEk3TloxbzBETSJ9.EHpRaxrYDzix6osGIE0Eq2up8iAKhzcgu7M6SHxHuM3nIQ_JfeKdEg.YwLdoklUvGjUuLnG.yIpnl2I5ogjSb5vFlCViOcLkZIvgfn3vQsmOXXBAQ1-ODXn9xzfPN73K40DeqoyiQNe0AQuov1i24j-us3lJYWAyI-Oe6j_yPBoUTy4Hke0nKY33UxP-zY8mDD2XDUvN1KnTQIApaT8MrgalOl9-8zRTgIRXAeimaLNYP8hvBCUtjoi4dhV6UJzrNSh6_awtKLayNh-zGkvYkwJaR-yR7fK6KnnrlP197yDfB5KMdJ4TwhpIOt3iP04rMeQ5R2mWiFwU_q1Joih9_SF4Q-kEnSZK1OiaoI2NoRMEy4F32nlGoiYN0hkqONzl4mpMzpgbIXKzsRj48nymuDKt0ZAkrlTpAAY9uInwxqdB35pq5wQsMNPMkpJmiMM0xt5mzZwC3QvYLPh13-wQe8GObhyJowLLLZ4j_Bz3loW0U_BT6PNDV7V38aGjLxLwRk2zHHeETg.GP3ZjxRqdYzAONuZ1BrcOw c2cb0aab99d5c7b4ea377ecba9e69391cfbab2f7.address eyJhbGciOiJQQkVTMi1IUzI1NitBMTI4S1ciLCJjcmVhdGVkIjoiMjAyMy0xMC0zMSAxNTo0NToxMC43MzYzNjM5NDEgKzAxMDAgQ0VUIG09KzUuNzExODQ3NTc2IiwiZW5jIjoiQTI1NkdDTSIsInAyYyI6ODE5MiwicDJzIjoiQ1h5Zl9WdzNMeWpZWlZ3ciJ9.5HSpprCVREDDGlC948t1dbz-t6pIz39dcq_2c5DX_cjaPqcd0V6zCw.8hJ1r9GyeP1FJav8.qMyjjzMcWBreEKzTT0KiARmbhyrT-HvkC223LFWr_ukCGDxT1eAA9hXj3RvxyjvEWttraxJBWKatJH27GVaznEE3NeqMhTJVIVCLcUT2tG_Oq1G7VeHQL43z97obFR8OiDRavdjN2t8XnZPzZoyZuVTtdDnj72khDs8qbFC_llv2U2WdQLke1AMZovAv331nzFrh2NTgnlY3lV5kCf83u3XP9ljMFJdzq1PAjL0e0hpqpGra1F0.HrLPqDjTqpXdPhfyF1feig my_celes_key.info eyJhbGciOiJQQkVTMi1IUzI1NitBMTI4S1ciLCJjcmVhdGVkIjoiMjAyMy0xMC0zMCAwMzoyOTowOS45ODIzOTQ2NzUgKzAxMDAgQ0VUIG09KzAuMDIyOTYxMTgyIiwiZW5jIjoiQTI1NkdDTSIsInAyYyI6ODE5MiwicDJzIjoiRXVGbmdRZ29UdldnSThEdyJ9.SJaj7ZD577F1dxS1VHr6eUCV-hGCBHDEFf5h-87MeAcYVsQ2ZTHHuQ.Ugc7LJJFllw-so8a.Ro3K8jop8RL7Q_s36Fn5SYoCWPDYbHFdQFFdTQOL6pxohd4dP_W7yvTxHwtRWnY6wwIPXyhkQiAz3h7kpjxzQuWAgYVanbSwdyVEXazIBfVdUuK_9x8lAoGJBU7DZU6xRTqS4KaatxMFcvij5AEnuDip9FBeFSsecK_RkXuHEOXfpERHp5oLx4RFO-2Ss4hWYmLav5IXtRLkjHTLX9Rwkelds5aJQfFpjJEWGhS_E1tnyfrUXoLx6PmZYfdVyi7vNEENpMkprXAIxx6JbZTkMpDsTAUaXHUtNJqm1felt_9JpphbSwO1Gq1Gc2eS_jysdkp_TxTqgl-ha2otWY3_JATJRxUC0uFDGnk-Eff1ix08UG41fpOGg_H8h3Lj-89QK-GUbSjLBlWOuM4kWnz3pRFnPF9kus09qL5FqK1tR2Rw1262O48u27FNx5YOaC6jd5vO7K6OYsQNyDrp-atc.uUCgpEKV72-YBXWwXeQ-JA","title":"Keyring test"},{"location":"chains/celestia/mainnet/legacy/service/","text":"[Unit] Description=Running a celestia bridge node as a background service ConditionPathExists=/home/celestia/go/bin/celestia After=network.target [Service] Type=simple User=celestia Group=celestia Environment=GODEBUG=\"asynctimerchan=1\" ExecStart=/home/celestia/go/bin/celestia bridge start \\ --p2p.network=celestia \\ --node.store=/data/node/.celestia-bridge \\ --keyring.keyname=bridge \\ --metrics.tls=true --metrics --metrics.endpoint otel.celestia.observer --p2p.metrics \\ --rpc.skip-auth Restart=always RestartSec=3 # make sure log directory exists and owned by syslog PermissionsStartOnly=true ExecStartPre=/bin/mkdir -p /var/log/celestia-bridge_celestia ExecStartPre=/bin/chown syslog:adm /var/log/celestia-bridge_celestia ExecStartPre=/bin/chmod 755 /var/log/celestia-bridge_celestia StandardOutput=syslog StandardError=syslog SyslogIdentifier=celestia-bridge_celestia [Install] WantedBy=multi-user.target","title":"Service"},{"location":"chains/celestia/mainnet/shwap%20bridge/bridge_key/","text":"NAME: my_celes_key ADDRESS: celestia1wue0ldz75gzd2xfletdawytu6dqt7xjctj5t25 MNEMONIC (save this somewhere safe!!!): wagon bid blur torch coin earth planet guilt bundle maple attitude tragic mother rebel flash soup tomorrow piano raw educate differ water help seek Mainnet Bridge Id 12D3KooWJgWcLLiNnYqLihKW1PFuPDBT1uWoFengKXrTxVyiUwca","title":"Bridge key"},{"location":"chains/celestia/mainnet/shwap%20bridge/keyring-test/","text":"7732ffb45ea204d5193fcadbd7117cd340bf1a58.address eyJhbGciOiJQQkVTMi1IUzI1NitBMTI4S1ciLCJjcmVhdGVkIjoiMjAyNC0xMS0yMSAwMjoyNToxNS4yNDEzNzM0MiArMDAwMCBVVEMgbT0rMC4wNTgwNjIzNjQiLCJlbmMiOiJBMjU2R0NNIiwicDJjIjo4MTkyLCJwMnMiOiJFejlWR091N0UwVzQtQ29EIn0.dLtFY7MnaeP0qP_1Fh2KvcglHY_5Uq5X_D1fddbZqHbHNeh0xV0uvg.vgUfyoQSf7d7N-cd.Bpdw6E9pzMCiJLGCnKcEmrxcx94DSv-2SUfr314k5CbA78MWQ_-_tma7tRwhhkzyFONZF4RpdsFPPwO1j3I0DyJaFenD46SaGkY5L4ed34dfj2Pd9WxhNSsM8Tlfe1TP7qn0UH9vi58dtAAQ-9UwcTyjl8txk6PfvBTgKVNub4Y-7WBctKtj65qu7llWP_ubOm-2DoBYaiXkfiqvg47v4Hm3taH5A4Za4-3_vURZTxHblYC7a7eW3IQzi-Lh1A.L_p5jlJ9uORqeTe5I5wWNw my_celes_key.info eyJhbGciOiJQQkVTMi1IUzI1NitBMTI4S1ciLCJjcmVhdGVkIjoiMjAyNC0xMS0yMSAwMjoyNToxNS4yMzkzOTk2NzMgKzAwMDAgVVRDIG09KzAuMDU2MDg4NjE3IiwiZW5jIjoiQTI1NkdDTSIsInAyYyI6ODE5MiwicDJzIjoicUdQUUJRS0VSZFcwUTE3NyJ9.IF7oNs8rJ_VG-0xhmRrVkKRrTMAzN8BVG_Ho58Pzi9h0AmY1eUh5aQ.vsxh8LiaMIFPGPNX.XiG4k9NKlmWDVB7l2jqK4D8gxfeDLCyDOe3le4TLJFPDOJ3JIj5PKUtSeNQi6m5rlsErT7-0wyRg2Nj1aGEOZFuQDX-dXfrWNkeSZ_Pl8aDbgv8RhMLRyu5sbX9OAwyXaipXdzjSXxPTATgngZctlCwcNxHv6Rv63tz3W9-0g-kzI5G68r2UB2jPUCKCXsuksR_i3H52f_d6WUxW8_WOC-qq4NU3nYGEHhxhfiJQmykCwtjY1ryeN8JsGwAtYLvkWaHP0UaC_iKAeREB_wcUjdTRpQPhfCkRyQ7NGNt1JQsfVLU36GV020jrtHJS_boBu9BffeFV6JNndlLAbLez_5VTP8uZE6_bbHUf8ruizzOydn1E3oheVQjUpqEmJP8-WVn-psLibSfiKca6_uEnq-NSI2w-yHKsWmbkSCjcSZO28_3RXVbo6sy7tu2iWwQdwVb1M4nwSQHIrvXafEXY.VgV3qT-38Bd3BgHEZQtziA","title":"Keyring test"},{"location":"chains/celestia/mainnet/shwap%20bridge/service/","text":"[Unit] Description=celestia-bridge Cosmos daemon ConditionPathExists=/home/celestia/go/bin/celestia After=network.target [Service] Type=simple User=celestia Group=celestia LimitNOFILE=1400000 Restart=on-failure RestartSec=3 Environment=GODEBUG=\"asynctimerchan=1\" WorkingDirectory=/home/celestia/infra-organizer ExecStart=/home/celestia/go/bin/celestia bridge start --node.store=/data/node/.celestia-bridge --keyring.keyname=my_celes_key --metrics.tls=true --metrics --metrics.endpoint otel.celestia.observer --p2p.metrics --rpc.skip-auth --archival PermissionsStartOnly=true ExecStartPre=/bin/mkdir -p /var/log/celestia-bridge-node_celestia ExecStartPre=/bin/chown syslog:adm /var/log/celestia-bridge-node_celestia ExecStartPre=/bin/chmod 755 /var/log/celestia-bridge-node_celestia StandardOutput=syslog StandardError=syslog SyslogIdentifier=celestia-bridge-node_celestia [Install] WantedBy=multi-user.target","title":"Service"},{"location":"chains/celestia/testnet/mocha-4/legacy/mnemonic/","text":"role - validator 24 words (cosmos default) dirt room total defense clarify dress tuition code decrease horror another benefit tongue stick industry ship enact swim ketchup double pigeon infant wish odor role - orchestrator & celestia-bridge & celestia-orchestrator elder session coral nerve spatial ritual glow local draw spring diary stable square pass oak hamster observe buyer shock worth budget outside chapter mom","title":"Mnemonic"},{"location":"chains/celestia/testnet/mocha-4/legacy/orchestrator/","text":"[Unit] Description=Blobstream orchestrator service After=network.target [Service] Type=simple User=celestia Group=celestia ExecStart=/home/celestia/go/bin/blobstream orchestrator start --evm.account 0x243855E1f8570a89AeCD830EBe6f52ea38274d3c --evm.passphrase dnpfqldwhr Restart=always RestartSec=3 LimitNOFILE=1048576 # make sure log directory exists and owned by syslog PermissionsStartOnly=true ExecStartPre=/bin/mkdir -p /var/log/orchestrator_mocha-4 ExecStartPre=/bin/chown syslog:adm /var/log/orchestrator_mocha-4 ExecStartPre=/bin/chmod 755 /var/log/orchestrator_mocha-4 StandardOutput=syslog StandardError=syslog SyslogIdentifier=orchestrator_mocha-4 [Install] WantedBy=multi-user.target","title":"Orchestrator"},{"location":"chains/celestia/testnet/mocha-4/legacy/old%20bridge/service/","text":"[Unit] Description=celestia-bridge Cosmos daemon ConditionPathExists=/home/celestia/go/bin/celestia After=network.target [Service] Type=simple User=celestia Group=celestia LimitNOFILE=1400000 Restart=on-failure RestartSec=3 Environment=GODEBUG=\"asynctimerchan=1\" WorkingDirectory=/home/celestia/infra-organizer ExecStart=/home/celestia/go/bin/celestia bridge start \\ --p2p.network mocha \\ --node.store /data/node/.celestia-bridge \\ --metrics \\ --metrics.tls=true \\ --metrics.endpoint otel.celestia-mocha.com \\ --p2p.metrics --rpc.skip-auth # --core.ip 158.247.233.222:10002 #--core.ip mocha-4-consensus.mesa.newmetric.xyz:26657 #--core.ip full.consensus.mocha-4.celestia-mocha.com:26657 # make sure log directory exists and owned by syslog PermissionsStartOnly=true ExecStartPre=/bin/mkdir -p /var/log/celestia-bridge-node_mocha ExecStartPre=/bin/chown syslog:adm /var/log/celestia-bridge-node_mocha ExecStartPre=/bin/chmod 755 /var/log/celestia-bridge-node_mocha StandardOutput=syslog StandardError=syslog SyslogIdentifier=celestia-bridge-node_mocha [Install] WantedBy=multi-user.target","title":"Service"},{"location":"chains/celestia/testnet/mocha-4/shwap%20bridge/key/","text":"2024-10-12T00:45:33.370Z INFO node nodebuilder/init.go:31 Initializing Bridge Node Store over '/data/node/.celestia-bridge' 2024-10-12T00:45:33.370Z INFO node nodebuilder/init.go:64 Saved config {\"path\": \"/data/node/.celestia-bridge/config.toml\"} 2024-10-12T00:45:33.370Z INFO node nodebuilder/init.go:66 Accessing keyring... 2024-10-12T00:45:33.374Z WARN node nodebuilder/init.go:196 Detected plaintext keyring backend. For elevated security properties, consider using the `file` keyring backend. 2024-10-12T00:45:33.374Z INFO node nodebuilder/init.go:211 NO KEY FOUND IN STORE, GENERATING NEW KEY... {\"path\": \"/data/node/.celestia-bridge/keys\"} 2024-10-12T00:45:33.386Z INFO node nodebuilder/init.go:216 NEW KEY GENERATED... NAME: my_celes_key \\ ADDRESS: celestia16njyg5c62u2na3g4d45x4t0jn54hnp50vhqkxg \\ MNEMONIC (save this somewhere safe!!!): bind pear reject hero travel clever safe wise awesome maximum harvest library dizzy silly buffalo radar crystal ship upset mad leopard zone knock exhaust 2024-10-12T00:45:33.386Z INFO node nodebuilder/init.go:73 Node Store initialized Old Mocha Bridge ID 12D3KooWDBrsgL6KpbbQK4fgBwCjMMVT5rFpYbvKbzLSzF9gexje Shwap Mocha Bridge ID 12D3KooWR176xChPV3YFEtRPwAd8hAjnSNQqBr6cuqkDa9FvBEmF","title":"Key"},{"location":"chains/cosmos/testnet/provider/mnemonic/","text":"role - validator 24 words (cosmos default) dirt room total defense clarify dress tuition code decrease horror another benefit tongue stick industry ship enact swim ketchup double pigeon infant wish odor","title":"Mnemonic"},{"location":"chains/cosmos/testnet/provider/demoDay%28250205%29/mnemonic/","text":"1\ucc28 \uc2dc\ub3c4 validator2 amazing border viable enough verb twist sauce impulse era quality nose undo can trip theory army climb neck father decade huge owner dog drum validator3 raise action empower gown express legend sniff obey know swim camera jaguar vendor total nut raw nerve feed gown around bounce canyon equip ball address: cosmos187uz0dje3sg8wu0v5dekg376kgsrwmq55uv9fa name: validator2 pubkey: '{\"@type\":\"/cosmos.crypto.secp256k1.PubKey\",\"key\":\"A3sANwnpdOPPGgsabGwCT8KJdrcnbagycx4HUkX41+7I\"}' type: local address: cosmos18mpmjqchsquzgqk9hz95cmxlsfm3g39tz9khn9 name: validator3 pubkey: '{\"@type\":\"/cosmos.crypto.secp256k1.PubKey\",\"key\":\"AsWuHMrCN0AVXMfiuKAkWBam+KtGHfUyeukQdzPUtZRr\"}' type: local 2\ucc28 \uc2dc\ub3c4 multisig1 magic monster myself pulse obvious network palace crack pepper spike vocal embody gas garden fatal romance trip answer egg flower decade found still scale multisig2 item legend rack blossom amount exhaust never stool ugly year just jacket repeat athlete into exist sudden suit frequent ivory vacuum conduct sword quarter address: cosmos16wq7yjxansnc4f03ljfxf7a34w5fjz9z6xxlt0 name: multisig1 pubkey: '{\"@type\":\"/cosmos.crypto.secp256k1.PubKey\",\"key\":\"A2+aDGuuaTn4g+afJI98enqLaz433V4oDap19E5+yEuK\"}' type: local address: cosmos1m6repz5sxce0jprepqhkf080nvalsage7adsdu name: multisig2 pubkey: '{\"@type\":\"/cosmos.crypto.secp256k1.PubKey\",\"key\":\"AiLnDb2JuoiDoKXDlrlsnZC4Z3VWzWLlIDkEvP3kQZKS\"}' type: local 3\ucc28 \uc2dc\ub3c4 multisig1 horror hint acquire wild bargain sample enough margin name virtual argue toddler fit slim sort swallow vivid write close situate uncle hub piano furnace multisig2 ice raw reason rate wife expand discover stuff kiwi perfect sword car spawn duty actress parent raccoon dune blouse egg filter churn pink cute address: cosmos1mdzk69znjllju82te006w96pd9u2nnjwk26xpr name: multisig1 pubkey: '{\"@type\":\"/cosmos.crypto.secp256k1.PubKey\",\"key\":\"AjscICQHlGw1dExzbGaYwTXSvoTsCRNOvWleh5Xu9iNq\"}' type: local address: cosmos1flfqhtqyacs0ls83l5z3nmr3cfherkffjevkyq name: multisig2 pubkey: '{\"@type\":\"/cosmos.crypto.secp256k1.PubKey\",\"key\":\"A+10BmpDMUx0OnVxvPfAqVj/oudWQgkA/Oyjou2ljAYK\"}' type: local","title":"Mnemonic"},{"location":"chains/cosmos/testnet/provider/demoDay%28250205%29/wasm%20%26%20multisig/","text":"\u279c ~ gaiad keys add multisig1 --home /data/node/.gaiad --keyring-backend test - address: cosmos1mdzk69znjllju82te006w96pd9u2nnjwk26xpr name: multisig1 pubkey: '{\"@type\":\"/cosmos.crypto.secp256k1.PubKey\",\"key\":\"AjscICQHlGw1dExzbGaYwTXSvoTsCRNOvWleh5Xu9iNq\"}' type: local **Important** write this mnemonic phrase in a safe place. It is the only way to recover your account if you ever forget your password. horror hint acquire wild bargain sample enough margin name virtual argue toddler fit slim sort swallow vivid write close situate uncle hub piano furnace \u279c ~ gaiad keys add multisig2 --home /data/node/.gaiad --keyring-backend test - address: cosmos1flfqhtqyacs0ls83l5z3nmr3cfherkffjevkyq name: multisig2 pubkey: '{\"@type\":\"/cosmos.crypto.secp256k1.PubKey\",\"key\":\"A+10BmpDMUx0OnVxvPfAqVj/oudWQgkA/Oyjou2ljAYK\"}' type: local **Important** write this mnemonic phrase in a safe place. It is the only way to recover your account if you ever forget your password. ice raw reason rate wife expand discover stuff kiwi perfect sword car spawn duty actress parent raccoon dune blouse egg filter churn pink cute gaiad keys list - address: cosmos1mdzk69znjllju82te006w96pd9u2nnjwk26xpr name: multisig1 pubkey: '{\"@type\":\"/cosmos.crypto.secp256k1.PubKey\",\"key\":\"AjscICQHlGw1dExzbGaYwTXSvoTsCRNOvWleh5Xu9iNq\"}' type: local - address: cosmos1flfqhtqyacs0ls83l5z3nmr3cfherkffjevkyq name: multisig2 pubkey: '{\"@type\":\"/cosmos.crypto.secp256k1.PubKey\",\"key\":\"A+10BmpDMUx0OnVxvPfAqVj/oudWQgkA/Oyjou2ljAYK\"}' type: local - address: cosmos1x5wgh6vwye60wv3dtshs9dmqggwfx2ldnqvev0 name: validator pubkey: '{\"@type\":\"/cosmos.crypto.secp256k1.PubKey\",\"key\":\"AnDGSF7VFQs9VKEceS6cWhfajxh/mmv+Mbu9bCM9BDzK\"}' type: local gaiad tx wasm instantiate 66 \"$(cat /home/provider-testnet/DemoDay_250204/parameters.json)\" --admin=\"cosmos1x5wgh6vwye60wv3dtshs9dmqggwfx2ldnqvev0\" --label=my-contract --from validator --keyring-backend test --home /data/node/.gaiad --chain-id provider --node http://localhost:53902 --gas auto --gas-adjustment 2 --gas-prices 0.005uatom -y gas estimate: 406546 code: 0 codespace: \"\" data: \"\" events: [] gas_used: \"0\" gas_wanted: \"0\" height: \"0\" info: \"\" logs: [] raw_log: \"\" timestamp: \"\" tx: null txhash: FEDA2B48BC8F23E17FA61D95B0FA7D6BC912DD5324F4659CC9915156E92E65E0 gaiad q wasm list-contracts-by-creator cosmos1x5wgh6vwye60wv3dtshs9dmqggwfx2ldnqvev0 cosmos12p8v7ctj3nh5a7rkft6h96jguyc7znm9vjxu0w25yn6g6zuxspzscw02h7 gaiad tx bank send cosmos1x5wgh6vwye60wv3dtshs9dmqggwfx2ldnqvev0 cosmos1mdzk69znjllju82te006w96pd9u2nnjwk26xpr 1000000uatom --from validator --chain-id provider --node http://localhost:53902 --gas auto --gas-adjustment 2 --gas-prices 0.005uatom -y gas estimate: 201170 code: 0 codespace: \"\" data: \"\" events: [] gas_used: \"0\" gas_wanted: \"0\" height: \"0\" info: \"\" logs: [] raw_log: \"\" timestamp: \"\" tx: null txhash: 4228D38D69EE3581C2034EB5B74534AB5456EC24B05D89DC800B30F583CF7FEE gaiad tx bank send cosmos1x5wgh6vwye60wv3dtshs9dmqggwfx2ldnqvev0 cosmos1flfqhtqyacs0ls83l5z3nmr3cfherkffjevkyq 1000000uatom --from validator --chain-id provider --node http://localhost:53902 --gas auto --gas-adjustment 2 --gas-prices 0.005uatom -y gas estimate: 201170 code: 0 codespace: \"\" data: \"\" events: [] gas_used: \"0\" gas_wanted: \"0\" height: \"0\" info: \"\" logs: [] raw_log: \"\" timestamp: \"\" tx: null txhash: 6E998337FA41132D0014F463A872ED9D89A96E191474B18203C068AFE8D60875 gaiad tx wasm execute cosmos12p8v7ctj3nh5a7rkft6h96jguyc7znm9vjxu0w25yn6g6zuxspzscw02h7 \"$(cat /home/provider-testnet/DemoDay_250204/propose.json)\" --from multisig1 --keyring-backend test --home /data/node/.gaiad --chain-id provider --node http://localhost:53902 --gas-prices 0.005uatom -y code: 0 codespace: \"\" data: \"\" events: [] gas_used: \"0\" gas_wanted: \"0\" height: \"0\" info: \"\" logs: [] raw_log: \"\" timestamp: \"\" tx: null txhash: 3FAA2502CEB9D2424599EAC03E6ED13AE1D50B1AD78388F1D032D960A966C0AB gaiad tx wasm execute cosmos12p8v7ctj3nh5a7rkft6h96jguyc7znm9vjxu0w25yn6g6zuxspzscw02h7 \"$(cat /home/provider-testnet/DemoDay_250204/vote.json)\" --from multisig2 --keyring-backend test --home /data/node/.gaiad --chain-id provider --node http://localhost:53902 --gas-prices 0.005uatom -y code: 0 codespace: \"\" data: \"\" events: [] gas_used: \"0\" gas_wanted: \"0\" height: \"0\" info: \"\" logs: [] raw_log: \"\" timestamp: \"\" tx: null txhash: 4B65C4216632BCAC3F389B3BF1F695058AA9742E5B5FAC95813CFEC21BCAD2BA gaiad tx wasm execute cosmos12p8v7ctj3nh5a7rkft6h96jguyc7znm9vjxu0w25yn6g6zuxspzscw02h7 \"$(cat /home/provider-testnet/DemoDay_250204/execute.json)\" --from multisig1 --keyring-backend test --home /data/node/.gaiad --chain-id provider --gas-prices 0.5uatom -y code: 0 codespace: \"\" data: \"\" events: [] gas_used: \"0\" gas_wanted: \"0\" height: \"0\" info: \"\" logs: [] raw_log: \"\" timestamp: \"\" tx: null txhash: 78C334FCF97D8562156214EED28E7DE83B032B47765788BF95A29173433F719E gaiad tx wasm execute cosmos12p8v7ctj3nh5a7rkft6h96jguyc7znm9vjxu0w25yn6g6zuxspzscw02h7 \"$(cat /home/provider-testnet/DemoDay_250204/execute.json)\" --from multisig1 --keyring-backend test --home /data/node/.gaiad --chain-id provider --gas-prices 0.5uatom -y code: 0 codespace: \"\" data: \"\" events: [] gas_used: \"0\" gas_wanted: \"0\" height: \"0\" info: \"\" logs: [] raw_log: \"\" timestamp: \"\" tx: null txhash: 9B4DD1C8CCBBA5E0EBEEEE9F23845AB9F757F5CC718B3D31B5F73AA361C222CF gaiad tx bank send cosmos1x5wgh6vwye60wv3dtshs9dmqggwfx2ldnqvev0 cosmos12p8v7ctj3nh5a7rkft6h96jguyc7znm9vjxu0w25yn6g6zuxspzscw02h7 1000000uatom --from validator --chain-id provider --node http://localhost:53902 --gas auto --gas-adjustment 2 --gas-prices 0.005uatom -y gas estimate: 175442 code: 0 codespace: \"\" data: \"\" events: [] gas_used: \"0\" gas_wanted: \"0\" height: \"0\" info: \"\" logs: [] raw_log: \"\" timestamp: \"\" tx: null txhash: 755223DCBE4BFA655B928FCF11E5F52A5337BCE47827D8752DE1A9266DD7E3A0","title":"Wasm & multisig"},{"location":"chains/dydx/testnet/mnemonic/","text":"role - validator 24 words (cosmos default) dirt room total defense clarify dress tuition code decrease horror another benefit tongue stick industry ship enact swim ketchup double pigeon infant wish odor","title":"Mnemonic"},{"location":"chains/ethereum/mekong/withdrawal-mnemonic/","text":"make-deposit.sh : withdrawal-mnemonic.txt\uc5d0 \uc788\ub294 \ub2c8\ubaa8\ub2c9\uc744 \uc21c\ucc28\uc801\uc73c\ub85c \uc77d\uc5b4, - \uac80\uc99d\uc778 pubkey\ub97c \uc0dd\uc131 - \ub3d9\uc77c\ud55c \ub2c8\ubaa8\ub2c9\uc73c\ub85c withdraw credential \uc6a9 eth1 \uc8fc\uc18c\ub97c \uc0dd\uc131 - \uacb0\uacfc\ub294 ./validator_keys \ub514\ub809\ud1a0\ub9ac\uc5d0 \uc800\uc7a5 \ub428 get-key.sh : withdrawal-mnemonic.txt \uc5d0 \uc788\ub294 \ub2c8\ubaa8\ub2c9\uc744 \uc21c\ucc28\uc801\uc73c\ub85c \uc77d\uc5b4, - hdpath(m/44'/60'/0'/0/0)\uc758 eth1(secp256k1) privatekey\uc640 address\ub97c \ucd9c\ub825 \ud568 withdrawal-mnemonic.txt : 10\uac1c\uc758 \ub2c8\ubaa8\ub2c9\uc774 \ud3ec\ud568 \ub41c \ud30c\uc77c","title":"Index"},{"location":"chains/ethos/mnemonic/","text":"role - validator 24 words (cosmos default) dirt room total defense clarify dress tuition code decrease horror another benefit tongue stick industry ship enact swim ketchup double pigeon infant wish odor","title":"Mnemonic"},{"location":"chains/flow/testnet/mnemonic/","text":"mnemonic dress kite baby cruise like swarm wage autumn online number rent patient dress kite baby cruise like swarm wage autumn online number rent patient dress kite baby cruise like swarm wage autumn online number rent patient dress kite baby cruise like swarm wage autumn online number rent patient","title":"Mnemonic"},{"location":"chains/flow/testnet/node-address/","text":"flowaccess-testnet.cosmostation.io","title":"Node address"},{"location":"chains/flow/testnet/readme/","text":"image build dockerfile build : ~/flow-evm-gateway\uc758 git tag\uc640 \uc77c\uce58 \uc2dc\ud0b4 docker build -t onflow/flow-evm-gateway:v0.36.3 . init cadence height \uac12 \uc124\uc815 \ubc29\ubc95 INIT_CADENCE_HEIGHT=$(curl -s http://localhost/v1/node_version_info | jq -r '.node_root_block_height') --init-cadence-height=$INIT_CADENCE_HEIGHT","title":"Readme"},{"location":"chains/flow/testnet/readme/#image-build","text":"dockerfile build : ~/flow-evm-gateway\uc758 git tag\uc640 \uc77c\uce58 \uc2dc\ud0b4 docker build -t onflow/flow-evm-gateway:v0.36.3 .","title":"image build"},{"location":"chains/flow/testnet/readme/#init-cadence-height","text":"INIT_CADENCE_HEIGHT=$(curl -s http://localhost/v1/node_version_info | jq -r '.node_root_block_height') --init-cadence-height=$INIT_CADENCE_HEIGHT","title":"init cadence height \uac12 \uc124\uc815 \ubc29\ubc95"},{"location":"chains/flow/testnet/wallet-address/","text":"0xe35024a7b31d7325 0xe35024a7b31d7325 0xe35024a7b31d7325 0xe35024a7b31d7325 0xe35024a7b31d7325 evm address: 0x0x0000000000000000000000028dff47830b7fa233 0x0x0000000000000000000000028dff47830b7fa233 0x0x0000000000000000000000028dff47830b7fa233 0x0x0000000000000000000000028dff47830b7fa233","title":"Wallet address"},{"location":"chains/flow/testnet/wallet-password/","text":"dnpfqldwhr dnpfqldwhr dnpfqldwhr","title":"Wallet password"},{"location":"chains/hyperliquid/READEME/","text":"Hyperliquid Instruction \ud558\uc774\ud37c\ub9ac\ud034\ub4dc\ub294 \ucee8\uc13c\uc11c\uc2a4\ub294 (hotstuff) + \uc5b4\ud50c\ub9ac\ucf00\uc774\uc158\uc740 \uc544\ub9c8\ub3c4 EVM \ub85c \uc774\ub8e8\uc5b4\uc9c4 \uccb4\uc778\uc784 - > \ubca0\ub77c\uccb4\uc778 \ube44\uc2b7\ud55c \ub290\ub08c\uc73c\ub85c \ubcf4\uba74 \ub420\ub4ef. \ud558\uc774\ud37c\ub9ac\ud034\ub4dc \uccb4\uc778\uc740 \ubc14\uc774\ub0b8\uc2a4\uc640 \uac19\uc740 CEX\uc758 \uc720\uc800 \ud2b8\ub79c\uc7ad\uc158\uc744 \uc218\uc6a9\ud558\uae30 \uc704\ud574\uc11c \ucee8\uc13c\uc11c\uc2a4\ub97c \ubcc0\uacbd\ud558\uc600\ub2e4\uace0 \ud568 With Tendermint, Hyperliquid was limited to processing 20,000 orders per second\u2014a respectable figure, but far below Binance\u2019s capability of handling 1.4 million operations per second. Written entirely in Rust, HyperBFT is capable of theoretically processing 2 million orders per second\u2014a 100x improvement over Tendermint. \ub2e4\ub9cc, \ucee8\uc13c\uc11c\uc2a4\uac00 cometbft\uac00 \uc544\ub2cc \ub9cc\ud07c \uae30\ubcf8\uc801\uc73c\ub85c \uc54c\uc544\uc57c\ud560 \uc6a9\uc5b4\ub098 \uc9c0\uc2dd\ub4e4\uc774 \ud544\uc694\ud568 -> https://x.com/asxn_r/status/1853871055208640904 \ucc38\uace0 \uc6b0\ub9ac\uac00 \uc0dd\uac01\ud558\ub294 \uae30\ubcf8\uc801\uc778 \uc5c5\ud0c0\uc784\uc744 \ub9cc\ub4e4\uae30 \uc704\ud574\uc11c\ub294 QC(siging round) & TC(non-signing round)\uc5d0 \ub300\ud574\uc11c \uccb4\ud06c\ud574\uc57c\ud568. I have a question, Is there a clear jail criteria? hyperBFT seems to use a high-performance hotstuff, and validators vote on the QC/TC of a round, not exactly blocks. However, most of the QC signers are 4 nodes from the foundation (presumably through private peering and being on the same network). How many QCs do you have to miss to go to jail ? \"2024-11-07T13:02:13.575006470\", [ \"in\", { \"source\": \"0x1720..30b3\", \"msg\": { \"Block\": { \"proposer\": \"0x1720..30b3\", \"round\": 134186505, \"tx_hashes\": [], \"time\": \"2024-11-07T13:02:13.570710036\", \"qc\": { \"hardfork\": { \"version\": 208, \"round\": 134084607 }, \"round\": 134186504, \"block_hash\": \"0x74bb..1bd5\", \"signers\": [ \"0x1720..30b3\", \"0x3c83..1a76\", \"0x4dbf..aef4\", \"0x946b..5b21\" ] }, \"tc\": null, \"hash\": \"0x2a6e..b000\" } } } ] ] ... ? Spec & Port spec Recommended hardware: 4 CPU cores, 16 gb RAM, 50 gb disk. Currently only Ubuntu 24.04 is supported. Ports 4001 and 4002 are used for gossip and must be open to the public. Otherwise the node IP address will be deprioritized by peers in the p2p network. For lowest latency, run the node in Tokyo, Japan. default docs ref; https://github.com/hyperliquid-dex/node port 3001 : evm json-rpc 3999 : unknown 4000~4010 : p2p ports(or default ports) tcp LISTEN 0 128 0.0.0.0:3001 0.0.0.0:* users:((\"hl-node\",pid=497345,fd=40)) tcp LISTEN 0 1024 0.0.0.0:3999 0.0.0.0:* users:((\"hl-node\",pid=497345,fd=35)) tcp LISTEN 0 1024 0.0.0.0:4002 0.0.0.0:* users:((\"hl-node\",pid=497345,fd=34)) tcp LISTEN 0 1024 0.0.0.0:4001 0.0.0.0:* users:((\"hl-node\",pid=497345,fd=33)) Setup # mkdir for binaries and default json file(visor.json) mkdir -p ~/.local/bin # make default json file if not existed got panic error. cd ~/.local/bin && echo '{\"chain\": \"Testnet\"}' > ~/visor.json # install hl-visor(~= cosmovisor), hl-node(cosmos node) curl https://binaries.hyperliquid.xyz/Testnet/hl-visor > ~/.local/bin/hl-visor && chmod a+x ~/.local/bin/hl-visor # automatically download hl-node also when running the hl-visor later # skip.. # setup infra-organizer git clone .. or mkdir -p ~/infra-organizer/cmd # setup hyperliquid.sh # here is skipped. Check the next step # make override_config.json, \ud53c\uc5b4\ucd94\uac00\uc6a9 echo '{ \"root_node_ips\": [{\"Ip\": \"52.193.108.168\"}, {\"Ip\": \"109.123.231.191\"}, {\"Ip\": \"13.230.56.50\"}, {\"Ip\": \"13.230.8.235\"}, {\"Ip\": \"172.105.216.226\"}, {\"Ip\": \"172.111.146.215\"}, {\"Ip\": \"172.237.11.56\"}, {\"Ip\": \"189.1.164.19\"}, {\"Ip\": \"198.13.56.193\"}, {\"Ip\": \"198.13.56.227\"}, {\"Ip\": \"199.254.199.101\"}, {\"Ip\": \"199.254.199.190\"}, {\"Ip\": \"199.254.199.243\"}, {\"Ip\": \"199.254.199.6\"}, {\"Ip\": \"202.182.101.169\"}, {\"Ip\": \"23.106.227.201\"}, {\"Ip\": \"23.81.44.34\"}, {\"Ip\": \"23.81.44.98\"}, {\"Ip\": \"34.146.90.209\"}, {\"Ip\": \"34.85.11.190\"}, {\"Ip\": \"35.190.227.149\"}, {\"Ip\": \"35.213.85.108\"}, {\"Ip\": \"45.12.134.122\"}, {\"Ip\": \"45.250.255.137\"}, {\"Ip\": \"45.250.255.44\"}, {\"Ip\": \"45.32.50.65\"}, {\"Ip\": \"45.63.123.73\"}, {\"Ip\": \"46.250.251.251\"}, {\"Ip\": \"46.250.253.204\"}, {\"Ip\": \"46.250.254.53\"}, {\"Ip\": \"5.104.84.73\"}, {\"Ip\": \"5.104.86.171\"}, {\"Ip\": \"72.46.86.159\"}, {\"Ip\": \"72.46.86.237\"}, {\"Ip\": \"72.46.86.39\"}, {\"Ip\": \"72.46.86.9\"}, {\"Ip\": \"95.173.204.141\"}], \"try_new_peers\": true, \"chain\": \"Testnet\" }' > ~/infra-organizer/cmd/override_gossip_config.json Service & Script script in the project home cd ~/infra-organizer/cmd && echo ' #!/usr/bin/env bash NOK=1 SNM=hyperliquid CMD=$1 function help() { echo \".${SNM}.sh start / stop / restart / reload / status / log\" } if [ ! $# -eq 1 ]; then help exit ${NOK} fi case ${CMD} in \"start\"|\"restart\") sudo systemctl ${CMD} ${SNM} && sudo journalctl -u ${SNM} -f ;; \"stop\"|\"reload\"|\"status\"|\"enable\"|\"disable\") sudo systemctl ${CMD} ${SNM} ;; \"log\") sudo journalctl -u ${SNM} -f ;; *) echo \"not proper command : ${CMD}\" help ;; esac unset SNM unset CMD' > hyperliquid.sh && chmod +x hyperliquid.sh service in the systemd echo ' Description=Hyperliquid Service After=NetworkManager.service Wants=network-online.target StartLimitIntervalSec=500 StartLimitBurst=5 [Service] Type=simple User=ubuntu Group=ubuntu # ref; https://github.com/hyperliquid-dex/node?tab=readme-ov-file#flags WorkingDirectory=/home/ubuntu/infra-organizer/cmd ExecStart=/home/ubuntu/.local/bin/hl-visor run-non-validator \\ --serve-eth-rpc \\ --replica-cmds-style ExecStop=/bin/kill -s INT ${MAINPID} RestartSec=5s Restart=always # make sure log directory exists and owned by syslog PermissionsStartOnly=true ExecStartPre=/bin/mkdir -p /var/log/hyperliquid ExecStartPre=/bin/chown syslog:adm /var/log/hyperliquid ExecStartPre=/bin/chmod 755 /var/log/hyperliquid StandardOutput=syslog StandardError=syslog SyslogIdentifier=hyperliquid [Install] WantedBy=multi-user.target' > /etc/systemd/system/hyperliquid.service skip rsyslog & logroate Run # start cd ~/infra-organizer/cmd && ./hyperliquid.sh start # get loggs.. ./hyperliquid.sh log #Dec 26 09:35:27 ip-172-31-41-245 hyperliquid[547080]: @@ [context: Context { initial_height: 306477500, hardfork: Hardfork { version: 311, round: #Round(208674452) }, height: 307849000, tx_index: 2, round: Round(213751566), time: Time(Time(2024-12-26T09:35:24.376)), next_oid: 21474855775, #next_lid: 855, next_twap_id: 3426 }] @ [books_pre_hash_latency: Duration(0.033763)] @ [total_latency: Duration(1.773946)] #Dec 26 09:36:53 ip-172-31-41-245 hyperliquid[547080]: 2024-12-26T09:36:53.306Z WARN >>> hl-node @@ applied block 307849100 #Dec 26 09:38:31 ip-172-31-41-245 hyperliquid[547080]: 2024-12-26T09:38:31.279Z WARN >>> hl-node @@ applied block 307849200 #Dec 26 09:39:59 ip-172-31-41-245 hyperliquid[547080]: 2024-12-26T09:39:59.830Z WARN >>> hl-node @@ applied block 307849300 Add key # check the dir ls -al ~/hl/hyperliquid_data/ # if existed # signer key was provided mnemonic(dirt, https://github.com/cosmostation/node-operation/blob/master/asset/testnet/mnemonics.md) # import this mn in your metamask and create private_key & public_key # m/60/0/0/0 -> validator key -> 0x388Ff9fdB11A22aD78e9C5977CC4eD130cE5E88b # m/60/0/0/1 -> signer key -> 0x95e746B5910593d7986584136194a333aaBB979F echo '{\"key\": \"<signer-key>\"}' > ~/hl/hyperliquid_data/node_config.json Useful scripts.. 1_check_block_height.sh #!/usr/bin/env bash # https://hyperliquid.gitbook.io/hyperliquid-docs/for-developers/evm endpoint=http://localhost:3001/evm height=$(curl -sSX POST --header 'Content-Type: application/json' --data '{\"jsonrpc\":\"2.0\",\"method\":\"eth_getBlockByNumber\",\"params\":[\"latest\",false],\"id\":1}' $endpoint | jq .result.number | xargs printf \"%d\") echo \"our node evm block number: $height\" current_date=$(date +%Y%m%d) echo \"our node abci block number: \" tail -n 1 ~/hl/data/block_times/$current_date | jq . 2_check_node_logs.sh #!/usr/bin/env bash #!/bin/bash # Get the current date in YYYYMMDD format current_date=$(date +%Y%m%d) latest_file=\"\" # Iterate through each matching directory with the current date for dir in ~/hl/data/node_logs/*/*/$current_date; do echo $dir # Check if the directory exists and is not empty if [ -d \"$dir\" ]; then # Find the latest file or subdirectory in the current directory latest_in_dir=$(ls -1t \"$dir\" 2>/dev/null | head -n 1) # Construct the full path of the latest file or subdirectory if [ -n \"$latest_in_dir\" ]; then full_path=\"$dir/$latest_in_dir\" # Compare with the global latest_file based on modification time if [ -z \"$latest_file\" ] || [ \"$full_path\" -nt \"$latest_file\" ]; then latest_file=\"$full_path\" fi fi fi # Output the latest file or directory if [ -n \"$latest_file\" ]; then echo \"Latest file or directory: $latest_file\" tail -n 100 \"$latest_file\" 2>/dev/null || echo \"Not a file or cannot read.\" echo else echo \"No files or directories found for date $current_date.\" fi done","title":"Hyperliquid Instruction"},{"location":"chains/hyperliquid/READEME/#hyperliquid-instruction","text":"\ud558\uc774\ud37c\ub9ac\ud034\ub4dc\ub294 \ucee8\uc13c\uc11c\uc2a4\ub294 (hotstuff) + \uc5b4\ud50c\ub9ac\ucf00\uc774\uc158\uc740 \uc544\ub9c8\ub3c4 EVM \ub85c \uc774\ub8e8\uc5b4\uc9c4 \uccb4\uc778\uc784 - > \ubca0\ub77c\uccb4\uc778 \ube44\uc2b7\ud55c \ub290\ub08c\uc73c\ub85c \ubcf4\uba74 \ub420\ub4ef. \ud558\uc774\ud37c\ub9ac\ud034\ub4dc \uccb4\uc778\uc740 \ubc14\uc774\ub0b8\uc2a4\uc640 \uac19\uc740 CEX\uc758 \uc720\uc800 \ud2b8\ub79c\uc7ad\uc158\uc744 \uc218\uc6a9\ud558\uae30 \uc704\ud574\uc11c \ucee8\uc13c\uc11c\uc2a4\ub97c \ubcc0\uacbd\ud558\uc600\ub2e4\uace0 \ud568 With Tendermint, Hyperliquid was limited to processing 20,000 orders per second\u2014a respectable figure, but far below Binance\u2019s capability of handling 1.4 million operations per second. Written entirely in Rust, HyperBFT is capable of theoretically processing 2 million orders per second\u2014a 100x improvement over Tendermint. \ub2e4\ub9cc, \ucee8\uc13c\uc11c\uc2a4\uac00 cometbft\uac00 \uc544\ub2cc \ub9cc\ud07c \uae30\ubcf8\uc801\uc73c\ub85c \uc54c\uc544\uc57c\ud560 \uc6a9\uc5b4\ub098 \uc9c0\uc2dd\ub4e4\uc774 \ud544\uc694\ud568 -> https://x.com/asxn_r/status/1853871055208640904 \ucc38\uace0 \uc6b0\ub9ac\uac00 \uc0dd\uac01\ud558\ub294 \uae30\ubcf8\uc801\uc778 \uc5c5\ud0c0\uc784\uc744 \ub9cc\ub4e4\uae30 \uc704\ud574\uc11c\ub294 QC(siging round) & TC(non-signing round)\uc5d0 \ub300\ud574\uc11c \uccb4\ud06c\ud574\uc57c\ud568. I have a question, Is there a clear jail criteria? hyperBFT seems to use a high-performance hotstuff, and validators vote on the QC/TC of a round, not exactly blocks. However, most of the QC signers are 4 nodes from the foundation (presumably through private peering and being on the same network). How many QCs do you have to miss to go to jail ? \"2024-11-07T13:02:13.575006470\", [ \"in\", { \"source\": \"0x1720..30b3\", \"msg\": { \"Block\": { \"proposer\": \"0x1720..30b3\", \"round\": 134186505, \"tx_hashes\": [], \"time\": \"2024-11-07T13:02:13.570710036\", \"qc\": { \"hardfork\": { \"version\": 208, \"round\": 134084607 }, \"round\": 134186504, \"block_hash\": \"0x74bb..1bd5\", \"signers\": [ \"0x1720..30b3\", \"0x3c83..1a76\", \"0x4dbf..aef4\", \"0x946b..5b21\" ] }, \"tc\": null, \"hash\": \"0x2a6e..b000\" } } } ] ] ... ?","title":"Hyperliquid Instruction"},{"location":"chains/hyperliquid/READEME/#spec-port","text":"spec Recommended hardware: 4 CPU cores, 16 gb RAM, 50 gb disk. Currently only Ubuntu 24.04 is supported. Ports 4001 and 4002 are used for gossip and must be open to the public. Otherwise the node IP address will be deprioritized by peers in the p2p network. For lowest latency, run the node in Tokyo, Japan. default docs ref; https://github.com/hyperliquid-dex/node port 3001 : evm json-rpc 3999 : unknown 4000~4010 : p2p ports(or default ports) tcp LISTEN 0 128 0.0.0.0:3001 0.0.0.0:* users:((\"hl-node\",pid=497345,fd=40)) tcp LISTEN 0 1024 0.0.0.0:3999 0.0.0.0:* users:((\"hl-node\",pid=497345,fd=35)) tcp LISTEN 0 1024 0.0.0.0:4002 0.0.0.0:* users:((\"hl-node\",pid=497345,fd=34)) tcp LISTEN 0 1024 0.0.0.0:4001 0.0.0.0:* users:((\"hl-node\",pid=497345,fd=33))","title":"Spec &amp; Port"},{"location":"chains/hyperliquid/READEME/#setup","text":"# mkdir for binaries and default json file(visor.json) mkdir -p ~/.local/bin # make default json file if not existed got panic error. cd ~/.local/bin && echo '{\"chain\": \"Testnet\"}' > ~/visor.json # install hl-visor(~= cosmovisor), hl-node(cosmos node) curl https://binaries.hyperliquid.xyz/Testnet/hl-visor > ~/.local/bin/hl-visor && chmod a+x ~/.local/bin/hl-visor # automatically download hl-node also when running the hl-visor later # skip.. # setup infra-organizer git clone .. or mkdir -p ~/infra-organizer/cmd # setup hyperliquid.sh # here is skipped. Check the next step # make override_config.json, \ud53c\uc5b4\ucd94\uac00\uc6a9 echo '{ \"root_node_ips\": [{\"Ip\": \"52.193.108.168\"}, {\"Ip\": \"109.123.231.191\"}, {\"Ip\": \"13.230.56.50\"}, {\"Ip\": \"13.230.8.235\"}, {\"Ip\": \"172.105.216.226\"}, {\"Ip\": \"172.111.146.215\"}, {\"Ip\": \"172.237.11.56\"}, {\"Ip\": \"189.1.164.19\"}, {\"Ip\": \"198.13.56.193\"}, {\"Ip\": \"198.13.56.227\"}, {\"Ip\": \"199.254.199.101\"}, {\"Ip\": \"199.254.199.190\"}, {\"Ip\": \"199.254.199.243\"}, {\"Ip\": \"199.254.199.6\"}, {\"Ip\": \"202.182.101.169\"}, {\"Ip\": \"23.106.227.201\"}, {\"Ip\": \"23.81.44.34\"}, {\"Ip\": \"23.81.44.98\"}, {\"Ip\": \"34.146.90.209\"}, {\"Ip\": \"34.85.11.190\"}, {\"Ip\": \"35.190.227.149\"}, {\"Ip\": \"35.213.85.108\"}, {\"Ip\": \"45.12.134.122\"}, {\"Ip\": \"45.250.255.137\"}, {\"Ip\": \"45.250.255.44\"}, {\"Ip\": \"45.32.50.65\"}, {\"Ip\": \"45.63.123.73\"}, {\"Ip\": \"46.250.251.251\"}, {\"Ip\": \"46.250.253.204\"}, {\"Ip\": \"46.250.254.53\"}, {\"Ip\": \"5.104.84.73\"}, {\"Ip\": \"5.104.86.171\"}, {\"Ip\": \"72.46.86.159\"}, {\"Ip\": \"72.46.86.237\"}, {\"Ip\": \"72.46.86.39\"}, {\"Ip\": \"72.46.86.9\"}, {\"Ip\": \"95.173.204.141\"}], \"try_new_peers\": true, \"chain\": \"Testnet\" }' > ~/infra-organizer/cmd/override_gossip_config.json","title":"Setup"},{"location":"chains/hyperliquid/READEME/#service-script","text":"script in the project home cd ~/infra-organizer/cmd && echo ' #!/usr/bin/env bash NOK=1 SNM=hyperliquid CMD=$1 function help() { echo \".${SNM}.sh start / stop / restart / reload / status / log\" } if [ ! $# -eq 1 ]; then help exit ${NOK} fi case ${CMD} in \"start\"|\"restart\") sudo systemctl ${CMD} ${SNM} && sudo journalctl -u ${SNM} -f ;; \"stop\"|\"reload\"|\"status\"|\"enable\"|\"disable\") sudo systemctl ${CMD} ${SNM} ;; \"log\") sudo journalctl -u ${SNM} -f ;; *) echo \"not proper command : ${CMD}\" help ;; esac unset SNM unset CMD' > hyperliquid.sh && chmod +x hyperliquid.sh service in the systemd echo ' Description=Hyperliquid Service After=NetworkManager.service Wants=network-online.target StartLimitIntervalSec=500 StartLimitBurst=5 [Service] Type=simple User=ubuntu Group=ubuntu # ref; https://github.com/hyperliquid-dex/node?tab=readme-ov-file#flags WorkingDirectory=/home/ubuntu/infra-organizer/cmd ExecStart=/home/ubuntu/.local/bin/hl-visor run-non-validator \\ --serve-eth-rpc \\ --replica-cmds-style ExecStop=/bin/kill -s INT ${MAINPID} RestartSec=5s Restart=always # make sure log directory exists and owned by syslog PermissionsStartOnly=true ExecStartPre=/bin/mkdir -p /var/log/hyperliquid ExecStartPre=/bin/chown syslog:adm /var/log/hyperliquid ExecStartPre=/bin/chmod 755 /var/log/hyperliquid StandardOutput=syslog StandardError=syslog SyslogIdentifier=hyperliquid [Install] WantedBy=multi-user.target' > /etc/systemd/system/hyperliquid.service skip rsyslog & logroate","title":"Service &amp; Script"},{"location":"chains/hyperliquid/READEME/#run","text":"# start cd ~/infra-organizer/cmd && ./hyperliquid.sh start # get loggs.. ./hyperliquid.sh log #Dec 26 09:35:27 ip-172-31-41-245 hyperliquid[547080]: @@ [context: Context { initial_height: 306477500, hardfork: Hardfork { version: 311, round: #Round(208674452) }, height: 307849000, tx_index: 2, round: Round(213751566), time: Time(Time(2024-12-26T09:35:24.376)), next_oid: 21474855775, #next_lid: 855, next_twap_id: 3426 }] @ [books_pre_hash_latency: Duration(0.033763)] @ [total_latency: Duration(1.773946)] #Dec 26 09:36:53 ip-172-31-41-245 hyperliquid[547080]: 2024-12-26T09:36:53.306Z WARN >>> hl-node @@ applied block 307849100 #Dec 26 09:38:31 ip-172-31-41-245 hyperliquid[547080]: 2024-12-26T09:38:31.279Z WARN >>> hl-node @@ applied block 307849200 #Dec 26 09:39:59 ip-172-31-41-245 hyperliquid[547080]: 2024-12-26T09:39:59.830Z WARN >>> hl-node @@ applied block 307849300","title":"Run"},{"location":"chains/hyperliquid/READEME/#add-key","text":"# check the dir ls -al ~/hl/hyperliquid_data/ # if existed # signer key was provided mnemonic(dirt, https://github.com/cosmostation/node-operation/blob/master/asset/testnet/mnemonics.md) # import this mn in your metamask and create private_key & public_key # m/60/0/0/0 -> validator key -> 0x388Ff9fdB11A22aD78e9C5977CC4eD130cE5E88b # m/60/0/0/1 -> signer key -> 0x95e746B5910593d7986584136194a333aaBB979F echo '{\"key\": \"<signer-key>\"}' > ~/hl/hyperliquid_data/node_config.json","title":"Add key"},{"location":"chains/hyperliquid/READEME/#useful-scripts","text":"1_check_block_height.sh #!/usr/bin/env bash # https://hyperliquid.gitbook.io/hyperliquid-docs/for-developers/evm endpoint=http://localhost:3001/evm height=$(curl -sSX POST --header 'Content-Type: application/json' --data '{\"jsonrpc\":\"2.0\",\"method\":\"eth_getBlockByNumber\",\"params\":[\"latest\",false],\"id\":1}' $endpoint | jq .result.number | xargs printf \"%d\") echo \"our node evm block number: $height\" current_date=$(date +%Y%m%d) echo \"our node abci block number: \" tail -n 1 ~/hl/data/block_times/$current_date | jq . 2_check_node_logs.sh #!/usr/bin/env bash #!/bin/bash # Get the current date in YYYYMMDD format current_date=$(date +%Y%m%d) latest_file=\"\" # Iterate through each matching directory with the current date for dir in ~/hl/data/node_logs/*/*/$current_date; do echo $dir # Check if the directory exists and is not empty if [ -d \"$dir\" ]; then # Find the latest file or subdirectory in the current directory latest_in_dir=$(ls -1t \"$dir\" 2>/dev/null | head -n 1) # Construct the full path of the latest file or subdirectory if [ -n \"$latest_in_dir\" ]; then full_path=\"$dir/$latest_in_dir\" # Compare with the global latest_file based on modification time if [ -z \"$latest_file\" ] || [ \"$full_path\" -nt \"$latest_file\" ]; then latest_file=\"$full_path\" fi fi fi # Output the latest file or directory if [ -n \"$latest_file\" ]; then echo \"Latest file or directory: $latest_file\" tail -n 100 \"$latest_file\" 2>/dev/null || echo \"Not a file or cannot read.\" echo else echo \"No files or directories found for date $current_date.\" fi done","title":"Useful scripts.."},{"location":"chains/initia/testnet/initia-1/mnemonic/","text":"role - validator 24 words (cosmos default) dirt room total defense clarify dress tuition code decrease horror another benefit tongue stick industry ship enact swim ketchup double pigeon infant wish odor","title":"Mnemonic"},{"location":"chains/iota/testnet/image_update/","text":"* image \uc2e4\uc218 https://github.com/cosmostation/chainlist/blob/main/resource/cosmostation/cosmostation_color.svg => \uc544\ub798 raw \ud30c\uc77c\uc744 \ub123\uc5b4\uc57c\ud568 https://raw.githubusercontent.com/cosmostation/chainlist/refs/heads/main/resource/cosmostation/cosmostation_color.svg * iota validator update-metadata image-url https://raw.githubusercontent.com/cosmostation/chainlist/refs/heads/main/resource/cosmostation/cosmostation_color.svg ------------------------------------------------------------------------------------ iota validator update-metadata image-url https://github.com/cosmostation/chainlist/blob/main/resource/cosmostation/cosmostation_color.svg ----- Transaction Digest ---- EwciTJA81SvQdppFbq85dSMBemZhUbsMxYBxSMwre8d5 ----- Transaction Data ---- \u256d\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e \u2502 Transaction Data \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502 Sender: 0x5730472539eaabd978d61b2b00c7573fd45eaad67eb4826f57a0ae296b9ac266 \u2502 \u2502 Gas Owner: 0x5730472539eaabd978d61b2b00c7573fd45eaad67eb4826f57a0ae296b9ac266 \u2502 \u2502 Gas Budget: 200000000 NANOS \u2502 \u2502 Gas Price: 1000 NANOS \u2502 \u2502 Gas Payment: \u2502 \u2502 \u250c\u2500\u2500 \u2502 \u2502 \u2502 ID: 0x97d41bca15873c30e15881bbdc856fd442f23c0443c84cf7d29bf6b46a3cee63 \u2502 \u2502 \u2502 Version: 2240655 \u2502 \u2502 \u2502 Digest: GTmkY4BQrRiNEWtAnAHoEV9AZCdiksk9hYggA5cCE2Md \u2502 \u2502 \u2514\u2500\u2500 \u2502 \u2502 \u2502 \u2502 Transaction Kind: Programmable \u2502 \u2502 \u256d\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e \u2502 \u2502 \u2502 Input Objects \u2502 \u2502 \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502 \u2502 \u2502 0 Shared Object ID: 0x0000000000000000000000000000000000000000000000000000000000000005 \u2502 \u2502 \u2502 \u2502 1 Pure Arg: Type: vector<u8>, Value: \"https://github.com/cosmostation/chainlist/blob/main/resource/cosmostation/cosmostation_color.svg\" \u2502 \u2502 \u2502 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f \u2502 \u2502 \u256d\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e \u2502 \u2502 \u2502 Commands \u2502 \u2502 \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502 \u2502 \u2502 0 MoveCall: \u2502 \u2502 \u2502 \u2502 \u250c \u2502 \u2502 \u2502 \u2502 \u2502 Function: update_validator_image_url \u2502 \u2502 \u2502 \u2502 \u2502 Module: iota_system \u2502 \u2502 \u2502 \u2502 \u2502 Package: 0x0000000000000000000000000000000000000000000000000000000000000003 \u2502 \u2502 \u2502 \u2502 \u2502 Arguments: \u2502 \u2502 \u2502 \u2502 \u2502 Input 0 \u2502 \u2502 \u2502 \u2502 \u2502 Input 1 \u2502 \u2502 \u2502 \u2502 \u2514 \u2502 \u2502 \u2502 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f \u2502 \u2502 \u2502 \u2502 Signatures: \u2502 \u2502 V9XOAho2vHRsAY4X+GuZskLyIrvpLOqe4rGGidUpZsEFtROHONsxz55vV+WFp+dBE/yQek9e3z4z+qSggYw4Cg== \u2502 \u2502 \u2502 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f ----- Transaction Effects ---- \u256d\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e \u2502 Transaction Effects \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502 Digest: EwciTJA81SvQdppFbq85dSMBemZhUbsMxYBxSMwre8d5 \u2502 \u2502 Status: Success \u2502 \u2502 Executed Epoch: 21 \u2502 \u2502 Mutated Objects: \u2502 \u2502 \u250c\u2500\u2500 \u2502 \u2502 \u2502 ID: 0x0000000000000000000000000000000000000000000000000000000000000005 \u2502 \u2502 \u2502 Owner: Shared( 1 ) \u2502 \u2502 \u2502 Version: 2958855 \u2502 \u2502 \u2502 Digest: Cd1q81BdUTop5xqz964XHbnLnG93NRub4WWDJZmJ2eHg \u2502 \u2502 \u2514\u2500\u2500 \u2502 \u2502 \u250c\u2500\u2500 \u2502 \u2502 \u2502 ID: 0x6af2a2b7ca60bf76174adfd3e9c4957f8e937759603182f9b46c7f6c5f19c6d2 \u2502 \u2502 \u2502 Owner: Object ID: ( 0x0000000000000000000000000000000000000000000000000000000000000005 ) \u2502 \u2502 \u2502 Version: 2958855 \u2502 \u2502 \u2502 Digest: F2vXi3txCqeq5mk7Ww3GEPVj7TDbRJhitHT9WPKAXE9n \u2502 \u2502 \u2514\u2500\u2500 \u2502 \u2502 \u250c\u2500\u2500 \u2502 \u2502 \u2502 ID: 0x97d41bca15873c30e15881bbdc856fd442f23c0443c84cf7d29bf6b46a3cee63 \u2502 \u2502 \u2502 Owner: Account Address ( 0x5730472539eaabd978d61b2b00c7573fd45eaad67eb4826f57a0ae296b9ac266 ) \u2502 \u2502 \u2502 Version: 2958855 \u2502 \u2502 \u2502 Digest: 8jkSWwHByXtQCS3UmHAEheinjC4E2ftrbFSBxn3nTC45 \u2502 \u2502 \u2514\u2500\u2500 \u2502 \u2502 Shared Objects: \u2502 \u2502 \u250c\u2500\u2500 \u2502 \u2502 \u2502 ID: 0x0000000000000000000000000000000000000000000000000000000000000005 \u2502 \u2502 \u2502 Version: 2958854 \u2502 \u2502 \u2502 Digest: FZt5YsKGH9SfufbJwtYWRgQ3w4HZ6wqBRo6TRAhrycTc \u2502 \u2502 \u2514\u2500\u2500 \u2502 \u2502 Gas Object: \u2502 \u2502 \u250c\u2500\u2500 \u2502 \u2502 \u2502 ID: 0x97d41bca15873c30e15881bbdc856fd442f23c0443c84cf7d29bf6b46a3cee63 \u2502 \u2502 \u2502 Owner: Account Address ( 0x5730472539eaabd978d61b2b00c7573fd45eaad67eb4826f57a0ae296b9ac266 ) \u2502 \u2502 \u2502 Version: 2958855 \u2502 \u2502 \u2502 Digest: 8jkSWwHByXtQCS3UmHAEheinjC4E2ftrbFSBxn3nTC45 \u2502 \u2502 \u2514\u2500\u2500 \u2502 \u2502 Gas Cost Summary: \u2502 \u2502 Storage Cost: 149446400 NANOS \u2502 \u2502 Computation Cost: 1000000 NANOS \u2502 \u2502 Storage Rebate: 149514800 NANOS \u2502 \u2502 Non-refundable Storage Fee: 0 NANOS \u2502 \u2502 \u2502 \u2502 Transaction Dependencies: \u2502 \u2502 63X49x2QuuYNduExZWoJjfXut3s3WDWZ7Tr7nXJu32ZT \u2502 \u2502 FuSaSwGs2b8jLGjzMqbJH8coSEVs7HFHmY9jZbW8Qf2w \u2502 \u2502 GMrcZdt5RvepbWszj9hF4WKzTXjeHMskinJH5yzPLnwz \u2502 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f","title":"Image update"},{"location":"chains/iota/testnet/onboarding_process/","text":"docs https://docs.iota.org/operator/iota-full-node Onboarding Process Make User(iota) Rust Update https://doc.rust-lang.org/book/ch01-01-installation.html#updating-and-uninstalling curl --proto '=https' --tlsv1.2 https://sh.rustup.rs -sSf | sh 1) Proceed with standard installation 1 enter log check -> Rust is installed now. Great! rustup update stable install Linux dependecies sudo apt-get update \\ && sudo apt-get install -y --no-install-recommends \\ tzdata \\ libprotobuf-dev \\ ca-certificates \\ build-essential \\ libssl-dev \\ libclang-dev \\ libpq-dev \\ pkg-config \\ openssl \\ protobuf-compiler \\ git \\ clang \\ cmake cargo install sudo apt install cargo sudo apt install rustup set infra-organizer https://github.com/cosmostation/infra-organizer.git gitclone iota binary https://github.com/iotaledger/iota.git set $NODE_HOME .profile export NODE_HOME=/data/node/.iota make $NODE_HOME, $HOME/bin install binary & iota-tool \\ \u2757\ufe0fiota-node -> node, iota -> validator-tool, iota-tool -> snapshot download scripts/iota-build.sh #!/usr/bin/env bash #VER=testnet-v0.7.3-rc SHA=34da09d2684e7e3356bc457b5e412405357f9972 export CARGO_PROFILE_RELEASE_LTO=true #env | grep CARGO_PROFILE_RELEASE_LTO cd ~/iota && cargo clean && git fetch --tags && git checkout $SHA && RUSTFLAGS=\"-C target-cpu=native\" cargo build --release --bin iota-node && mv ${HOME}/iota/target/release/iota-node ~/bin/iota-node-${SHA} ln -sf ~/bin/iota-node-${SHA} ~/bin/iota-node cd $HOME/iota cargo build --release --bin iota-tool + check-sync.sh curl 127.0.0.1:9184/metrics 2>/dev/null | grep -E \"^last_executed_checkpoint|^highest_synced_checkpoint|^last_committed_round|^current_round|^highest_received_round|^certificates_created|^uptime\" download genesis & snapshot data cd $NODE_HOME/config curl -fLJO https://dbfiles.testnet.iota.cafe/genesis.blob cd $NODE_HOME iota-tool download-db-snapshot --latest --path /data/node/.iota --network testnet --num-parallel-downloads 25 --no-sign-request Edit fullnode.yaml cd $NODE_HOME/config vi fullnode.yaml https://raw.githubusercontent.com/iotaledger/iota/refs/heads/develop/crates/iota-config/data/fullnode-template.yaml make service cd /etc/systemd/system sudo vi iota-node.service [Unit] Description=Iota Node [Service] User=iota WorkingDirectory=/home/iota/infra-organizer/cmd Environment=RUST_BACKTRACE=1 Environment=RUST_LOG=info,iota_core=info,narwhal=info,narwhal-primary::helper=info,jsonrpsee=error ExecStart=/home/iota/bin/iota-node --config-path /data/node/.iota/config/fullnode.yaml Restart=always RestartSec=10 PermissionsStartOnly=true ExecStartPre=/bin/mkdir -p /var/log/iota-node ExecStartPre=/bin/chown syslog:adm /var/log/iota-node ExecStartPre=/bin/chmod 755 /var/log/iota-node StandardOutput=syslog StandardError=syslog SyslogIdentifier=iota-node [Install] WantedBy=multi-user.target make iota-node.sh cd $HOME/infra-organizer/cmd/iota-node.sh #!/usr/bin/env bash NOK=1 SERVICE=iota-node function help() { echo \"./${SERVICE}.sh start / stop / restart / reload / status / log\" } if [ ! $# -eq 1 ]; then help exit ${NOK} fi CMD=$1 case ${CMD} in \"start\") sudo systemctl ${CMD} ${SERVICE} && sudo journalctl -u ${SERVICE} -f ;; \"stop\") sudo systemctl ${CMD} ${SERVICE} ;; \"restart\"|\"reload\"|\"status\"|\"enable\"|\"disable\") sudo systemctl ${CMD} ${SERVICE} ;; \"log\") sudo journalctl -u ${SERVICE} -f ;; *) echo \"not proper command : ${CMD}\" help ;; esac allow ufw 80 ALLOW Anywhere 443 ALLOW Anywhere 8080 ALLOW Anywhere # iota-node protocol/transaction interface 8081 ALLOW Anywhere # iota-node primary interface 8084 ALLOW Anywhere # iota-node p2p 80 (v6) ALLOW Anywhere (v6) 443 (v6) ALLOW Anywhere (v6) 8080 (v6) ALLOW Anywhere (v6) # iota-node protocol/transaction interface 8081 (v6) ALLOW Anywhere (v6) # iota-node primary interface 8084 (v6) ALLOW Anywhere (v6) # iota-node p2p set logrotate start iota-node","title":"Onboarding process"},{"location":"chains/iota/testnet/validator/","text":"Docs \\ https://docs.iota.org/operator/validator-operation/systemd/ \\ https://docs.iota.org/operator/validator-tools \\ https://docs.iota.org/references/cli/client validator.yaml https://docs.iota.org/assets/files/validator-f8117cabc760058cd9c133360cfa455f.yaml Make validator.info and Generate Validator Keys \\ https://github.com/junwei0117/iota-node-docker?tab=readme-ov-file#8-request-delegation-from-iota-foundation iota client new-env iota client new-env --alias=Cosmostation --rpc https://api.testnet.iota.cafe:443 Config file [\"/home/iota/.iota/iota_config/client.yaml\"] doesn't exist, do you want to connect to a Iota Full node server [y/N]?y Iota Full node server URL (Defaults to Iota Testnet if not specified) : Select key scheme to generate keypair (0 for ed25519, 1 for secp256k1, 2: for secp256r1): 0 Keys saved as Bech32. Generated new keypair and alias for address with scheme \"ed25519\" [practical-garnet: 0x5730472539eaabd978d61b2b00c7573fd45eaad67eb4826f57a0ae296b9ac266] Secret Recovery Phrase : [weird task great venue zone foot miss world rule ecology outdoor juice] Added new Iota env [Cosmostation] to config. -> $HOME/.iota/iota_config/ - client.yaml - iota.aliases - iota.keystore * client.yaml keystore: File: /home/iota/.iota/iota_config/iota.keystore envs: - alias: testnet rpc: \"https://api.testnet.iota.cafe\" ws: ~ basic_auth: ~ - alias: Cosmostation rpc: \"https://api.testnet.iota.cafe:443\" ws: ~ basic_auth: ~ active_env: testnet active_address: \"0x5730472539eaabd978d61b2b00c7573fd45eaad67eb4826f57a0ae296b9ac266\" * iota.aliases [ { \"alias\": \"practical-garnet\", \"public_key_base64\": \"ACP7Zuum5j6ApsdeOCUjB0YlUw6QSixqx6ffOg5aaQdT\" } ] * iota.keystore [ \"iotaprivkey1qz3wxhxnmw6cszjzgwu2du4nvwvl6ut9c29g5wy7mf6nnlat7vx2zr8l7lk\" ] iota client switch --env testnet Active environment switched to [testnet] iota client active-address 0x5730472539eaabd978d61b2b00c7573fd45eaad67eb4826f57a0ae296b9ac266 iota client faucet Request successful. It can take up to 1 minute to get the coin. Run iota client gas to check your gas coins. iota client objects 0x5730472539eaabd978d61b2b00c7573fd45eaad67eb4826f57a0ae296b9ac266 objectId 0x97d41bca15873c30e15881bbdc856fd442f23c0443c84cf7d29bf6b46a3cee63 version 470527 digest idrRC6LWJydHZYvDmjeZUcy0V74AgfcZCwPaWKicVmA= objectType 0x0000..0002::coin::Coin iota validator display-metadata 0x5730472539eaabd978d61b2b00c7573fd45eaad67eb4826f57a0ae296b9ac266 is not an active or pending Validator route53 record \uc0dd\uc131 iota validator make-validator-info iota validator make-validator-info \"Cosmostation\" \"Cosmostation is an institutional-grade cryptocurrency infrastructure provider, managing billions of dollars across 70 protocols. Since 2018, we have served more than 500k users globally, providing products that enable protocols to scale\" \"https://github.com/cosmostation/chainlist/blob/main/resource/cosmostation/cosmostation_color(128x128).png\" \"https://www.cosmostation.io\" \"iota-testnet-validator.cosmostation.io\" 1000 --json Generated new key file: \"/home/iota/authority.key\". Generated new key file \"/home/iota/account.key\" based on iota.keystore file. Generated new key file: \"/home/iota/network.key\". Generated new key file: \"/home/iota/protocol.key\". Generated validator info file: \"/home/iota/validator.info\". --- info: name: Cosmostation account-address: \"0x5730472539eaabd978d61b2b00c7573fd45eaad67eb4826f57a0ae296b9ac266\" authority-key: tvpYOm3S/i9I1NZqCsfBXlCS/AhX53ven1VgBjzzlN6m6pZhbTmn/5iGQsrrKjt6EpUvWmJQyN93GbSSV+rbTans0c9sauSf5ZUWCuZbKkn6hZ0jFPbdhank3lgUETiv protocol-key: xkhFtdFtv3StENOQQdmaMgwVLmpfzeTAOmbTbYiyiAc= network-key: KrocBqXrm9ElyOpyn65wQHeKYFCY2L1RIAwQFJHeaeg= gas-price: 1000 commission-rate: 200 network-address: /dns/iota-testnet-validator.cosmostation.io/tcp/8080/http p2p-address: /dns/iota-testnet-validator.cosmostation.io/udp/8084 primary-address: /dns/iota-testnet-validator.cosmostation.io/udp/8081 description: \"Cosmostation is an institutional-grade cryptocurrency infrastructure provider, managing billions of dollars across 70 protocols. Since 2018, we have served more than 500k users globally, providing products that enable protocols to scale\" image-url: \"https://github.com/cosmostation/chainlist/blob/main/resource/cosmostation/cosmostation_color(128x128).png\" project-url: \"https://www.cosmostation.io\" proof_of_possession: kMTAhNc+RwRdVzfDdHmp+Js/Z7PjZNLlKFlMcE42+DbfwRi2oKVH6HrztNzf2Vn5 key-pairs \uc900\ube44 $NODE_HOME/key-pairs \uc0dd\uc131 $HOME/.iota/iota_config/client.yaml -> $NODE_HOME/config\ub85c \ubcf5\uc0ac $HOME/.iota/iota_config/iota.aliases, iota.keystore -> $NODE_HOME/key-pairs\ub85c \ubcf5\uc0ac $HOME/authority.key, account.key, network.key, protocol.key, validator.info -> $NODE_HOME/key-pairs\ub85c \ubcf5\uc0ac validator.yaml \uc900\ube44 https://docs.iota.org/assets/files/validator-f8117cabc760058cd9c133360cfa455f.yaml authority-key-pair: path: /data/node/.iota/key-pairs/authority.key protocol-key-pair: path: /data/node/.iota/key-pairs/protocol.key network-key-pair: path: /data/node/.iota/key-pairs/network.key account-key-pair: path: /data/node/.iota/key-pairs/account.key db-path: /data/node/.iota/db/authorities_db network-address: /ip4/0.0.0.0/tcp/8080/http json-rpc-address: 0.0.0.0:9000 metrics-address: 0.0.0.0:9184 admin-interface-port: 1337 consensus-config: db-path: /data/node/.iota/db/consensus_db internal-worker-address: null enable-event-processing: false p2p-config: listen-address: 0.0.0.0:8084 external-address: /dns/iota-testnet-validator.cosmostation.io/udp/8084 # UPDATE THIS anemo-config: max-concurrent-connections: 0 genesis: genesis-file-location: /data/node/.iota/config/genesis.blob authority-store-pruning-config: num-latest-epoch-dbs-to-retain: 3 epoch-db-pruning-period-secs: 3600 num-epochs-to-retain: 1 max-checkpoints-in-batch: 5 max-transactions-in-batch: 1000 end-of-epoch-broadcast-channel-capacity: 128 checkpoint-executor-config: checkpoint-execution-max-concurrency: 200 local-execution-timeout-sec: 10 db-checkpoint-config: perform-db-checkpoints-at-epoch-end: false indirect-objects-threshold: 18446744073709551615 metrics: push-interval-seconds: 60 push-url: https://metrics-proxy.testnet.iota.io:8443/publish/metrics # push-url: https://metrics-proxy.mainnet.iota.io:8443/publish/metrics iota-node.service path \uc218\uc815 [Unit] Description=Iota Node [Service] User=iota WorkingDirectory=/home/iota/infra-organizer/cmd Environment=RUST_BACKTRACE=1 Environment=RUST_LOG=info,iota_core=info,narwhal=info,narwhal-primary::helper=info,jsonrpsee=error ExecStart=/home/iota/bin/iota-node --config-path /data/node/.iota/config/validator.yaml #ExecStart=/home/iota/bin/iota-node --config-path /data/node/.iota/config/fullnode.yaml Restart=always RestartSec=10 PermissionsStartOnly=true ExecStartPre=/bin/mkdir -p /var/log/iota-node ExecStartPre=/bin/chown syslog:adm /var/log/iota-node ExecStartPre=/bin/chmod 755 /var/log/iota-node StandardOutput=syslog StandardError=syslog SyslogIdentifier=iota-node [Install] WantedBy=multi-user.target \uc7ac\ub2e8\uc5d0 delegate \uc694\uccad 0x5730472539eaabd978d61b2b00c7573fd45eaad67eb4826f57a0ae296b9ac266 \ub3d9\uae30\ud654 \uccb4\ud06c \u2757\ufe0f\uc7ac\ub2e8\uc73c\ub85c\ubd80\ud130 delegate \ubc1b\uc740 \ud6c4 \uc544\ub798 \ucee4\ub9e8\ub4dc \uc2e4\ud589 * validator.yaml\ub85c \uc804\ud658\ud558\ub294 \uc2dc\uc810 \ud480\ub178\ub4dc\uac00 \ub124\ud2b8\uc6cc\ud06c\uc640 \uc644\uc804\ud788 \ub3d9\uae30\ud654\ub41c \ud6c4, validator.yaml\ub85c \uc804\ud658\ud558\uace0 \ub178\ub4dc\ub97c \uc7ac\uc2dc\uc791\ud574\uc57c \ud569\ub2c8\ub2e4. \uc774\ud6c4 join-committee \uba85\ub839\uc744 \uc2e4\ud589\ud558\uc5ec \ubc38\ub9ac\ub370\uc774\ud130 \ud6c4\ubcf4\uc790\uac00 \ub429\ub2c8\ub2e4. iota validator become-candidate /data/node/.iota/key-pairs/validator.info ----- Transaction Digest ---- G4zxdkJwsUwQZ6zEj3SL1U2EzTmTmftcpRazCVpeJHSa ----- Transaction Data ---- \u256d\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e \u2502 Transaction Data \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502 Sender: 0x5730472539eaabd978d61b2b00c7573fd45eaad67eb4826f57a0ae296b9ac266 \u2502 \u2502 Gas Owner: 0x5730472539eaabd978d61b2b00c7573fd45eaad67eb4826f57a0ae296b9ac266 \u2502 \u2502 Gas Budget: 200000000 NANOS \u2502 \u2502 Gas Price: 1000 NANOS \u2502 \u2502 Gas Payment: \u2502 \u2502 \u250c\u2500\u2500 \u2502 \u2502 \u2502 ID: 0x97d41bca15873c30e15881bbdc856fd442f23c0443c84cf7d29bf6b46a3cee63 \u2502 \u2502 \u2502 Version: 470527 \u2502 \u2502 \u2502 Digest: AH8NsXeDiSeGtBrDQRCi5MdKj73HnxKQiHPoxMvSFM1q \u2502 \u2502 \u2514\u2500\u2500 \u2502 \u2502 \u2502 \u2502 Transaction Kind: Programmable \u2502 \u2502 \u256d\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e \u2502 \u2502 \u2502 Input Objects \u2502 \u2502 \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502 \u2502 \u2502 0 Shared Object ID: 0x0000000000000000000000000000000000000000000000000000000000000005 \u2502 \u2502 \u2502 \u2502 1 Pure Arg: Type: vector<u8>, Value: [182,250,88,58,109,210,254,47,72,212,214,106,10,199,193,94,80,146,252,8,87,231,123,222,159,85,96,6,60,243,148,222,166,234,150,97,109,57,167,255,152,134,66,202,235,42,59,122,18,149,47,90,98,80,200,223,119,25,180,146,87,234,219,77,169,236,209,207,108,106,228,159,229,149,22,10,230,91,42,73,250,133,157,35,20,246,221,133,169,228,222,88,20,17,56,175] \u2502 \u2502 \u2502 \u2502 2 Pure Arg: Type: vector<u8>, Value: [42,186,28,6,165,235,155,209,37,200,234,114,159,174,112,64,119,138,96,80,152,216,189,81,32,12,16,20,145,222,105,232] \u2502 \u2502 \u2502 \u2502 3 Pure Arg: Type: vector<u8>, Value: [198,72,69,181,209,109,191,116,173,16,211,144,65,217,154,50,12,21,46,106,95,205,228,192,58,102,211,109,136,178,136,7] \u2502 \u2502 \u2502 \u2502 4 Pure Arg: Type: vector<u8>, Value: [144,196,192,132,215,62,71,4,93,87,55,195,116,121,169,248,155,63,103,179,227,100,210,229,40,89,76,112,78,54,248,54,223,193,24,182,160,165,71,232,122,243,180,220,223,217,89,249] \u2502 \u2502 \u2502 \u2502 5 Pure Arg: Type: vector<u8>, Value: \"Cosmostation\" \u2502 \u2502 \u2502 \u2502 6 Pure Arg: Type: vector<u8>, Value: \"Cosmostation is an institutional-grade cryptocurrency infrastructure provider, managing billions of dollars across 70 protocols. Since 2018, we have served more than 500k users globally, providing products that enable protocols to scale\" \u2502 \u2502 \u2502 \u2502 7 Pure Arg: Type: vector<u8>, Value: \"https://github.com/cosmostation/chainlist/blob/main/resource/cosmostation/cosmostation_color(128x128).png\" \u2502 \u2502 \u2502 \u2502 8 Pure Arg: Type: vector<u8>, Value: \"https://www.cosmostation.io\" \u2502 \u2502 \u2502 \u2502 9 Pure Arg: Type: vector<u8>, Value: \"/dns/iota-testnet-validator.cosmostation.io/tcp/8080/http\" \u2502 \u2502 \u2502 \u2502 10 Pure Arg: Type: vector<u8>, Value: \"/dns/iota-testnet-validator.cosmostation.io/udp/8084\" \u2502 \u2502 \u2502 \u2502 11 Pure Arg: Type: vector<u8>, Value: \"/dns/iota-testnet-validator.cosmostation.io/udp/8081\" \u2502 \u2502 \u2502 \u2502 12 Pure Arg: Type: u64, Value: \"1000\" \u2502 \u2502 \u2502 \u2502 13 Pure Arg: Type: u64, Value: \"200\" \u2502 \u2502 \u2502 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f \u2502 \u2502 \u256d\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e \u2502 \u2502 \u2502 Commands \u2502 \u2502 \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502 \u2502 \u2502 0 MoveCall: \u2502 \u2502 \u2502 \u2502 \u250c \u2502 \u2502 \u2502 \u2502 \u2502 Function: request_add_validator_candidate \u2502 \u2502 \u2502 \u2502 \u2502 Module: iota_system \u2502 \u2502 \u2502 \u2502 \u2502 Package: 0x0000000000000000000000000000000000000000000000000000000000000003 \u2502 \u2502 \u2502 \u2502 \u2502 Arguments: \u2502 \u2502 \u2502 \u2502 \u2502 Input 0 \u2502 \u2502 \u2502 \u2502 \u2502 Input 1 \u2502 \u2502 \u2502 \u2502 \u2502 Input 2 \u2502 \u2502 \u2502 \u2502 \u2502 Input 3 \u2502 \u2502 \u2502 \u2502 \u2502 Input 4 \u2502 \u2502 \u2502 \u2502 \u2502 Input 5 \u2502 \u2502 \u2502 \u2502 \u2502 Input 6 \u2502 \u2502 \u2502 \u2502 \u2502 Input 7 \u2502 \u2502 \u2502 \u2502 \u2502 Input 8 \u2502 \u2502 \u2502 \u2502 \u2502 Input 9 \u2502 \u2502 \u2502 \u2502 \u2502 Input 10 \u2502 \u2502 \u2502 \u2502 \u2502 Input 11 \u2502 \u2502 \u2502 \u2502 \u2502 Input 12 \u2502 \u2502 \u2502 \u2502 \u2502 Input 13 \u2502 \u2502 \u2502 \u2502 \u2514 \u2502 \u2502 \u2502 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f \u2502 \u2502 \u2502 \u2502 Signatures: \u2502 \u2502 TuSHmU8vbDY7wX6WO14Ee1DiVDHro7E7txZlR/TcN2rTiWCViQOm2pW6dqu4awp1iSLeUEn/fGi975Xda5diAA== \u2502 \u2502 \u2502 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f ----- Transaction Effects ---- \u256d\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e \u2502 Transaction Effects \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502 Digest: G4zxdkJwsUwQZ6zEj3SL1U2EzTmTmftcpRazCVpeJHSa \u2502 \u2502 Status: Success \u2502 \u2502 Executed Epoch: 17 \u2502 \u2502 \u2502 \u2502 Created Objects: \u2502 \u2502 \u250c\u2500\u2500 \u2502 \u2502 \u2502 ID: 0x02c47f3e459d8d25074669228d76eadb8685c1f43902690c2b820ef8f1bb3a14 \u2502 \u2502 \u2502 Owner: Object ID: ( 0x5ef2f5c5201d63d8bccd61c426c732e76aeef4fa816b5b865aa0f23778e00d82 ) \u2502 \u2502 \u2502 Version: 2240603 \u2502 \u2502 \u2502 Digest: 22dh15QgTCvXzAeefu8gUrM65St4mpd3qm9XFXpi4akh \u2502 \u2502 \u2514\u2500\u2500 \u2502 \u2502 \u250c\u2500\u2500 \u2502 \u2502 \u2502 ID: 0x0409eeea7c17ff00758ffe708e97cb835a26119d30ab37c80b70c7fb0453d484 \u2502 \u2502 \u2502 Owner: Object ID: ( 0x3a2fb37ed4bc4e86a6f159b6f5aad03293ddb883679957ab721e577f19a9ab68 ) \u2502 \u2502 \u2502 Version: 2240603 \u2502 \u2502 \u2502 Digest: 7kAvoCcAHjmj1dDbnTzse7xt3R1tA5NDuKYtFyGiciSo \u2502 \u2502 \u2514\u2500\u2500 \u2502 \u2502 \u250c\u2500\u2500 \u2502 \u2502 \u2502 ID: 0x312b6174a41d7b44d0aca5e357acdf069bf3758fa847d25517d622bd553beebb \u2502 \u2502 \u2502 Owner: Object ID: ( 0xee3ec97e8fa2fba32ac37f3531bc915b15ee9d1abd76ac9b92d60d44089bc20a ) \u2502 \u2502 \u2502 Version: 2240603 \u2502 \u2502 \u2502 Digest: Bs3noJgzMW3FLXs7ZEyJKfjSQHGgeS3U8Df6WJRC5SHP \u2502 \u2502 \u2514\u2500\u2500 \u2502 \u2502 \u250c\u2500\u2500 \u2502 \u2502 \u2502 ID: 0x562bdcea28aff455042fb7120c5e2f864590e8a1002f01bad2bed90b37421be9 \u2502 \u2502 \u2502 Owner: Account Address ( 0x5730472539eaabd978d61b2b00c7573fd45eaad67eb4826f57a0ae296b9ac266 ) \u2502 \u2502 \u2502 Version: 2240603 \u2502 \u2502 \u2502 Digest: GkvS46KhiHkkJFHcfFv7VQ7bXyFD7JcwgF1qk3Swm5sS \u2502 \u2502 \u2514\u2500\u2500 \u2502 \u2502 Mutated Objects: \u2502 \u2502 \u250c\u2500\u2500 \u2502 \u2502 \u2502 ID: 0x0000000000000000000000000000000000000000000000000000000000000005 \u2502 \u2502 \u2502 Owner: Shared( 1 ) \u2502 \u2502 \u2502 Version: 2240603 \u2502 \u2502 \u2502 Digest: 4mZdhs1vVBV5zFUFSeMBKVJxvrzj9XWchxWa7o85UwwY \u2502 \u2502 \u2514\u2500\u2500 \u2502 \u2502 \u250c\u2500\u2500 \u2502 \u2502 \u2502 ID: 0x6af2a2b7ca60bf76174adfd3e9c4957f8e937759603182f9b46c7f6c5f19c6d2 \u2502 \u2502 \u2502 Owner: Object ID: ( 0x0000000000000000000000000000000000000000000000000000000000000005 ) \u2502 \u2502 \u2502 Version: 2240603 \u2502 \u2502 \u2502 Digest: 9aBc3pXwinhw3Efb8SKXJqnDvoxmTRVMZvrtPLmD1DpV \u2502 \u2502 \u2514\u2500\u2500 \u2502 \u2502 \u250c\u2500\u2500 \u2502 \u2502 \u2502 ID: 0x97d41bca15873c30e15881bbdc856fd442f23c0443c84cf7d29bf6b46a3cee63 \u2502 \u2502 \u2502 Owner: Account Address ( 0x5730472539eaabd978d61b2b00c7573fd45eaad67eb4826f57a0ae296b9ac266 ) \u2502 \u2502 \u2502 Version: 2240603 \u2502 \u2502 \u2502 Digest: 8muebTS5FPynjFwW97Dn5NaQeUaCKQMnMkkdaBvo7jfJ \u2502 \u2502 \u2514\u2500\u2500 \u2502 \u2502 Shared Objects: \u2502 \u2502 \u250c\u2500\u2500 \u2502 \u2502 \u2502 ID: 0x0000000000000000000000000000000000000000000000000000000000000005 \u2502 \u2502 \u2502 Version: 2240602 \u2502 \u2502 \u2502 Digest: 3tJMsXB7VR3kGahfQTayCZ3y9pEu3H9wL6VUUPw7yJm5 \u2502 \u2502 \u2514\u2500\u2500 \u2502 \u2502 Gas Object: \u2502 \u2502 \u250c\u2500\u2500 \u2502 \u2502 \u2502 ID: 0x97d41bca15873c30e15881bbdc856fd442f23c0443c84cf7d29bf6b46a3cee63 \u2502 \u2502 \u2502 Owner: Account Address ( 0x5730472539eaabd978d61b2b00c7573fd45eaad67eb4826f57a0ae296b9ac266 ) \u2502 \u2502 \u2502 Version: 2240603 \u2502 \u2502 \u2502 Digest: 8muebTS5FPynjFwW97Dn5NaQeUaCKQMnMkkdaBvo7jfJ \u2502 \u2502 \u2514\u2500\u2500 \u2502 \u2502 Gas Cost Summary: \u2502 \u2502 Storage Cost: 136268000 NANOS \u2502 \u2502 Computation Cost: 1000000 NANOS \u2502 \u2502 Storage Rebate: 119662000 NANOS \u2502 \u2502 Non-refundable Storage Fee: 0 NANOS \u2502 \u2502 \u2502 \u2502 Transaction Dependencies: \u2502 \u2502 FudGyutMsJySU43XizhJiwwnYFb8AYyr2GszcMPsyoR \u2502 \u2502 63X49x2QuuYNduExZWoJjfXut3s3WDWZ7Tr7nXJu32ZT \u2502 \u2502 6wTsAGX5bZGGHKPU7USiEz9aofDegN7nHYqjSvCGkAhD \u2502 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f \u2757\ufe0fiota validator join-committee iota validator display-metadata iota validator display-metadata 0x5730472539eaabd978d61b2b00c7573fd45eaad67eb4826f57a0ae296b9ac266's validator status: Pending IotaValidatorSummary { iota_address: 0x5730472539eaabd978d61b2b00c7573fd45eaad67eb4826f57a0ae296b9ac266, authority_pubkey_bytes: [ 182, 250, 88, 58, 109, 210, 254, 47, 72, 212, 214, 106, 10, 199, 193, 94, 80, 146, 252, 8, 87, 231, 123, 222, 159, 85, 96, 6, 60, 243, 148, 222, 166, 234, 150, 97, 109, 57, 167, 255, 152, 134, 66, 202, 235, 42, 59, 122, 18, 149, 47, 90, 98, 80, 200, 223, 119, 25, 180, 146, 87, 234, 219, 77, 169, 236, 209, 207, 108, 106, 228, 159, 229, 149, 22, 10, 230, 91, 42, 73, 250, 133, 157, 35, 20, 246, 221, 133, 169, 228, 222, 88, 20, 17, 56, 175, ], network_pubkey_bytes: [ 42, 186, 28, 6, 165, 235, 155, 209, 37, 200, 234, 114, 159, 174, 112, 64, 119, 138, 96, 80, 152, 216, 189, 81, 32, 12, 16, 20, 145, 222, 105, 232, ], protocol_pubkey_bytes: [ 198, 72, 69, 181, 209, 109, 191, 116, 173, 16, 211, 144, 65, 217, 154, 50, 12, 21, 46, 106, 95, 205, 228, 192, 58, 102, 211, 109, 136, 178, 136, 7, ], proof_of_possession_bytes: [ 144, 196, 192, 132, 215, 62, 71, 4, 93, 87, 55, 195, 116, 121, 169, 248, 155, 63, 103, 179, 227, 100, 210, 229, 40, 89, 76, 112, 78, 54, 248, 54, 223, 193, 24, 182, 160, 165, 71, 232, 122, 243, 180, 220, 223, 217, 89, 249, ], name: \"Cosmostation\", description: \"Cosmostation is an institutional-grade cryptocurrency infrastructure provider, managing billions of dollars across 70 protocols. Since 2018, we have served more than 500k users globally, providing products that enable protocols to scale\", image_url: \"https://github.com/cosmostation/chainlist/blob/main/resource/cosmostation/cosmostation_color(128x128).png\", project_url: \"https://www.cosmostation.io\", net_address: \"/dns/iota-testnet-validator.cosmostation.io/tcp/8080/http\", p2p_address: \"/dns/iota-testnet-validator.cosmostation.io/udp/8084\", primary_address: \"/dns/iota-testnet-validator.cosmostation.io/udp/8081\", next_epoch_authority_pubkey_bytes: None, next_epoch_proof_of_possession: None, next_epoch_network_pubkey_bytes: None, next_epoch_protocol_pubkey_bytes: None, next_epoch_net_address: None, next_epoch_p2p_address: None, next_epoch_primary_address: None, voting_power: 0, operation_cap_id: 0x562bdcea28aff455042fb7120c5e2f864590e8a1002f01bad2bed90b37421be9, gas_price: 1000, commission_rate: 200, next_epoch_stake: 2000000000000000, next_epoch_gas_price: 1000, next_epoch_commission_rate: 200, staking_pool_id: 0x2618122f93bb5993d831e16dfbcd4af8e7af3bc6cf40dfc9ae87854d071a7cdd, staking_pool_activation_epoch: None, staking_pool_deactivation_epoch: None, staking_pool_iota_balance: 2000000000000000, rewards_pool: 0, pool_token_balance: 2000000000000000, pending_stake: 0, pending_total_iota_withdraw: 0, pending_pool_token_withdraw: 0, exchange_rates_id: 0x4c83cbeb19a345e5834c17add5bf4bf235bbf69a1944ae35b902c2904a318fc0, exchange_rates_size: 0, } Network Buffer # Create a new sysctl file for the iota-node sudo nano /etc/sysctl.d/100-iota-node.conf # Add these lines to the file, overwriting existing settings if necessary. net.core.rmem_max = 104857600 net.core.wmem_max = 104857600 net.ipv4.tcp_rmem = 8192 262144 104857600 net.ipv4.tcp_wmem = 8192 262144 104857600 # Apply the settings immediately, before the next restart sudo sysctl --system # Verification sudo sysctl -a | egrep [rw]mem validator check iota validator display-metadata\" | grep status 0x5730472539eaabd978d61b2b00c7573fd45eaad67eb4826f57a0ae296b9ac266's validator status: Active /scripts/check-sync-validator.sh curl 127.0.0.1:9184/metrics 2>/dev/null | grep -E \"^last_executed_checkpoint|^highest_synced_checkpoint|^consensus_last_committed_leader_round|^current_round|^highest_received_round|^consensus_proposed_blocks|^uptime\" \"consensus_last_committed_leader_round\" epoch \ub118\uc5b4\uac00\uace0 log check Dec 06 19:16:02 genuine-goose iota-node[368637]: 2024-12-06T19:16:02.550651Z INFO execution_driver{tx_digest=TransactionDigest(9CXV2Vj6yAXae3EKUXNnycSTMN4oLbA6wonMdBsNBSDw)}: iota_adapter_latest::execution_engine::checked: Call arguments to advance_epoch transaction: AdvanceEpochParams { epoch: 19, next_protocol_version: ProtocolVersion(1), validator_target_reward: 767000000000000, storage_charge: 10325451200, computation_charge: 2988200000, storage_rebate: 7704044000, non_refundable_storage_fee: 0, reward_slashing_rate: 10000, epoch_start_timestamp_ms: 1733512562106 } Dec 06 19:16:02 genuine-goose iota-node[368637]: 2024-12-06T19:16:02.557266Z WARN iota_node: Failed to send end of epoch notification to subscriber: SendError(V1(IotaSystemStateV1 { epoch: 19, protocol_version: 1, system_state_version: 1, iota_treasury_cap: IotaTreasuryCap { inner: TreasuryCap { id: UID { id: ID { bytes: 0x518c0499809a9e11baa009083658e7d28020ec30c3051bd6e53296f45d57e2b9 } }, total_supply: Supply { value: 4614572665088800000 } } }, validators: ValidatorSetV1 { total_stake: 167137562285146960, active_validators: [ValidatorV1 { metadata: ValidatorV1 { metadata: ValidatorMetadataV1 { iota_address: 0x5730472539eaabd978d61b2b00c7573fd45eaad67eb4826f57a0ae296b9ac266, authority_pubkey_bytes: [182, 250, 88, 58, 109, 210, 254, 47, 72, 212, 214, 106, 10, 199, 193, 94, 80, 146, 252, 8, 87, 231, 123, 222, 159, 85, 96, 6, 60, 243, 148, 222, 166, 234, 150, 97, 109, 57, 167, 255, 152, 134, 66, 202, 235, 42, 59, 122, 18, 149, 47, 90, 98, 80, 200, 223, 119, 25, 180, 146, 87, 234, 219, 77, 169, 236, 209, 207, 108, 106, 228, 159, 229, 149, 22, 10, 230, 91, 42, 73, 250, 133, 157, 35, 20, 246, 221, 133, 169, 228, 222, 88, 20, 17, 56, 175], network_pubkey_bytes: [42, 186, 28, 6, 165, 235, 155, 209, 37, 200, 234, 114, 159, 174, 112, 64, 119, 138, 96, 80, 152, 216, 189, 81, 32, 12, 16, 20, 145, 222, 105, 232], protocol_pubkey_bytes: [198, 72, 69, 181, 209, 109, 191, 116, 173, 16, 211, 144, 65, 217, 154, 50, 12, 21, 46, 106, 95, 205, 228, 192, 58, 102, 211, 109, 136, 178, 136, 7], proof_of_possession_bytes: [144, 196, 192, 132, 215, 62, 71, 4, 93, 87, 55, 195, 116, 121, 169, 248, 155, 63, 103, 179, 227, 100, 210, 229, 40, 89, 76, 112, 78, 54, 248, 54, 223, 193, 24, 182, 160, 165, 71, 232, 122, 243, 180, 220, 223, 217, 89, 249], name: \"Cosmostation\", description: \"Cosmostation is an institutional-grade cryptocurrency infrastructure provider, managing billions of dollars across 70 protocols. Since 2018, we have served more than 500k users globally, providing products that enable protocols to scale\", image_url: \"https://github.com/cosmostation/chainlist/blob/main/resource/cosmostation/cosmostation_color(128x128).png\", project_url: \"https://www.cosmostation.io\", net_address: \"/dns/iota-testnet-validator.cosmostation.io/tcp/8080/http\", p2p_address: \"/dns/iota-testnet-validator.cosmostation.io/udp/8084\", primary_address: \"/dns/iota-testnet-validator.cosmostation.io/udp/8081\", next_epoch_authority_pubkey_bytes: None, next_epoch_proof_of_possession: None, next_epoch_network_pubkey_bytes: None, next_epoch_protocol_pubkey_bytes: None, next_epoch_net_address: None, next_epoch_p2p_address: None, next_epoch_primary_address: None, extra_fields: Bag { id: UID { id: ID { bytes: 0xa833ed68a5b69d9d05e438e4e33eb74ae553ff1720fc6f36d3136fc3ece52238 } }, size: 0 } }, verified_metadata: OnceCell(Uninit), voting_power: 349, operation_cap_id: ID { bytes: 0x562bdcea28aff455042fb7120c5e2f864590e8a1002f01bad2bed90b37421be9 }, gas_price: 1000, staking_pool: StakingPoolV1 { id: 0x2618122f93bb5993d831e16dfbcd4af8e7af3bc6cf40dfc9ae87854d071a7cdd, activation_epoch: Some(19), deactivation_epoch: None, iota_balance: 2000000000000000, rewards_pool: Balance { value: 0 }, pool_token_balance: 2000000000000000, exchange_rates: Table { id: 0x4c83cbeb19a345e5834c17add5bf4bf235bbf69a1944ae35b902c2904a318fc0, size: 1 }, pending_stake: 0, pending_total_iota_withdraw: 0, pending_pool_token_withdraw: 0, extra_fields: Bag { id: UID { id: ID { bytes: 0x359cfd02a91572a2aaafd41ea0f6b2cced5130cfd298c663578f3ae05dd070b0 } }, size: 0 } }, commission_rate: 200, next_epoch_stake: 2000000000000000, next_epoch_gas_price: 1000, next_epoch_commission_rate: 200, extra_fields: Bag { id: UID { id: ID { bytes: 0xaa5ba6c511b5ccd1b8a8e43d0df93ce5ea5c7fce03c4f9c98918526d1ba401c3 } }, size: 0 } }, Dec 06 19:16:02 genuine-goose iota-node[368637]: 2024-12-06T19:16:02.854263Z INFO consensus_core::authority_node: Starting consensus authority T Dec 06 19:16:02 genuine-goose iota-node[368637]: Committee { Dec 06 19:16:02 genuine-goose iota-node[368637]: epoch: 19, Dec 06 19:16:02 genuine-goose iota-node[368637]: total_stake: 10000, Dec 06 19:16:02 genuine-goose iota-node[368637]: quorum_threshold: 6667, Dec 06 19:16:02 genuine-goose iota-node[368637]: validity_threshold: 3334, Dec 06 19:16:02 genuine-goose iota-node[368637]: authorities: [ Dec 06 19:16:02 genuine-goose iota-node[368637]: Authority { Dec 06 19:16:02 genuine-goose iota-node[368637]: stake: 349, Dec 06 19:16:02 genuine-goose iota-node[368637]: address: Multiaddr( Dec 06 19:16:02 genuine-goose iota-node[368637]: \"/dns/iota-testnet-validator.cosmostation.io/udp/8081\", Dec 06 19:16:02 genuine-goose iota-node[368637]: ), Dec 06 19:16:02 genuine-goose iota-node[368637]: hostname: \"Cosmostation\", Dec 06 19:16:02 genuine-goose iota-node[368637]: authority_key: AuthorityPublicKey( Dec 06 19:16:02 genuine-goose iota-node[368637]: tvpYOm3S/i9I1NZqCsfBXlCS/AhX53ven1VgBjzzlN6m6pZhbTmn/5iGQsrrKjt6EpUvWmJQyN93GbSSV+rbTans0c9sauSf5ZUWCuZbKkn6hZ0jFPbdhank3lgUETiv, Dec 06 19:16:02 genuine-goose iota-node[368637]: ), Dec 06 19:16:02 genuine-goose iota-node[368637]: protocol_key: ProtocolPublicKey( Dec 06 19:16:02 genuine-goose iota-node[368637]: xkhFtdFtv3StENOQQdmaMgwVLmpfzeTAOmbTbYiyiAc=, Dec 06 19:16:02 genuine-goose iota-node[368637]: ), Dec 06 19:16:02 genuine-goose iota-node[368637]: network_key: NetworkPublicKey( Dec 06 19:16:02 genuine-goose iota-node[368637]: KrocBqXrm9ElyOpyn65wQHeKYFCY2L1RIAwQFJHeaeg=, Dec 06 19:16:02 genuine-goose iota-node[368637]: ), Dec 06 19:16:02 genuine-goose iota-node[368637]: }, Dec 06 19:16:02 genuine-goose iota-node[368637]: ], fullnode db validator db","title":"Validator"},{"location":"chains/kyve/testnet/mnemonic/","text":"role - validator 24 words end tattoo define valley cabin faculty exhaust act pluck adapt cargo involve laugh essence accident clap alley theme tongue normal dice lava skate soft","title":"Mnemonic"},{"location":"chains/lumera/testnet/addresses/","text":"Addresses Account Address lumera1c4xhkuac23qjtcxmp7khc6hrk9mur4k7wu8uyx Operator Address lumeravaloper1c4xhkuac23qjtcxmp7khc6hrk9mur4k7px5qz9 Hex Address 5A8235EB8BB6221A0E763D3C4061EA0CC8077AE0 Signer Address lumeravalcons1t2prt6utkc3p5rnk857yqc02pnyqw7hqq84h5y Consensus Public Key { \"@type\": \"/cosmos.crypto.ed25519.PubKey\", \"key\": \"D6WHOamDYxZdI4O7p2X45KVfOhFDq/Km79+aWZqmKJM=\" }","title":"Addresses"},{"location":"chains/lumera/testnet/addresses/#addresses","text":"Account Address lumera1c4xhkuac23qjtcxmp7khc6hrk9mur4k7wu8uyx Operator Address lumeravaloper1c4xhkuac23qjtcxmp7khc6hrk9mur4k7px5qz9 Hex Address 5A8235EB8BB6221A0E763D3C4061EA0CC8077AE0 Signer Address lumeravalcons1t2prt6utkc3p5rnk857yqc02pnyqw7hqq84h5y Consensus Public Key { \"@type\": \"/cosmos.crypto.ed25519.PubKey\", \"key\": \"D6WHOamDYxZdI4O7p2X45KVfOhFDq/Km79+aWZqmKJM=\" }","title":"Addresses"},{"location":"chains/lumera/testnet/mnemonic/","text":"flush alone echo venture lens trash write draft situate soccer mixed bubble vacuum receive coyote cluster beyond human bamboo fluid believe yellow sweet east flush alone echo venture lens trash write draft situate soccer mixed bubble vacuum receive coyote cluster beyond human bamboo fluid believe yellow sweet east flush alone echo venture lens trash write draft situate soccer mixed bubble vacuum receive coyote cluster beyond human bamboo fluid believe yellow sweet east flush alone echo venture lens trash write draft situate soccer mixed bubble vacuum receive coyote cluster beyond human bamboo fluid believe yellow sweet east","title":"Mnemonic"},{"location":"chains/lumera/testnet/validator_address/","text":"Address: [197 77 123 115 184 84 65 37 224 219 15 173 124 106 227 177 119 193 214 222] Address (hex): C54D7B73B8544125E0DB0FAD7C6AE3B177C1D6DE Bech32 Acc: lumera1c4xhkuac23qjtcxmp7khc6hrk9mur4k7wu8uyx Bech32 Val: lumeravaloper1c4xhkuac23qjtcxmp7khc6hrk9mur4k7px5qz9 Bech32 Con: lumeravalcons1c4xhkuac23qjtcxmp7khc6hrk9mur4k7448uwy","title":"Validator address"},{"location":"chains/lumera/testnet/validator_key/","text":"- address: lumera1c4xhkuac23qjtcxmp7khc6hrk9mur4k7wu8uyx name: validator pubkey: '{\"@type\":\"/cosmos.crypto.secp256k1.PubKey\",\"key\":\"A0CgqNZh8R6TqVVYqEjx8G5V8BBjcwJxUNO6YsmIkpQ5\"}' type: local","title":"Validator key"},{"location":"chains/mantra/testnet/hongbai/mnemonic/","text":"role - validator 24 words (cosmos default) dirt room total defense clarify dress tuition code decrease horror another benefit tongue stick industry ship enact swim ketchup double pigeon infant wish odor","title":"Mnemonic"},{"location":"chains/mintstation/mnemonics/","text":"validator2 into achieve ignore usage put swim yellow carpet obvious siege coral security field stage detail silver element produce doll razor eye invite will fault cosmostation aisle wish pencil quick supply joy wife thumb thunder dial circle sport defense machine bracket tuna ignore cement direct drastic cat task wine omit validator1 canoe ugly attract any degree jazz kind legal maximum filter warm earth fade rifle census aisle letter vast jewel network early tape labor short","title":"Mnemonics"},{"location":"chains/monad/testnet/fullnode/","text":"Installation Running a non-validator full node For instructions to run a full node with archive RPC backend, please see rpc-archive-backend. Requirements CPU AMD Ryzen 7950x / AMD EPYC 4584PX 16 cores 4.5GHz base clock speed or faster (single core performance) CPU Architecture AMD Zen 4 or newer Intel Raptor Lake or newer RAM At least 32GB Disk 2TB Dedicated disk for TrieDB (Execution) 2TB Disk for MonadBFT / OS PCIe Gen4x4 NVME SSD or better Components monad-bft - Consensus client monad-execution - Execution client monad-rpc - RPC client monad-mpt - One-time execution for initializing the disk for TrieDB making the disk available for it. Not required when upgrading unless explicitly mentioned Prerequisites Ubuntu 24.04 OS and Kernel >= 6.8 Disable HyperThreading or SMT via bios settings info Instructions below assume you are running from root user Provision TrieDB Disk Set the drive to be used for TrieDB, create a new partition table and a partition that spans the entire drive. The TrieDB drive should be on a disk that has no filesystem mounted and no RAID. TRIEDB_DRIVE=/dev/nvme1n1 # CHANGE THIS TO YOUR NVME DRIVE parted $TRIEDB_DRIVE mklabel gpt parted $TRIEDB_DRIVE mkpart triedb 0% 100% Create a udev rule to set permissions and create a symlink for the partition PARTUUID=$(lsblk -o PARTUUID $TRIEDB_DRIVE | tail -n 1) echo \"ENV{ID_PART_ENTRY_UUID}==\\\"$PARTUUID\\\", MODE=\\\"0666\\\", SYMLINK+=\\\"triedb\\\"\" | tee /etc/udev/rules.d/99-triedb.rules Trigger and reload udev rules udevadm trigger udevadm control --reload Give permissions to the /dev/triedb drive chmod a+rwx /dev/triedb Create Dedicated User Create a non-privileged user named monad with a home directory and Bash shell. useradd -m -s /bin/bash monad Create config directories in monad-bft in monad's home directory. sudo -u monad bash -c \" mkdir -p ~/monad-bft/config ~/monad-bft/blockdb ~/monad-bft/ledger ~/monad-bft/config/forkpoint ~/monitoring \" note ~/monad-bft/config/node.toml - contains configurable consensus parameters, most notably the name of the node, typically \"testnet_full_<PROVIDER>-1\" and a list of upstream validators (denoted by secp pubkey and DNS) who have been configured to republish blocks to your full node. ~/monad-bft/config/forkpoint/ - contains consensus quorum checkpoints (written every block) used for bootstrapping state. The latest forkpoint.toml file contains the active validator set and needs to be updated (e.g. via the download-forkpoint.sh linked in patch notes) when the validator set changes. ~/monad-bft/blockdb - contains \"consensus blocks\" (quorum certificates, transaction data, etc.) ~/monad-bft/ledger - contains \"eth blocks\" encoded in the standard Ethereum block format, used as input to execution, which updates triedb with modified state and MPT Configure System Parameters Set kernel parameters to adjust network buffer sizes for improved performance. sysctl -w net.core.rmem_default=62500000 sysctl -w net.core.rmem_max=62500000 sysctl -w net.core.wmem_default=62500000 sysctl -w net.core.wmem_max=62500000 sysctl -w net.ipv4.tcp_rmem=\"4096 62500000 62500000\" sysctl -w net.ipv4.tcp_wmem=\"4096 62500000 62500000\" Write the settings to /etc/sysctl.d/99-custom.conf to make them persistent across reboots. cat <<EOL > /etc/sysctl.d/99-custom.conf # Custom network buffer sizes net.core.rmem_default=62500000 net.core.rmem_max=62500000 net.core.wmem_default=62500000 net.core.wmem_max=62500000 EOL Reload the sysctl configuration to apply the changes. sysctl -p /etc/sysctl.d/99-custom.conf Set ulimit parameters to increase concurrent multiple files open. ulimit -n 1048576 Append the settings to /etc/security/limits.conf to make them persistent across reboots. cat <<EOL > /etc/security/limits.conf * soft nofile 1048576 * hard nofile 1048576 EOL Set HugePages Configuration Set the number of HugePages for both 1GB and 2MB page sizes. echo 4 > /sys/devices/system/node/node0/hugepages/hugepages-1048576kB/nr_hugepages echo 2048 > /sys/devices/system/node/node0/hugepages/hugepages-2048kB/nr_hugepages Create a systemd service to apply HugePages settings at startup. cat <<EOL > /etc/systemd/system/set-hugepages.service [Unit] Description=Set HugePages at Startup After=sysinit.target local-fs.target [Service] Type=oneshot ExecStart=/bin/sh -c 'echo 4 > /sys/devices/system/node/node0/hugepages/hugepages-1048576kB/nr_hugepages' ExecStart=/bin/sh -c 'echo 2048 > /sys/devices/system/node/node0/hugepages/hugepages-2048kB/nr_hugepages' RemainAfterExit=yes [Install] WantedBy=multi-user.target EOL Reload systemd , enables the service to start at boot, and starts it immediately. systemctl daemon-reload systemctl enable set-hugepages.service systemctl start set-hugepages.service Configure UFW Configure UFW to allow SSH inbound connections (remote access) and traffic to port 8000. The Monad consensus client uses both TCP and UDP. # enable ssh connections sudo ufw allow ssh sudo ufw allow 8000 # default behavior: block all incoming traffic and enable all outgoing sudo ufw enable # if you want to enable incoming traffic to your RPC port, you should open port 8080 \u26a0\ufe0fWARNING If using hardware firewalls, you may need to perform additional steps to open up port 8000 to UDP and TCP traffic. Install Docker Install Docker Do not install rootless docker. Add monad user to docker group: # as root user adduser monad docker Install Docker Compose Monad Registry Login Log into docker as categoryxyz user. # as monad user docker login -u categoryxyz -p dckr_pat_y3g-reyU_NzU0A0Ov1PNHbkPqvI Node Setup \u26a0\ufe0fnote Instructions below assume you are running from monad user Download a collection of configuration files and scripts associated with the software client from Category Labs. CL_BUCKET=https://pub-b0d0d7272c994851b4c8af22a766f571.r2.dev MF_BUCKET=https://bucket.monadinfra.com curl -o ~/profile.json $CL_BUCKET/profile.json # verify these are not network params curl -o ~/.env $CL_BUCKET/.env.example curl -o ~/docker-compose.yml $CL_BUCKET/full-node-docker-compose.yml curl -o ~/reset.sh $MF_BUCKET/reset.sh curl -o ~/otel-collector-config.yaml $CL_BUCKET/otel-collector-config.yaml Download the network's genesis parameters ( genesis.json ) and networking configuration from Monad Foundation. curl -o ~/monad-bft/genesis.json $MF_BUCKET/genesis.json curl -o ~/monad-bft/config/node.toml $MF_BUCKET/full-node-node.toml Configure the .env with appropriate IMAGE_TAG ( v0.7.0 ). In .env, type a strong password in KEYSTORE_PASSWORD . This password should be wrapped in single quotes, e.g. KEYSTORE_PASSWORD='str0ngp@ssw0rd' and is used for key encryption / decryption. Key Management Validator nodes need two keystores to be generated in order for the node to run. BLS Key SECP Key Generate encrypted BLS and SECP keys using the monad-bft image: docker compose pull source .env docker run -v ./monad-bft:/monad -it ${REPO_URL}/monad-bft:${IMAGE_TAG} \\ keystore --mode create \\ --key-type secp \\ --keystore-path /monad/config/id-secp \\ --password \"${KEYSTORE_PASSWORD}\" > secp-backup docker run -v ./monad-bft:/monad -it ${REPO_URL}/monad-bft:${IMAGE_TAG} \\ keystore --mode create \\ --key-type bls \\ --keystore-path /monad/config/id-bls \\ --password \"${KEYSTORE_PASSWORD}\" > bls-backup Keypairs will be generated and backups stored locally under secp-backup and bls-backup . If planning to reuse keys, please make sure keys are properly backed up. Save the public keys (these are required for upstream validator configuration to broadcast blocks to your full node). grep \"public key\" secp-backup bls-backup > pubkey-secp-bls Launching the Monad Stack After generating the keys above, please share your node information with Monad Foundation in the form here. If already running a validator: Please modify your validator's node.toml to include the new full node entry under [[bootstrap.peers]] and create [[fullnode.identities]] as demonstrated below. This directly connects the full node to your validator as the source of network progression. [[bootstrap.peers]] address = \"<FULL_NODE_DNS>:8000\" secp256k1_pubkey = \"<FULL_NODE_SECP_PUBKEY>\" [[fullnode.identities]] secp256k1_pubkey = \"<FULL_NODE_SECP_PUBKEY>\" Please modify your full node's node.toml to specify any known upstream validators (validators that have been configured to share block proposals with your full node with the above configuration) as blocksync_override.peers and statesync.peers . This enables more efficient statesync and blocksync with the whitelisted peers willing to respond to requests. If this is not specified, the full node will randomly request from the full validator set, resulting in a high percentage of timeouts. # this part should already exist [[bootstrap.peers]] address = \"upstream-validator:8000\" secp256k1_pubkey = \"<validator pubkey>\" [[blocksync_override.peers]] secp256k1_pubkey = \"<validator pubkey>\" [[statesync.peers]] secp256k1_pubkey = \"<validator pubkey>\" If you choose to whitelist upstream validators, please remember to comment out the empty array defaults. # Comment out the default empty arrays for blocksync_override and statesync # [blocksync_override] # peers = [] # [statesync] # peers = [] Also, the validators are maintaining a spreadsheet with peer information here, so you can also share your information and ask directly on Discord for other parties to add you in their address book. If not already running a validator: Please message the Monad Foundation team and wait for existing validator nodes to update their list of full nodes for re-broadcasting. \u26a0\ufe0finfo If running an RPC service, endpoints that require landing transactions (e.g. eth_sendRawTransaction) require the potential leaders to be defined in [[bootstrap.peers]] entries listed in your full node's node.toml. The file available at $MF_BUCKET/full-node-node.toml should contain the complete set of validators. Update the node_name field in node.toml to include your provider name and remove '#' from the variable. Note that if you are provisioning multiple nodes, this name should be unique. We recommend a naming scheme like full_<PROVIDER>-1 , full_<PROVIDER>-2 , etc. node_name = # \"full_<INSERT_RPC_PROVIDER_NAME><OPTIONAL_SUFFIX>\" Fetch the latest forkpoint (a new forkpoint is served every minute) and statesync the node to latest height. # NOTE: $MF_BUCKET is set previously curl -sSL $MF_BUCKET/download-forkpoint.sh | bash The final directory structure should look similar to this: /home/monad \u2514\u2500\u2500 profile.json \u2514\u2500\u2500 .env \u2514\u2500\u2500 docker-compose.yml \u2514\u2500\u2500 monad-bft/ \u2514\u2500\u2500config \u251c\u2500\u2500 id-bls \u251c\u2500\u2500 id-secp \u2514\u2500\u2500 node.toml \u2514\u2500\u2500forkpoint \u2514\u2500\u2500 forkpoint.toml \u2514\u2500\u2500genesis.json Run docker-compose to start the node. docker compose --profile=new pull docker compose --profile=new up -d Setup an hourly cronjob to clear the older forkpoints, blockdb and ledger generated by the chain and retain files within the last 5-10 hours. wget -O ~/.config/clear-old-artifacts.sh $CL_BUCKET/clear-old-artifacts.sh chmod +x /home/monad/.config/clear-old-artifacts.sh crontab -e #cronjob config: 0 * * * * /home/monad/.config/clear-old-artifacts.sh Verify the docker containers are running. docker ps -a ----- CONTAINER ID IMAGE COMMAND CREATED STATUS PORTS NAMES a72e41edea56 <HOSTNAME>/category-labs/monad-rpc:<image> \"monad-rpc --ipc-pat\u2026\" 28 hours ago Up 28 hours 0.0.0.0:8080->8080/tcp, :::8080->8080/tcp monad-rpc-1 bc82b8ce83b7 <HOSTNAME>/category-labs/monad-execution:<image> \"monad --chain monad\u2026\" 28 hours ago Up 28 hours monad-execution-1 8aa54dec40b2 <HOSTNAME>/category-labs/monad-full-node:<image> \"monad-full-node --s\u2026\" 28 hours ago Up 28 hours 0.0.0.0:8000->8000/tcp, 0.0.0.0:8000->8000/udp, :::8000->8000/tcp, :::8000->8000/udp monad-bft-1 7222ae63541c <HOSTNAME>/category-labs/monad-execution:<image> \"monad_mpt --storage\u2026\" 28 hours ago Exited (0) 28 hours ago monad-mpt-1 # Check logs of the chain docker compose logs -f OTEL Collector usage Start the OTEL collector. docker compose --profile monitoring up -d otel-collector In the latest docker compose file, support was added for the OTEL collector. Through this, you will be able to see all the relevant Monad specific metrics (available at `0.0.0.0:8889/metrics), while also pushing metrics to a Category Labs OTLP endpoint so we can help with debugging if any issues arise.","title":"Index"},{"location":"chains/monad/testnet/fullnode/#installation","text":"Running a non-validator full node For instructions to run a full node with archive RPC backend, please see rpc-archive-backend.","title":"Installation"},{"location":"chains/monad/testnet/fullnode/#requirements","text":"CPU AMD Ryzen 7950x / AMD EPYC 4584PX 16 cores 4.5GHz base clock speed or faster (single core performance) CPU Architecture AMD Zen 4 or newer Intel Raptor Lake or newer RAM At least 32GB Disk 2TB Dedicated disk for TrieDB (Execution) 2TB Disk for MonadBFT / OS PCIe Gen4x4 NVME SSD or better","title":"Requirements"},{"location":"chains/monad/testnet/fullnode/#components","text":"monad-bft - Consensus client monad-execution - Execution client monad-rpc - RPC client monad-mpt - One-time execution for initializing the disk for TrieDB making the disk available for it. Not required when upgrading unless explicitly mentioned","title":"Components"},{"location":"chains/monad/testnet/fullnode/#prerequisites","text":"Ubuntu 24.04 OS and Kernel >= 6.8 Disable HyperThreading or SMT via bios settings info Instructions below assume you are running from root user","title":"Prerequisites"},{"location":"chains/monad/testnet/fullnode/#provision-triedb-disk","text":"Set the drive to be used for TrieDB, create a new partition table and a partition that spans the entire drive. The TrieDB drive should be on a disk that has no filesystem mounted and no RAID. TRIEDB_DRIVE=/dev/nvme1n1 # CHANGE THIS TO YOUR NVME DRIVE parted $TRIEDB_DRIVE mklabel gpt parted $TRIEDB_DRIVE mkpart triedb 0% 100% Create a udev rule to set permissions and create a symlink for the partition PARTUUID=$(lsblk -o PARTUUID $TRIEDB_DRIVE | tail -n 1) echo \"ENV{ID_PART_ENTRY_UUID}==\\\"$PARTUUID\\\", MODE=\\\"0666\\\", SYMLINK+=\\\"triedb\\\"\" | tee /etc/udev/rules.d/99-triedb.rules Trigger and reload udev rules udevadm trigger udevadm control --reload Give permissions to the /dev/triedb drive chmod a+rwx /dev/triedb","title":"Provision TrieDB Disk"},{"location":"chains/monad/testnet/fullnode/#create-dedicated-user","text":"Create a non-privileged user named monad with a home directory and Bash shell. useradd -m -s /bin/bash monad Create config directories in monad-bft in monad's home directory. sudo -u monad bash -c \" mkdir -p ~/monad-bft/config ~/monad-bft/blockdb ~/monad-bft/ledger ~/monad-bft/config/forkpoint ~/monitoring \" note ~/monad-bft/config/node.toml - contains configurable consensus parameters, most notably the name of the node, typically \"testnet_full_<PROVIDER>-1\" and a list of upstream validators (denoted by secp pubkey and DNS) who have been configured to republish blocks to your full node. ~/monad-bft/config/forkpoint/ - contains consensus quorum checkpoints (written every block) used for bootstrapping state. The latest forkpoint.toml file contains the active validator set and needs to be updated (e.g. via the download-forkpoint.sh linked in patch notes) when the validator set changes. ~/monad-bft/blockdb - contains \"consensus blocks\" (quorum certificates, transaction data, etc.) ~/monad-bft/ledger - contains \"eth blocks\" encoded in the standard Ethereum block format, used as input to execution, which updates triedb with modified state and MPT","title":"Create Dedicated User"},{"location":"chains/monad/testnet/fullnode/#configure-system-parameters","text":"Set kernel parameters to adjust network buffer sizes for improved performance. sysctl -w net.core.rmem_default=62500000 sysctl -w net.core.rmem_max=62500000 sysctl -w net.core.wmem_default=62500000 sysctl -w net.core.wmem_max=62500000 sysctl -w net.ipv4.tcp_rmem=\"4096 62500000 62500000\" sysctl -w net.ipv4.tcp_wmem=\"4096 62500000 62500000\" Write the settings to /etc/sysctl.d/99-custom.conf to make them persistent across reboots. cat <<EOL > /etc/sysctl.d/99-custom.conf # Custom network buffer sizes net.core.rmem_default=62500000 net.core.rmem_max=62500000 net.core.wmem_default=62500000 net.core.wmem_max=62500000 EOL Reload the sysctl configuration to apply the changes. sysctl -p /etc/sysctl.d/99-custom.conf Set ulimit parameters to increase concurrent multiple files open. ulimit -n 1048576 Append the settings to /etc/security/limits.conf to make them persistent across reboots. cat <<EOL > /etc/security/limits.conf * soft nofile 1048576 * hard nofile 1048576 EOL","title":"Configure System Parameters"},{"location":"chains/monad/testnet/fullnode/#set-hugepages-configuration","text":"Set the number of HugePages for both 1GB and 2MB page sizes. echo 4 > /sys/devices/system/node/node0/hugepages/hugepages-1048576kB/nr_hugepages echo 2048 > /sys/devices/system/node/node0/hugepages/hugepages-2048kB/nr_hugepages Create a systemd service to apply HugePages settings at startup. cat <<EOL > /etc/systemd/system/set-hugepages.service [Unit] Description=Set HugePages at Startup After=sysinit.target local-fs.target [Service] Type=oneshot ExecStart=/bin/sh -c 'echo 4 > /sys/devices/system/node/node0/hugepages/hugepages-1048576kB/nr_hugepages' ExecStart=/bin/sh -c 'echo 2048 > /sys/devices/system/node/node0/hugepages/hugepages-2048kB/nr_hugepages' RemainAfterExit=yes [Install] WantedBy=multi-user.target EOL Reload systemd , enables the service to start at boot, and starts it immediately. systemctl daemon-reload systemctl enable set-hugepages.service systemctl start set-hugepages.service","title":"Set HugePages Configuration"},{"location":"chains/monad/testnet/fullnode/#configure-ufw","text":"Configure UFW to allow SSH inbound connections (remote access) and traffic to port 8000. The Monad consensus client uses both TCP and UDP. # enable ssh connections sudo ufw allow ssh sudo ufw allow 8000 # default behavior: block all incoming traffic and enable all outgoing sudo ufw enable # if you want to enable incoming traffic to your RPC port, you should open port 8080 \u26a0\ufe0fWARNING If using hardware firewalls, you may need to perform additional steps to open up port 8000 to UDP and TCP traffic.","title":"Configure UFW"},{"location":"chains/monad/testnet/fullnode/#install-docker","text":"Install Docker Do not install rootless docker. Add monad user to docker group: # as root user adduser monad docker Install Docker Compose","title":"Install Docker"},{"location":"chains/monad/testnet/fullnode/#monad-registry-login","text":"Log into docker as categoryxyz user. # as monad user docker login -u categoryxyz -p dckr_pat_y3g-reyU_NzU0A0Ov1PNHbkPqvI","title":"Monad Registry Login"},{"location":"chains/monad/testnet/fullnode/#node-setup","text":"\u26a0\ufe0fnote Instructions below assume you are running from monad user Download a collection of configuration files and scripts associated with the software client from Category Labs. CL_BUCKET=https://pub-b0d0d7272c994851b4c8af22a766f571.r2.dev MF_BUCKET=https://bucket.monadinfra.com curl -o ~/profile.json $CL_BUCKET/profile.json # verify these are not network params curl -o ~/.env $CL_BUCKET/.env.example curl -o ~/docker-compose.yml $CL_BUCKET/full-node-docker-compose.yml curl -o ~/reset.sh $MF_BUCKET/reset.sh curl -o ~/otel-collector-config.yaml $CL_BUCKET/otel-collector-config.yaml Download the network's genesis parameters ( genesis.json ) and networking configuration from Monad Foundation. curl -o ~/monad-bft/genesis.json $MF_BUCKET/genesis.json curl -o ~/monad-bft/config/node.toml $MF_BUCKET/full-node-node.toml Configure the .env with appropriate IMAGE_TAG ( v0.7.0 ). In .env, type a strong password in KEYSTORE_PASSWORD . This password should be wrapped in single quotes, e.g. KEYSTORE_PASSWORD='str0ngp@ssw0rd' and is used for key encryption / decryption.","title":"Node Setup"},{"location":"chains/monad/testnet/fullnode/#key-management","text":"Validator nodes need two keystores to be generated in order for the node to run. BLS Key SECP Key Generate encrypted BLS and SECP keys using the monad-bft image: docker compose pull source .env docker run -v ./monad-bft:/monad -it ${REPO_URL}/monad-bft:${IMAGE_TAG} \\ keystore --mode create \\ --key-type secp \\ --keystore-path /monad/config/id-secp \\ --password \"${KEYSTORE_PASSWORD}\" > secp-backup docker run -v ./monad-bft:/monad -it ${REPO_URL}/monad-bft:${IMAGE_TAG} \\ keystore --mode create \\ --key-type bls \\ --keystore-path /monad/config/id-bls \\ --password \"${KEYSTORE_PASSWORD}\" > bls-backup Keypairs will be generated and backups stored locally under secp-backup and bls-backup . If planning to reuse keys, please make sure keys are properly backed up. Save the public keys (these are required for upstream validator configuration to broadcast blocks to your full node). grep \"public key\" secp-backup bls-backup > pubkey-secp-bls","title":"Key Management"},{"location":"chains/monad/testnet/fullnode/#launching-the-monad-stack","text":"After generating the keys above, please share your node information with Monad Foundation in the form here. If already running a validator: Please modify your validator's node.toml to include the new full node entry under [[bootstrap.peers]] and create [[fullnode.identities]] as demonstrated below. This directly connects the full node to your validator as the source of network progression. [[bootstrap.peers]] address = \"<FULL_NODE_DNS>:8000\" secp256k1_pubkey = \"<FULL_NODE_SECP_PUBKEY>\" [[fullnode.identities]] secp256k1_pubkey = \"<FULL_NODE_SECP_PUBKEY>\" Please modify your full node's node.toml to specify any known upstream validators (validators that have been configured to share block proposals with your full node with the above configuration) as blocksync_override.peers and statesync.peers . This enables more efficient statesync and blocksync with the whitelisted peers willing to respond to requests. If this is not specified, the full node will randomly request from the full validator set, resulting in a high percentage of timeouts. # this part should already exist [[bootstrap.peers]] address = \"upstream-validator:8000\" secp256k1_pubkey = \"<validator pubkey>\" [[blocksync_override.peers]] secp256k1_pubkey = \"<validator pubkey>\" [[statesync.peers]] secp256k1_pubkey = \"<validator pubkey>\" If you choose to whitelist upstream validators, please remember to comment out the empty array defaults. # Comment out the default empty arrays for blocksync_override and statesync # [blocksync_override] # peers = [] # [statesync] # peers = [] Also, the validators are maintaining a spreadsheet with peer information here, so you can also share your information and ask directly on Discord for other parties to add you in their address book. If not already running a validator: Please message the Monad Foundation team and wait for existing validator nodes to update their list of full nodes for re-broadcasting. \u26a0\ufe0finfo If running an RPC service, endpoints that require landing transactions (e.g. eth_sendRawTransaction) require the potential leaders to be defined in [[bootstrap.peers]] entries listed in your full node's node.toml. The file available at $MF_BUCKET/full-node-node.toml should contain the complete set of validators. Update the node_name field in node.toml to include your provider name and remove '#' from the variable. Note that if you are provisioning multiple nodes, this name should be unique. We recommend a naming scheme like full_<PROVIDER>-1 , full_<PROVIDER>-2 , etc. node_name = # \"full_<INSERT_RPC_PROVIDER_NAME><OPTIONAL_SUFFIX>\" Fetch the latest forkpoint (a new forkpoint is served every minute) and statesync the node to latest height. # NOTE: $MF_BUCKET is set previously curl -sSL $MF_BUCKET/download-forkpoint.sh | bash The final directory structure should look similar to this: /home/monad \u2514\u2500\u2500 profile.json \u2514\u2500\u2500 .env \u2514\u2500\u2500 docker-compose.yml \u2514\u2500\u2500 monad-bft/ \u2514\u2500\u2500config \u251c\u2500\u2500 id-bls \u251c\u2500\u2500 id-secp \u2514\u2500\u2500 node.toml \u2514\u2500\u2500forkpoint \u2514\u2500\u2500 forkpoint.toml \u2514\u2500\u2500genesis.json Run docker-compose to start the node. docker compose --profile=new pull docker compose --profile=new up -d Setup an hourly cronjob to clear the older forkpoints, blockdb and ledger generated by the chain and retain files within the last 5-10 hours. wget -O ~/.config/clear-old-artifacts.sh $CL_BUCKET/clear-old-artifacts.sh chmod +x /home/monad/.config/clear-old-artifacts.sh crontab -e #cronjob config: 0 * * * * /home/monad/.config/clear-old-artifacts.sh Verify the docker containers are running. docker ps -a ----- CONTAINER ID IMAGE COMMAND CREATED STATUS PORTS NAMES a72e41edea56 <HOSTNAME>/category-labs/monad-rpc:<image> \"monad-rpc --ipc-pat\u2026\" 28 hours ago Up 28 hours 0.0.0.0:8080->8080/tcp, :::8080->8080/tcp monad-rpc-1 bc82b8ce83b7 <HOSTNAME>/category-labs/monad-execution:<image> \"monad --chain monad\u2026\" 28 hours ago Up 28 hours monad-execution-1 8aa54dec40b2 <HOSTNAME>/category-labs/monad-full-node:<image> \"monad-full-node --s\u2026\" 28 hours ago Up 28 hours 0.0.0.0:8000->8000/tcp, 0.0.0.0:8000->8000/udp, :::8000->8000/tcp, :::8000->8000/udp monad-bft-1 7222ae63541c <HOSTNAME>/category-labs/monad-execution:<image> \"monad_mpt --storage\u2026\" 28 hours ago Exited (0) 28 hours ago monad-mpt-1 # Check logs of the chain docker compose logs -f","title":"Launching the Monad Stack"},{"location":"chains/monad/testnet/fullnode/#otel-collector-usage","text":"Start the OTEL collector. docker compose --profile monitoring up -d otel-collector In the latest docker compose file, support was added for the OTEL collector. Through this, you will be able to see all the relevant Monad specific metrics (available at `0.0.0.0:8889/metrics), while also pushing metrics to a Category Labs OTLP endpoint so we can help with debugging if any issues arise.","title":"OTEL Collector usage"},{"location":"chains/monad/testnet/validator/","text":"General information ~/.profile most used variables CL_BUCKET=https://pub-b0d0d7272c994851b4c8af22a766f571.r2.dev MF_BUCKET=https://bucket.monadinfra.com NODE_NAME=\"Cosmostation\"","title":"Index"},{"location":"chains/monad/testnet/validator/#general-information","text":"~/.profile most used variables CL_BUCKET=https://pub-b0d0d7272c994851b4c8af22a766f571.r2.dev MF_BUCKET=https://bucket.monadinfra.com NODE_NAME=\"Cosmostation\"","title":"General information"},{"location":"chains/monad/testnet/validator/docker-credentials/","text":"cat ~/.docker/config.json { \"auths\": { \"r2-docker-test.devcore4.com\": { \"auth\": \"bW9uYWQ6VGgxJFBAJCQxMkhAckQ=\" } }, \"currentContext\": \"rootless\" } docker login -u categoryxyz -p dckr_pat_y3g-reyU_NzU0A0Ov1PNHbkPqvI","title":"Docker credentials"},{"location":"chains/monad/testnet/validator/ethereum-address/","text":"Ethereum address Announcement: while we're hanging out here, please feel free to drop us an Ethereum address so we can send you some testnet tokens on the new testnet: https://forms.gle/CfsqhkESg44ErN4R6","title":"Index"},{"location":"chains/monad/testnet/validator/ethereum-address/#ethereum-address","text":"Announcement: while we're hanging out here, please feel free to drop us an Ethereum address so we can send you some testnet tokens on the new testnet: https://forms.gle/CfsqhkESg44ErN4R6","title":"Ethereum address"},{"location":"chains/monad/testnet/validator/ethereum-address/address/","text":"My wallet address 0x120D8c0C855C86f7907152173300B7C1Ad42eDA6 0x120D8c0C855C86f7907152173300B7C1Ad42eDA6 0x120D8c0C855C86f7907152173300B7C1Ad42eDA6 0x120D8c0C855C86f7907152173300B7C1Ad42eDA6","title":"Address"},{"location":"chains/monad/testnet/validator/ethereum-address/mnemonic/","text":"broccoli prepare home news wear outer bulk medal clinic roast nerve ranch hurry absorb amateur will divorce curtain much cable cargo joke curtain common broccoli prepare home news wear outer bulk medal clinic roast nerve ranch hurry absorb amateur will divorce curtain much cable cargo joke curtain common broccoli prepare home news wear outer bulk medal clinic roast nerve ranch hurry absorb amateur will divorce curtain much cable cargo joke curtain common broccoli prepare home news wear outer bulk medal clinic roast nerve ranch hurry absorb amateur will divorce curtain much cable cargo joke curtain common","title":"Mnemonic"},{"location":"chains/monad/testnet/validator/ethereum-address/private_key/","text":"Private key 0x8cbd730178db281e1af64e5b80c4d9f2f297b455902b0d99a26ba0131cb79029 0x8cbd730178db281e1af64e5b80c4d9f2f297b455902b0d99a26ba0131cb79029 0x8cbd730178db281e1af64e5b80c4d9f2f297b455902b0d99a26ba0131cb79029 0x8cbd730178db281e1af64e5b80c4d9f2f297b455902b0d99a26ba0131cb79029","title":"Private key"},{"location":"chains/monad/testnet/validator/monad-monitoring/","text":"Monad monitoring Monad monitoring repository https://github.com/monad-validators/monad-monitoring.git","title":"Index"},{"location":"chains/monad/testnet/validator/monad-monitoring/#monad-monitoring","text":"Monad monitoring repository https://github.com/monad-validators/monad-monitoring.git","title":"Monad monitoring"},{"location":"chains/nillion/testnet/nillion-chain-testnet-1/mnemonic/","text":"role - validator 24 words (cosmos default) dirt room total defense clarify dress tuition code decrease horror another benefit tongue stick industry ship enact swim ketchup double pigeon infant wish odor","title":"Mnemonic"},{"location":"chains/nillion/testnet/nillion-genesis-test-1/","text":"Mainnet Genesis Rehersal The purpose of this chain is to test the genesis for the Nillion mainnet. This will include: Airdrop vesting accounts Validator grants For the test there will be 500k test vesting accounts that will be equally staked amongst the validators. The accounts will unlock 2 days after the genesis to test unbonding/spending etc from these accounts. Meta Chain-ID: nillion-genesis-test-1 Chain-Repo: github.com/NillionNetwork/nilchain Networks-Repo: github.com/NillionNetwork/networks Tag: 0.2.3 Denom: nil/unil Specifications The recommended hardware specifications for a node are the same as the testnet: 8-core, x86-64 architecture processor 16 GB RAM 500GB of SSD storage Network of 500 MB/s+ Schedule 6th Jan: rehearsal repo available with instructions 6th to 10th Jan: submission of gentx to the repo via PR 13th to 14th Jan: final genesis file available on the repo - spin up nodes to wait for genesis 15th Jan: genesis 15th to 24th Jan: testing","title":"Mainnet Genesis Rehersal"},{"location":"chains/nillion/testnet/nillion-genesis-test-1/#mainnet-genesis-rehersal","text":"The purpose of this chain is to test the genesis for the Nillion mainnet. This will include: Airdrop vesting accounts Validator grants For the test there will be 500k test vesting accounts that will be equally staked amongst the validators. The accounts will unlock 2 days after the genesis to test unbonding/spending etc from these accounts.","title":"Mainnet Genesis Rehersal"},{"location":"chains/nillion/testnet/nillion-genesis-test-1/#meta","text":"Chain-ID: nillion-genesis-test-1 Chain-Repo: github.com/NillionNetwork/nilchain Networks-Repo: github.com/NillionNetwork/networks Tag: 0.2.3 Denom: nil/unil","title":"Meta"},{"location":"chains/nillion/testnet/nillion-genesis-test-1/#specifications","text":"The recommended hardware specifications for a node are the same as the testnet: 8-core, x86-64 architecture processor 16 GB RAM 500GB of SSD storage Network of 500 MB/s+","title":"Specifications"},{"location":"chains/nillion/testnet/nillion-genesis-test-1/#schedule","text":"6th Jan: rehearsal repo available with instructions 6th to 10th Jan: submission of gentx to the repo via PR 13th to 14th Jan: final genesis file available on the repo - spin up nodes to wait for genesis 15th Jan: genesis 15th to 24th Jan: testing","title":"Schedule"},{"location":"chains/nillion/testnet/nillion-genesis-test-1/validator-address/","text":"Address: [30 217 196 201 229 76 186 156 144 155 58 207 56 26 245 13 90 219 138 255] Address (hex): 1ED9C4C9E54CBA9C909B3ACF381AF50D5ADB8AFF Bech32 Acc: nillion1rmvufj09fjafeyym8t8nsxh4p4ddhzhl53ggar Bech32 Val: nillionvaloper1rmvufj09fjafeyym8t8nsxh4p4ddhzhl68elma","title":"Validator address"},{"location":"chains/nillion/testnet/nillion-genesis-test-1/validator-mnemonic/","text":"waste capital prevent saddle vast riot sustain shock solid wait harbor merge crowd forest situate alley pave object discover surprise plunge rice protect hungry waste capital prevent saddle vast riot sustain shock solid wait harbor merge crowd forest situate alley pave object discover surprise plunge rice protect hungry waste capital prevent saddle vast riot sustain shock solid wait harbor merge crowd forest situate alley pave object discover surprise plunge rice protect hungry waste capital prevent saddle vast riot sustain shock solid wait harbor merge crowd forest situate alley pave object discover surprise plunge rice protect hungry","title":"Validator mnemonic"},{"location":"chains/nillion/testnet/nillion-genesis-test-1/validator/","text":"./nilchaind keys add Cosmostation \ue0b2 1 \u2718 - address: nillion1rmvufj09fjafeyym8t8nsxh4p4ddhzhl53ggar name: Cosmostation pubkey: '{\"@type\":\"/cosmos.crypto.secp256k1.PubKey\",\"key\":\"AyvTzdG3EBFAZNKP1HnAWmZpA2L0wU4GBkCRB9MiCL7n\"}' type: local","title":"Validator"},{"location":"chains/nillion/testnet/nillion-genesis-test-1/grants/","text":"GRANTS Please create an account for the validator grant (this should be different to the account used for the validator itself). Submit the address as a PR to add the account to the grant_accounts. The test validator grants will be in the form of continuous vesting accounts that will be locked until 20th Jan and then vest until 24th Jan. validator_name grant_address Cosmostation nillion12ru7l0u6dghfr8jkfecns6qfx49z0y8m0tpgx4","title":"Index"},{"location":"chains/nillion/testnet/nillion-genesis-test-1/grants/#grants","text":"Please create an account for the validator grant (this should be different to the account used for the validator itself). Submit the address as a PR to add the account to the grant_accounts. The test validator grants will be in the form of continuous vesting accounts that will be locked until 20th Jan and then vest until 24th Jan. validator_name grant_address Cosmostation nillion12ru7l0u6dghfr8jkfecns6qfx49z0y8m0tpgx4","title":"GRANTS"},{"location":"chains/nillion/testnet/nillion-genesis-test-1/grants/grant-mnemonic/","text":"busy reform hedgehog sun diagram copper chapter sure useless brief kangaroo slab sing you claw gaze voice stand learn zone bright siege today practice busy reform hedgehog sun diagram copper chapter sure useless brief kangaroo slab sing you claw gaze voice stand learn zone bright siege today practice busy reform hedgehog sun diagram copper chapter sure useless brief kangaroo slab sing you claw gaze voice stand learn zone bright siege today practice busy reform hedgehog sun diagram copper chapter sure useless brief kangaroo slab sing you claw gaze voice stand learn zone bright siege today practice","title":"Grant mnemonic"},{"location":"chains/nillion/testnet/nillion-genesis-test-1/grants/grant/","text":"- address: nillion12ru7l0u6dghfr8jkfecns6qfx49z0y8m0tpgx4 name: grant pubkey: '{\"@type\":\"/cosmos.crypto.secp256k1.PubKey\",\"key\":\"AyrnqlddyDfYAhLX4l3IzZtEcanP26f7+t8xudhBlE4w\"}' type: local","title":"Grant"},{"location":"chains/noble/testnet/mnemonic/","text":"role - validator 24 words (cosmos default) dirt room total defense clarify dress tuition code decrease horror another benefit tongue stick industry ship enact swim ketchup double pigeon infant wish odor","title":"Mnemonic"},{"location":"chains/nyx/mainnet/nym-api/mnemonic/","text":"role - nym-api validator 24 words \uc601\uc77c\uc5d0\uac8c \ubb38\uc758","title":"Mnemonic"},{"location":"chains/onomy/testnet/onomy-testnet-2/mnemonic/","text":"role - validator 24 words (cosmos default) dirt room total defense clarify dress tuition code decrease horror another benefit tongue stick industry ship enact swim ketchup double pigeon infant wish odor role - orchstrator 24 words elder session coral nerve spatial ritual glow local draw spring diary stable square pass oak hamster observe buyer shock worth budget outside chapter mom","title":"Mnemonic"},{"location":"chains/onomy/testnet/onomy-testnet-3/mnemonic/","text":"role - validator 24 words \\ mechanic mushroom home share point patient claw smoke minute talent human coral enroll minor million pen below history paper lift empty wish sight share name: validator \\ type: local \\ address: onomy18cqszf97cspxnycjgucaetgrlwynus398h2rm5 \\ pubkey: '{\"@type\":\"/cosmos.crypto.secp256k1.PubKey\",\"key\":\"AswjMnH08Sh62edzb4XfCYOhPpOc/3kJd04DR8QKRb+z\"}' \\ mnemonic: \"\"","title":"Mnemonic"},{"location":"chains/pell/testnet/addresses/","text":"Account pell1ltu9unxxswnwde33md5h6nyuev020cureynqmx Operator pellvaloper1ltu9unxxswnwde33md5h6nyuev020curt9lt96 Consensus pellvalcons17reqtejun5qn0nc0je8puzfa6m46sw28rffkw2 Hex F0F205E65C9D0137CF0F964E1E093DD6EBA83947","title":"Addresses"},{"location":"chains/pell/testnet/mnemonic/","text":"pellcored keys add validator --keyring-backend test --home /data/node/.pellcored address: pell1ltu9unxxswnwde33md5h6nyuev020cureynqmx name: validator pubkey: '{\"@type\":\"/ethermint.crypto.v1.ethsecp256k1.PubKey\",\"key\":\"AiAsrekhINQNXTvN8ynN5GkFYSTZJNkzsmctTx+RCpDA\"}' type: local Important write this mnemonic phrase in a safe place. It is the only way to recover your account if you ever forget your password. option fetch fence believe item afraid lounge outdoor hill shine where summer purse august act empower soul spoil hover purpose panel brush jealous avoid","title":"Mnemonic"},{"location":"chains/pell/testnet/reference/","text":"docs \\ https://docs.pell.network/ github \\ https://github.com/0xPellNetwork/network-config onboarding instruction \\ https://pellnetwork.notion.site/Instructions-for-Starting-Pell-Node-Using-Binary-15a8da0ce44b80858248d26c461fd663 litepaper \\ https://pell.gitbook.io/pell-network-litepaper archive snapshot \\ https://service.josephtran.xyz/testnet/pell/snapshot/","title":"Reference"},{"location":"chains/pell/testnet/validator/","text":"validator.json { \"pubkey\": {\"@type\":\"/cosmos.crypto.ed25519.PubKey\",\"key\":\"3eG69eJwT3KAZ+O3T5oeVqMy946jJXt9GknavlINZNg=\"}, \"amount\": \"100000000000000000000apell\", \"moniker\": \"Cosmostation\", \"identity\": \"AE4C403A6E7AA1AC\", \"website\": \"https://www.cosmostation.io\", \"security\": \"node@stamper.network\", \"details\": \"Cosmostation is an institutional-grade cryptocurrency infrastructure provider, managing billions of dollars across 70 protocols. Since 2018, we have served more than 500k users globally, providing products that enable protocols to scale\", \"commission-rate\": \"0.1\", \"commission-max-rate\": \"0.2\", \"commission-max-change-rate\": \"0.01\", \"min-self-delegation\": \"1\" } create-validator pellcored tx staking create-validator /home/pell/infra-organizer/scripts/validator.json --from validator --home /data/node/.pellcored --keyring-backend test --node http://localhost:59502 --chain-id ignite_186-1 --fees=0.000001pell --gas=1000000 txhash: 3FBC898124621D9D99F4ADEE1673246E2E510A87FF9C35B735AF4A25EF450F9C https://testnet.pell.explorers.guru/transaction/3FBC898124621D9D99F4ADEE1673246E2E510A87FF9C35B735AF4A25EF450F9C check validator pellcored keys show validator --bech val -a --home /data/node/.pellcored --keyring-backend test -> pellvaloper1ltu9unxxswnwde33md5h6nyuev020curt9lt96","title":"Validator"},{"location":"chains/saga/testnet/mnemonic/","text":"role - validator 24 words (cosmos default) dirt room total defense clarify dress tuition code decrease horror another benefit tongue stick industry ship enact swim ketchup double pigeon infant wish odor","title":"Mnemonic"},{"location":"chains/sui/sui/","text":"sui sui\uc5d0 \ud544\uc694\ud55c \ubc29\ud654\ubcbd\uc744 \uc815\ub9ac \ub300\uc0c1 \uac80\uc99d\uc778 To Action From comment ---------------------------------------------------------------------- 8080 ALLOW Anywhere # sui-node protocol/transaction interface 8081 ALLOW Anywhere # sui-node narwhal primary interface 8082 ALLOW Anywhere # sui-node narwhal worker interface 8083 ALLOW Anywhere # sui-node narwhal interface 8084 ALLOW Anywhere # sui-node p2p 8080 (v6) ALLOW Anywhere (v6) # sui-node protocol/transaction interface 8081 (v6) ALLOW Anywhere (v6) # sui-node narwhal primary interface 8082 (v6) ALLOW Anywhere (v6) # sui-node narwhal worker interface 8083 (v6) ALLOW Anywhere (v6) # sui-node narwhal interface 8084 (v6) ALLOW Anywhere (v6) # sui-node p2p \ud480\ub178\ub4dc \uacf5\ud1b5 sudo ufw allow from any to any port 8080 comment \"sui-node protocol/transaction interface\" sudo ufw allow from any to any port 8081 comment \"sui-node narwhal primary interface\" sudo ufw allow from any to any port 8082 comment \"sui-node narwhal worker interface\" sudo ufw allow from any to any port 8083 comment \"sui-node narwhal interface\" sudo ufw allow from any to any port 8084 comment \"sui-node p2p\" \ud480\ub178\ub4dc allow http/https","title":"sui"},{"location":"chains/sui/sui/#sui","text":"sui\uc5d0 \ud544\uc694\ud55c \ubc29\ud654\ubcbd\uc744 \uc815\ub9ac","title":"sui"},{"location":"chains/sui/sui/#_1","text":"\uac80\uc99d\uc778 To Action From comment ---------------------------------------------------------------------- 8080 ALLOW Anywhere # sui-node protocol/transaction interface 8081 ALLOW Anywhere # sui-node narwhal primary interface 8082 ALLOW Anywhere # sui-node narwhal worker interface 8083 ALLOW Anywhere # sui-node narwhal interface 8084 ALLOW Anywhere # sui-node p2p 8080 (v6) ALLOW Anywhere (v6) # sui-node protocol/transaction interface 8081 (v6) ALLOW Anywhere (v6) # sui-node narwhal primary interface 8082 (v6) ALLOW Anywhere (v6) # sui-node narwhal worker interface 8083 (v6) ALLOW Anywhere (v6) # sui-node narwhal interface 8084 (v6) ALLOW Anywhere (v6) # sui-node p2p \ud480\ub178\ub4dc","title":"\ub300\uc0c1"},{"location":"chains/sui/sui/#_2","text":"sudo ufw allow from any to any port 8080 comment \"sui-node protocol/transaction interface\" sudo ufw allow from any to any port 8081 comment \"sui-node narwhal primary interface\" sudo ufw allow from any to any port 8082 comment \"sui-node narwhal worker interface\" sudo ufw allow from any to any port 8083 comment \"sui-node narwhal interface\" sudo ufw allow from any to any port 8084 comment \"sui-node p2p\"","title":"\uacf5\ud1b5"},{"location":"chains/sui/sui/#_3","text":"allow http/https","title":"\ud480\ub178\ub4dc"},{"location":"chains/sui/mainnet/bridge/bridge-validator-key/","text":"XhjjfFAMJR90ke/1f7ZGQuVHyaZqx7JTQQF8hide5RA=","title":"Bridge validator key"},{"location":"chains/sui/mainnet/bridge/config/","text":"#the port that Bridge Node listens to handle requests server-listen-port: 9191 #port to export prometheus metrics, default=9184 metrics-port: 9183 #the path to the bridge validator key (bridge-validator.key) bridge-authority-key-path: /home/sui/infra-organizer/config/bridge-validator.key #if Bridge Client should be enabled in Bridge Node #run-client: false run-client: true db-path: /data/node/.sui-bridge/client_db approved-governance-actions: - AddTokensOnSuiAction: nonce: 0 chain_id: SuiMainnet native: false token_ids: - 2 token_type_names: - struct: address: 0xd0e89b2af5e4910726fbcd8b8dd37bb79b29e5f83f7491bca830e94f7f226d29 module: eth name: ETH type_args: [] token_prices: - 260000000000 - LimitUpdateAction: nonce: 0 chain_id: SuiMainnet sending_chain_id: EthMainnet new_usd_limit: 800000000000000 sui: sui-rpc-url: http://148.113.161.78:9000 sui-bridge-chain-id: 0 # mainnet eth: eth-rpc-url: http://222.106.187.14:11001 #p-office5-seoul-node-ethereum-mainnet-geth eth-bridge-proxy-address: \"0xda3bD1fE1973470312db04551B65f401Bc8a92fD\" eth-bridge-chain-id: 10 # Ethereum mainnet eth-contracts-start-block-fallback: 20811249 #metrics-key-pair: AE/QojW9wQrNlB3GVNI/ZeB83jfYXVxc/inTEvRUtQWa metrics-key-pair: uDFLatQIcMDsumDC0C8oU2Z2RBY9mzU9LUsXT1HzOUw= metrics: push-interval-seconds: 60 push-url: https://metrics-proxy.mainnet.sui.io:8443/publish/metrics watchdog-config: total-supplies: { \"eth\": \"0xd0e89b2af5e4910726fbcd8b8dd37bb79b29e5f83f7491bca830e94f7f226d29::eth::ETH\" }","title":"Config"},{"location":"chains/sui/mainnet/bridge/sui-bridge-service/","text":"[Unit] Description=Sui Bridge Node After=network.target [Service] User=sui Group=sui LimitNOFILE=1400000 Restart=always RestartSec=3 WorkingDirectory=/home/sui/infra-organizer/cmd ExecStart=/home/sui/bin/sui-bridge --config-path /home/sui/infra-organizer/config/config.yaml Environment=RUST_LOG=info Environment=RUST_BACKTRACE=full Environment=sui_bridge=debug # make sure log directory exists and owned by syslog PermissionsStartOnly=true ExecStartPre=/bin/mkdir -p /var/log/sui-bridge ExecStartPre=/bin/chown syslog:adm /var/log/sui-bridge ExecStartPre=/bin/chmod 755 /var/log/sui-bridge StandardOutput=syslog StandardError=syslog SyslogIdentifier=sui-bridge [Install] WantedBy=multi-user.target","title":"Sui bridge service"},{"location":"chains/union/testnet/addresses/","text":"Addresses Account union1x5wgh6vwye60wv3dtshs9dmqggwfx2ldehd3z7 Operator unionvaloper1x5wgh6vwye60wv3dtshs9dmqggwfx2ldgely0h Consensus unionvalcons1aw95mfttjssnzs3dzgp5urkk9wccn2wmcedjze Hex EB8B4DA56B942131422D12034E0ED62BB189A9DB - address: union1x5wgh6vwye60wv3dtshs9dmqggwfx2ldehd3z7 name: validator pubkey: '{\"@type\":\"/cosmos.crypto.secp256k1.PubKey\",\"key\":\"AnDGSF7VFQs9VKEceS6cWhfajxh/mmv+Mbu9bCM9BDzK\"}' type: local","title":"Addresses"},{"location":"chains/union/testnet/addresses/#addresses","text":"Account union1x5wgh6vwye60wv3dtshs9dmqggwfx2ldehd3z7 Operator unionvaloper1x5wgh6vwye60wv3dtshs9dmqggwfx2ldgely0h Consensus unionvalcons1aw95mfttjssnzs3dzgp5urkk9wccn2wmcedjze Hex EB8B4DA56B942131422D12034E0ED62BB189A9DB - address: union1x5wgh6vwye60wv3dtshs9dmqggwfx2ldehd3z7 name: validator pubkey: '{\"@type\":\"/cosmos.crypto.secp256k1.PubKey\",\"key\":\"AnDGSF7VFQs9VKEceS6cWhfajxh/mmv+Mbu9bCM9BDzK\"}' type: local","title":"Addresses"},{"location":"chains/union/testnet/mnemonics/","text":"mnemonic for union-testnet-6 dirt room total defense clarify dress tuition code decrease horror another benefit tongue stick industry ship enact swim ketchup double pigeon infant wish odor dirt room total defense clarify dress tuition code decrease horror another benefit tongue stick industry ship enact swim ketchup double pigeon infant wish odor dirt room total defense clarify dress tuition code decrease horror another benefit tongue stick industry ship enact swim ketchup double pigeon infant wish odor dirt room total defense clarify dress tuition code decrease horror another benefit tongue stick industry ship enact swim ketchup double pigeon infant wish odor","title":"Mnemonics"},{"location":"chains/union/testnet/mnemonics/#mnemonic-for-union-testnet-6","text":"dirt room total defense clarify dress tuition code decrease horror another benefit tongue stick industry ship enact swim ketchup double pigeon infant wish odor dirt room total defense clarify dress tuition code decrease horror another benefit tongue stick industry ship enact swim ketchup double pigeon infant wish odor dirt room total defense clarify dress tuition code decrease horror another benefit tongue stick industry ship enact swim ketchup double pigeon infant wish odor dirt room total defense clarify dress tuition code decrease horror another benefit tongue stick industry ship enact swim ketchup double pigeon infant wish odor","title":"mnemonic for union-testnet-6"},{"location":"chains/union/testnet/union-testnet-9/addresses/","text":"Account union1x5wgh6vwye60wv3dtshs9dmqggwfx2ldehd3z7 Operator unionvaloper1x5wgh6vwye60wv3dtshs9dmqggwfx2ldgely0h Consensus unionvalcons1tzz26xqwqshnrhskyjjvgstt0fna9gqqr0j9a4 Hex 5884AD180E042F31DE1624A4C4416B7A67D2A000","title":"Addresses"},{"location":"chains/union/testnet/union-testnet-9/possession_prove/","text":"./uniond prove-possession obxoRfQFN1vSYH9HOrLmSy9scNoHNJtDc8R+TL1WULwog+4fnNf0vp9Q6wd81xssm0g/u/1JiMN6ousZgandHA== 8475154A02080CD494138DD415791B985B513A50DF3F42BBBDC7C5C78C84EEB211C65010A8523F46186AB0C597C474137747AEAD55FE3DCF26D08A1DED515AD7","title":"Possession prove"},{"location":"chains/walrus/testnet/","text":"Walrus server specifications: AMD EPYC 4344P - 8c/16t - 3.8GHz/5.3GHz 64GB DDR5 5200MHz 15.36TB (4x3.84TB SSD NVMe Soft RAID) 1Gbit/s France - RBX ubuntu 24.04 LTS","title":"Index"},{"location":"chains/walrus/testnet/2nd-testnet/","text":"Testnet redeployment Original announcement: reference: https://discord.com/channels/946098997637042178/1272429097938718813/1328786065376673842 As promised last Friday, we have compiled instructions for the first phase of the Testnet redeployment. You can find them in the usual Google Doc. You should already have access to that document; if not, please ask @Amogh or request access in the document itself. For existing nodes, the setup should only take five minutes. For new nodes, it will take a bit longer depending on whether they have already set up their OS. In any case, please make sure to adhere to the deadline: Thursday, January 16, 8:00 AM UTC. As usual, ask questions in the storage-node-chat channel; someone from the Walrus team will help you. You should also be able to add comments on the document itself.","title":"Index"},{"location":"chains/walrus/testnet/2nd-testnet/#testnet-redeployment","text":"Original announcement: reference: https://discord.com/channels/946098997637042178/1272429097938718813/1328786065376673842 As promised last Friday, we have compiled instructions for the first phase of the Testnet redeployment. You can find them in the usual Google Doc. You should already have access to that document; if not, please ask @Amogh or request access in the document itself. For existing nodes, the setup should only take five minutes. For new nodes, it will take a bit longer depending on whether they have already set up their OS. In any case, please make sure to adhere to the deadline: Thursday, January 16, 8:00 AM UTC. As usual, ask questions in the storage-node-chat channel; someone from the Walrus team will help you. You should also be able to add comments on the document itself.","title":"Testnet redeployment"},{"location":"chains/walrus/testnet/2nd-testnet/instructions/","text":"[External] Walrus testnet v2 deployment instructions Phase 0: preparation Important comments Instructions differ slightly depending on whether you are already participating in the Walrus Testnet v1 (existing node) or are freshly joining Testnet v2 (new node). If you deviate from the standard setup below (user, directories, ports), make sure to adjust later steps accordingly. Note that the Walrus and Sui configuration files include some absolute paths, so simply moving files without adjusting those may cause issues. TLS keys and (self-signed) certificates are set up automatically for the storage node. Do not deploy a reverse proxy with TLS termination in front of the storage node. The instructions below only cover the storage node. New nodes are not expected to set up aggregators/publishers; existing nodes only need to make minor adjustments when switching to the new Testnet. Existing nodes should not turn off their running services at this point. You do not have to start any services at this point. There will be some additional tasks on Thursday before starting the nodes. Please complete all steps by Thursday, January 16, 8:00 UTC. If you run into any issues, please let us know on Discord. Existing nodes Create temporary directories to set up the new configuration. These directories will be renamed/moved to the standard location during the migration on Thursday. Details will be provided there. sudo install -d -o walrus -g walrus -m 0755 /opt/walrus-tmp /opt/walrus-tmp/config /opt/walrus-tmp/bin /opt/walrus-tmp/db Run all the following commands as the walrus user: sudo su walrus Run export WALRUS_DIR=\"/opt/walrus-tmp\" Continue with the instructions for everyone below. Everyone Make sure you are the walrus user and the $WALRUS_DIR variable is set: whoami ; echo $WALRUS_DIR Download the walrus-node binary, make it executable, and store it in the created bin directory: cd $WALRUS_DIR/bin curl -L https://storage.googleapis.com/mysten-walrus-binaries/walrus-node-v1.9.0-3571c37-ubuntu-x86_64 -o walrus-node chmod 0755 walrus-node Check the version of the binary: ./walrus-node -V; this should output walrus-node 1.9.0-3571c3744a64. Generate the node configuration and Sui wallet: Use the full capacity of the large disk for the NODE_CAPACITY. Make sure to set the server name to the public hostname (DNS name or IP address) correctly (this is needed for TLS authentication): You can optionally add metadata about your node with the --image-url, --project-url, and --description options; see $WALRUS_DIR/bin/walrus-node setup --help for a full description of all options. Warnings like \"WARN walrus_node::commands: no system object provided; please replace the dummy value in the config file manually\" are expected; the corresponding values are going to be provided on Thursday. SERVER_NAME= # use your DNS name or public IP address # check the _external_ IP address of the current machine; if you do _not_ use DNS, this should be your SERVER_NAME curl ifconfig.me # if you _do_ use DNS, check that your SERVER_NAME resolves to the public IP address above dig +short $SERVER_NAME # make sure the $SERVER_NAME and $WALRUS_DIR variables are still set from the previous commands NODE_CAPACITY= # can be specified in terabytes (e.g., '3.14TB), tebibytes (e.g., 2.718TiB), or the corresponding for giga, mega, etc. NODE_NAME=\"\" # this can be an arbitrary string identifying your node (including white space); make sure to include your entity name in some form PUBLIC_PORT=9185 # change this if you deviated from the defaults or use a reverse proxy; make sure the reverse proxy does not terminate the TLS connection $WALRUS_DIR/bin/walrus-node setup \\ --config-directory $WALRUS_DIR/config \\ --storage-path $WALRUS_DIR/db \\ --sui-rpc https://mysten-rpc.testnet.sui.io:443 \\ --node-capacity \"$NODE_CAPACITY\" \\ --public-host $SERVER_NAME \\ --public-port $PUBLIC_PORT \\ --name \"$NODE_NAME\" \\ --registering-third-party 0x82c175d88f488e95d9837b15b2c761ebc74008aa5f1331d3b0dd5c511b739d22 Do a quick sanity check on the generated configuration files ($WALRUS_DIR/config/walrus-node.yaml), $WALRUS_DIR/config/registration-params.yaml) regarding IP addresses, DNS names, port numbers, file paths. Adapt and re-execute the setup command if you are unhappy with the configuration (either wipe the config directory or use the --force flag). Upload your registration-params.yaml file to https://app.tusky.io/vaults/f25fb718-ebdf-4714-bd8e-9189f74d4e6e/assets#sharingKey=c3VpcHJpdmtleTFxcmw5Y2tobHp1d2E0cm13bHR4MmEyYWFwd3A3dzN0NnF2am5jbnQ3c3M5N2NkeXgzODZzdzg1M2ZnNw==&password=OXZvbHlxLXF1d2J5Yi1HZWhoeXc= (name it registration-params_ .yaml). Phase 1: setup/migration Important comments Existing nodes Stop the node: sudo systemctl stop walrus-node.service. Wipe the database: sudo rm -rf /opt/walrus/db/*. If you want, back up your wallet files from /opt/walrus/config (optional). Run the following commands as the walrus user: sudo su walrus Fix absolute paths in new config files: sed -i 's|/opt/walrus-tmp|/opt/walrus|' /opt/walrus-tmp/config/*.yaml Copy new config files to /opt/walrus/config: cd /opt/walrus-tmp/config cp network.key protocol.key sui.aliases sui_config.yaml sui.keystore walrus-node.yaml /opt/walrus/config/ Delete the temporary /opt/walrus-tmp directory: rm -rf /opt/walrus-tmp Everyone Edit the /opt/walrus/config/walrus-node.yaml file: Set the system and staking objects correctly (replacing the dummy 0x0000\u2026 values): aiignore sui: ... system_object: 0x98ebc47370603fe81d9e15491b2f1443d619d1dab720d586e429ed233e1255c1 staking_object: 0x20266a17b4f1a216727f3eef5772f8d486a9e3b5e319af80a5b75809c035561d Add the following metrics configuration: aiignore metrics_push: push_url: https://walrus-metrics-testnet.mystenlabs.com/publish/metrics Double-check that the node's large drive is mounted to /opt/walrus/db and is empty: lsblk && ls /opt/walrus/db Download the latest walrus-node binary: sudo su walrus cd /opt/walrus/bin curl -L https://storage.googleapis.com/mysten-walrus-binaries/walrus-node-testnet-latest-ubuntu-x86_64 -o walrus-node chmod 0755 walrus-node Check the version of the binary: /opt/walrus/bin/walrus-node -V; this should output walrus-node 1.9.5-7c541a49119c. Start the Walrus node Ensure the node is running: sudo systemctl status walrus-node.service and/or journalctl -efu walrus-node. Before the epoch 1 is started, you may see error messages like \"message\":\"unable to push metrics\",\"error\":\"metrics push failed: [403 Forbidden]:unknown clients are not allowed This is expected as your node is not part of the committee yet and is therefore not allowed to send metrics to our metrics proxy. Check the node's health endpoint (ideally from a different machine to ensure the firewall is also configured correctly): curl -k https:// /v1/health | jq This should return a 200 status with a non-empty JSON payload. The nodeStatus should be Standby or Active. (Make sure to use https and the -k flag as the node expects connections via TLS using internally generated certificates.) Phase 2: monitoring and maintenance Important metrics to watch The simplest metrics to watch for node health are walrus_event_cursor_progress and event_processor_latest_downloaded_checkpoint. These should be (more-or-less) continuously increasing. If they don\u2019t increase for more than ~10 minutes, something is likely wrong, and you should take a look at the log to see if there are warnings or errors (journalctl -efu walrus-node). Other metrics like walrus_storage_confirmations_issued_total should also increase regularly, but those depend on user actions, so this cannot be guaranteed. Community-provided monitoring tools Several community members have created tools for monitoring Walrus services: One-stop Prometheus/Grafana setup created by BartestneT: https://github.com/bartosian/walrus-tools Monitoring tool created by Blockscope.net: https://gitlab.com/blockscope-net/walrus-seal Public aggregator dashboard created by Nodeinfra: https://walrus-latency.nodeinfra.com Update the on-chain data of a storage node The storage node does not yet automatically update its on-chain data based on the config file. If you do need to change anything, you need to do this manually with the Sui CLI. Please still update the data in the config file because the node behavior will change in the future. The following snippet contains the most common changes; see the contracts for other functions that can be called. # Install Sui CLI VERSION=testnet-v1.40.2 # TODO: Change to the latest Sui Testnet release curl -L https://github.com/MystenLabs/sui/releases/download/$VERSION/sui-$VERSION-ubuntu-x86_64.tgz | tar xvz ./sui # Set common parameters PACKAGE=0x795ddbc26b8cfff2551f45e198b87fc19473f2df50f995376b924ac80e56f88b STAKING_OBJECT=0x20266a17b4f1a216727f3eef5772f8d486a9e3b5e319af80a5b75809c035561d STORAGE_NODE_CAP_OBJECT=$(./sui client --client.config /opt/walrus/config/sui_config.yaml objects --json | jq -r '.[] | select(.data.type|test(\"StorageNodeCap\")) | .data.objectId') # Change the node name NEW_NAME= # TODO: Set to the new name ./sui client --client.config /opt/walrus/config/sui_config.yaml call --function set_name --module staking --package $PACKAGE --gas-budget $GAS_BUDGET --args $STAKING_OBJECT $STORAGE_NODE_CAP_OBJECT \"$NEW_NAME\" # Change the node network address NETWORK_ADDRESS= # TODO: Set to the new address including port ./sui client --client.config /opt/walrus/config/sui_config.yaml call --function set_network_address --module staking --package $PACKAGE --gas-budget $GAS_BUDGET --args $STAKING_OBJECT $STORAGE_NODE_CAP_OBJECT \"$NETWORK_ADDRESS\" # Change the node capacity NODE_CAPACITY_BYTES= # TODO: Set to the new capacity in bytes ./sui client --client.config /opt/walrus/config/sui_config.yaml call --function set_node_capacity_vote --module staking --package $PACKAGE --gas-budget $GAS_BUDGET --args $STAKING_OBJECT $STORAGE_NODE_CAP_OBJECT $NODE_CAPACITY_BYTES","title":"[External] Walrus testnet v2 deployment instructions"},{"location":"chains/walrus/testnet/2nd-testnet/instructions/#external-walrus-testnet-v2-deployment-instructions","text":"","title":"[External] Walrus testnet v2 deployment instructions"},{"location":"chains/walrus/testnet/2nd-testnet/instructions/#phase-0-preparation","text":"","title":"Phase 0: preparation"},{"location":"chains/walrus/testnet/2nd-testnet/instructions/#important-comments","text":"Instructions differ slightly depending on whether you are already participating in the Walrus Testnet v1 (existing node) or are freshly joining Testnet v2 (new node). If you deviate from the standard setup below (user, directories, ports), make sure to adjust later steps accordingly. Note that the Walrus and Sui configuration files include some absolute paths, so simply moving files without adjusting those may cause issues. TLS keys and (self-signed) certificates are set up automatically for the storage node. Do not deploy a reverse proxy with TLS termination in front of the storage node. The instructions below only cover the storage node. New nodes are not expected to set up aggregators/publishers; existing nodes only need to make minor adjustments when switching to the new Testnet. Existing nodes should not turn off their running services at this point. You do not have to start any services at this point. There will be some additional tasks on Thursday before starting the nodes. Please complete all steps by Thursday, January 16, 8:00 UTC. If you run into any issues, please let us know on Discord.","title":"Important comments"},{"location":"chains/walrus/testnet/2nd-testnet/instructions/#existing-nodes","text":"Create temporary directories to set up the new configuration. These directories will be renamed/moved to the standard location during the migration on Thursday. Details will be provided there. sudo install -d -o walrus -g walrus -m 0755 /opt/walrus-tmp /opt/walrus-tmp/config /opt/walrus-tmp/bin /opt/walrus-tmp/db Run all the following commands as the walrus user: sudo su walrus Run export WALRUS_DIR=\"/opt/walrus-tmp\" Continue with the instructions for everyone below.","title":"Existing nodes"},{"location":"chains/walrus/testnet/2nd-testnet/instructions/#everyone","text":"Make sure you are the walrus user and the $WALRUS_DIR variable is set: whoami ; echo $WALRUS_DIR Download the walrus-node binary, make it executable, and store it in the created bin directory: cd $WALRUS_DIR/bin curl -L https://storage.googleapis.com/mysten-walrus-binaries/walrus-node-v1.9.0-3571c37-ubuntu-x86_64 -o walrus-node chmod 0755 walrus-node Check the version of the binary: ./walrus-node -V; this should output walrus-node 1.9.0-3571c3744a64. Generate the node configuration and Sui wallet: Use the full capacity of the large disk for the NODE_CAPACITY. Make sure to set the server name to the public hostname (DNS name or IP address) correctly (this is needed for TLS authentication): You can optionally add metadata about your node with the --image-url, --project-url, and --description options; see $WALRUS_DIR/bin/walrus-node setup --help for a full description of all options. Warnings like \"WARN walrus_node::commands: no system object provided; please replace the dummy value in the config file manually\" are expected; the corresponding values are going to be provided on Thursday. SERVER_NAME= # use your DNS name or public IP address # check the _external_ IP address of the current machine; if you do _not_ use DNS, this should be your SERVER_NAME curl ifconfig.me # if you _do_ use DNS, check that your SERVER_NAME resolves to the public IP address above dig +short $SERVER_NAME # make sure the $SERVER_NAME and $WALRUS_DIR variables are still set from the previous commands NODE_CAPACITY= # can be specified in terabytes (e.g., '3.14TB), tebibytes (e.g., 2.718TiB), or the corresponding for giga, mega, etc. NODE_NAME=\"\" # this can be an arbitrary string identifying your node (including white space); make sure to include your entity name in some form PUBLIC_PORT=9185 # change this if you deviated from the defaults or use a reverse proxy; make sure the reverse proxy does not terminate the TLS connection $WALRUS_DIR/bin/walrus-node setup \\ --config-directory $WALRUS_DIR/config \\ --storage-path $WALRUS_DIR/db \\ --sui-rpc https://mysten-rpc.testnet.sui.io:443 \\ --node-capacity \"$NODE_CAPACITY\" \\ --public-host $SERVER_NAME \\ --public-port $PUBLIC_PORT \\ --name \"$NODE_NAME\" \\ --registering-third-party 0x82c175d88f488e95d9837b15b2c761ebc74008aa5f1331d3b0dd5c511b739d22 Do a quick sanity check on the generated configuration files ($WALRUS_DIR/config/walrus-node.yaml), $WALRUS_DIR/config/registration-params.yaml) regarding IP addresses, DNS names, port numbers, file paths. Adapt and re-execute the setup command if you are unhappy with the configuration (either wipe the config directory or use the --force flag). Upload your registration-params.yaml file to https://app.tusky.io/vaults/f25fb718-ebdf-4714-bd8e-9189f74d4e6e/assets#sharingKey=c3VpcHJpdmtleTFxcmw5Y2tobHp1d2E0cm13bHR4MmEyYWFwd3A3dzN0NnF2am5jbnQ3c3M5N2NkeXgzODZzdzg1M2ZnNw==&password=OXZvbHlxLXF1d2J5Yi1HZWhoeXc= (name it registration-params_ .yaml).","title":"Everyone"},{"location":"chains/walrus/testnet/2nd-testnet/instructions/#phase-1-setupmigration","text":"","title":"Phase 1: setup/migration"},{"location":"chains/walrus/testnet/2nd-testnet/instructions/#important-comments_1","text":"","title":"Important comments"},{"location":"chains/walrus/testnet/2nd-testnet/instructions/#existing-nodes_1","text":"Stop the node: sudo systemctl stop walrus-node.service. Wipe the database: sudo rm -rf /opt/walrus/db/*. If you want, back up your wallet files from /opt/walrus/config (optional). Run the following commands as the walrus user: sudo su walrus Fix absolute paths in new config files: sed -i 's|/opt/walrus-tmp|/opt/walrus|' /opt/walrus-tmp/config/*.yaml Copy new config files to /opt/walrus/config: cd /opt/walrus-tmp/config cp network.key protocol.key sui.aliases sui_config.yaml sui.keystore walrus-node.yaml /opt/walrus/config/ Delete the temporary /opt/walrus-tmp directory: rm -rf /opt/walrus-tmp","title":"Existing nodes"},{"location":"chains/walrus/testnet/2nd-testnet/instructions/#everyone_1","text":"Edit the /opt/walrus/config/walrus-node.yaml file: Set the system and staking objects correctly (replacing the dummy 0x0000\u2026 values): aiignore sui: ... system_object: 0x98ebc47370603fe81d9e15491b2f1443d619d1dab720d586e429ed233e1255c1 staking_object: 0x20266a17b4f1a216727f3eef5772f8d486a9e3b5e319af80a5b75809c035561d Add the following metrics configuration: aiignore metrics_push: push_url: https://walrus-metrics-testnet.mystenlabs.com/publish/metrics Double-check that the node's large drive is mounted to /opt/walrus/db and is empty: lsblk && ls /opt/walrus/db Download the latest walrus-node binary: sudo su walrus cd /opt/walrus/bin curl -L https://storage.googleapis.com/mysten-walrus-binaries/walrus-node-testnet-latest-ubuntu-x86_64 -o walrus-node chmod 0755 walrus-node Check the version of the binary: /opt/walrus/bin/walrus-node -V; this should output walrus-node 1.9.5-7c541a49119c. Start the Walrus node Ensure the node is running: sudo systemctl status walrus-node.service and/or journalctl -efu walrus-node. Before the epoch 1 is started, you may see error messages like \"message\":\"unable to push metrics\",\"error\":\"metrics push failed: [403 Forbidden]:unknown clients are not allowed This is expected as your node is not part of the committee yet and is therefore not allowed to send metrics to our metrics proxy. Check the node's health endpoint (ideally from a different machine to ensure the firewall is also configured correctly): curl -k https:// /v1/health | jq This should return a 200 status with a non-empty JSON payload. The nodeStatus should be Standby or Active. (Make sure to use https and the -k flag as the node expects connections via TLS using internally generated certificates.)","title":"Everyone"},{"location":"chains/walrus/testnet/2nd-testnet/instructions/#phase-2-monitoring-and-maintenance","text":"","title":"Phase 2: monitoring and maintenance"},{"location":"chains/walrus/testnet/2nd-testnet/instructions/#important-metrics-to-watch","text":"The simplest metrics to watch for node health are walrus_event_cursor_progress and event_processor_latest_downloaded_checkpoint. These should be (more-or-less) continuously increasing. If they don\u2019t increase for more than ~10 minutes, something is likely wrong, and you should take a look at the log to see if there are warnings or errors (journalctl -efu walrus-node). Other metrics like walrus_storage_confirmations_issued_total should also increase regularly, but those depend on user actions, so this cannot be guaranteed.","title":"Important metrics to watch"},{"location":"chains/walrus/testnet/2nd-testnet/instructions/#community-provided-monitoring-tools","text":"Several community members have created tools for monitoring Walrus services: One-stop Prometheus/Grafana setup created by BartestneT: https://github.com/bartosian/walrus-tools Monitoring tool created by Blockscope.net: https://gitlab.com/blockscope-net/walrus-seal Public aggregator dashboard created by Nodeinfra: https://walrus-latency.nodeinfra.com","title":"Community-provided monitoring tools"},{"location":"chains/walrus/testnet/2nd-testnet/instructions/#update-the-on-chain-data-of-a-storage-node","text":"The storage node does not yet automatically update its on-chain data based on the config file. If you do need to change anything, you need to do this manually with the Sui CLI. Please still update the data in the config file because the node behavior will change in the future. The following snippet contains the most common changes; see the contracts for other functions that can be called. # Install Sui CLI VERSION=testnet-v1.40.2 # TODO: Change to the latest Sui Testnet release curl -L https://github.com/MystenLabs/sui/releases/download/$VERSION/sui-$VERSION-ubuntu-x86_64.tgz | tar xvz ./sui # Set common parameters PACKAGE=0x795ddbc26b8cfff2551f45e198b87fc19473f2df50f995376b924ac80e56f88b STAKING_OBJECT=0x20266a17b4f1a216727f3eef5772f8d486a9e3b5e319af80a5b75809c035561d STORAGE_NODE_CAP_OBJECT=$(./sui client --client.config /opt/walrus/config/sui_config.yaml objects --json | jq -r '.[] | select(.data.type|test(\"StorageNodeCap\")) | .data.objectId') # Change the node name NEW_NAME= # TODO: Set to the new name ./sui client --client.config /opt/walrus/config/sui_config.yaml call --function set_name --module staking --package $PACKAGE --gas-budget $GAS_BUDGET --args $STAKING_OBJECT $STORAGE_NODE_CAP_OBJECT \"$NEW_NAME\" # Change the node network address NETWORK_ADDRESS= # TODO: Set to the new address including port ./sui client --client.config /opt/walrus/config/sui_config.yaml call --function set_network_address --module staking --package $PACKAGE --gas-budget $GAS_BUDGET --args $STAKING_OBJECT $STORAGE_NODE_CAP_OBJECT \"$NETWORK_ADDRESS\" # Change the node capacity NODE_CAPACITY_BYTES= # TODO: Set to the new capacity in bytes ./sui client --client.config /opt/walrus/config/sui_config.yaml call --function set_node_capacity_vote --module staking --package $PACKAGE --gas-budget $GAS_BUDGET --args $STAKING_OBJECT $STORAGE_NODE_CAP_OBJECT $NODE_CAPACITY_BYTES","title":"Update the on-chain data of a storage node"},{"location":"chains/walrus/testnet/2nd-testnet/node-id/","text":"Node id walrus-testnet-scan 0x255e8a2aeed1f9b9a7d15350af924038ea1e06e9a795fb2f43ec955e2dd19a9c 0x255e8a2aeed1f9b9a7d15350af924038ea1e06e9a795fb2f43ec955e2dd19a9c 0x255e8a2aeed1f9b9a7d15350af924038ea1e06e9a795fb2f43ec955e2dd19a9c The node id is the Sui object id of the staking object that corresponding to the storage node. Reference: Discord LINK The node_id is the object id of the staking pool associated with your node. This is assigned automatically and you cannot change it. Reference: Discord LINK","title":"Node id"},{"location":"chains/walrus/testnet/2nd-testnet/node-id/#node-id","text":"walrus-testnet-scan 0x255e8a2aeed1f9b9a7d15350af924038ea1e06e9a795fb2f43ec955e2dd19a9c 0x255e8a2aeed1f9b9a7d15350af924038ea1e06e9a795fb2f43ec955e2dd19a9c 0x255e8a2aeed1f9b9a7d15350af924038ea1e06e9a795fb2f43ec955e2dd19a9c The node id is the Sui object id of the staking object that corresponding to the storage node. Reference: Discord LINK The node_id is the object id of the staking pool associated with your node. This is assigned automatically and you cannot change it. Reference: Discord LINK","title":"Node id"},{"location":"chains/xion/testnet/xion-testnet-1/create-validator/","text":"create validator xiond tx staking create-validator /home/xion/infra-organizer/scripts/validator.json --from validator --home /data/node/.xiond --keyring-backend test --node http://localhost:59102 --chain-id xion-testnet-1 --fees 3500uxion --gas auto --gas-adjustment 1.2 gas estimate: 252140 auth_info: fee: amount: - amount: \"3500\" denom: uxion gas_limit: \"252140\" granter: \"\" payer: \"\" signer_infos: [] tip: null body: extension_options: [] memo: \"\" messages: - '@type': /cosmos.staking.v1beta1.MsgCreateValidator commission: max_change_rate: \"0.010000000000000000\" max_rate: \"0.200000000000000000\" rate: \"0.100000000000000000\" delegator_address: \"\" description: details: Cosmostation is an institutional-grade cryptocurrency infrastructure provider, managing billions of dollars across 70 protocols. Since 2018, we have served more than 500k users globally, providing products that enable protocols to scale identity: AE4C403A6E7AA1AC moniker: Cosmostation security_contact: node@stamper.network website: https://www.cosmostation.io min_self_delegation: \"1\" pubkey: '@type': /cosmos.crypto.ed25519.PubKey key: LKwKvQPVTwxwW4UDpyIvGW8Sa9sUdaxhhhVdOigrEyA= validator_address: xionvaloper1x5wgh6vwye60wv3dtshs9dmqggwfx2ld62aajh value: amount: \"900000\" denom: uxion non_critical_extension_options: [] timeout_height: \"0\" signatures: [] confirm transaction before signing and broadcasting [y/N]: y code: 0 codespace: \"\" data: \"\" events: [] gas_used: \"0\" gas_wanted: \"0\" height: \"0\" info: \"\" logs: [] raw_log: \"\" timestamp: \"\" tx: null txhash: 6D7978BCB21A23621D304EBB83AC769DA91A5E000ADBB31EBEF633FA790696A4 delegate xiond tx staking delegate xionvaloper1x5wgh6vwye60wv3dtshs9dmqggwfx2ld62aajh 500000000uxion --from validator --chain-id=xion-testnet-1 --home /data/node/.xiond --keyring-backend test --node http://localhost:59102 active validator auth_info: fee: amount: [] gas_limit: \"200000\" granter: \"\" payer: \"\" signer_infos: [] tip: null body: extension_options: [] memo: \"\" messages: - '@type': /cosmos.staking.v1beta1.MsgDelegate amount: amount: \"500000000\" denom: uxion delegator_address: xion1x5wgh6vwye60wv3dtshs9dmqggwfx2ld3fkm6y validator_address: xionvaloper1x5wgh6vwye60wv3dtshs9dmqggwfx2ld62aajh non_critical_extension_options: [] timeout_height: \"0\" signatures: [] confirm transaction before signing and broadcasting [y/N]: y code: 0 codespace: \"\" data: \"\" events: [] gas_used: \"0\" gas_wanted: \"0\" height: \"0\" info: \"\" logs: [] raw_log: \"\" timestamp: \"\" tx: null txhash: DB7327E01CA625A69C8ED3AFB54F5813119F2CB18B297F67149C53EE3C1E3F8B log check Nov 30 03:17:18 s12309272 cosmovisor_xion-testnet-1[850261]: 3:17AM INF This node is a validator addr=01458B61F0D7DE6E90798FE8C370413D718EB34C module=consensus pubKey=PubKeyEd25519{2CAC0ABD03D54F0C705B8503A7222F196F126BDB1475AC6186155D3A282B1320}","title":"Create validator"},{"location":"chains/xion/testnet/xion-testnet-1/mnemonics/","text":"role - validator 24 words (cosmos default) dirt room total defense clarify dress tuition code decrease horror another benefit tongue stick industry ship enact swim ketchup double pigeon infant wish odor - address: xion1x5wgh6vwye60wv3dtshs9dmqggwfx2ld3fkm6y name: validator pubkey: '{\"@type\":\"/cosmos.crypto.secp256k1.PubKey\",\"key\":\"AnDGSF7VFQs9VKEceS6cWhfajxh/mmv+Mbu9bCM9BDzK\"}' type: local xiond debug addr xion1x5wgh6vwye60wv3dtshs9dmqggwfx2ld3fkm6y Address: [53 28 139 233 142 38 116 247 50 45 92 47 2 183 96 66 28 147 43 237] Address (hex): 351C8BE98E2674F7322D5C2F02B760421C932BED Bech32 Acc: xion1x5wgh6vwye60wv3dtshs9dmqggwfx2ld3fkm6y Bech32 Val: xionvaloper1x5wgh6vwye60wv3dtshs9dmqggwfx2ld62aajh Bech32 Con: xionvalcons1x5wgh6vwye60wv3dtshs9dmqggwfx2ldwewp7k xiond debug pubkey '{\"@type\":\"/cosmos.crypto.ed25519.PubKey\",\"key\":\"LKwKvQPVTwxwW4UDpyIvGW8Sa9sUdaxhhhVdOigrEyA=\"}' Address: 01458B61F0D7DE6E90798FE8C370413D718EB34C PubKey Hex: 2cac0abd03d54f0c705b8503a7222f196f126bdb1475ac6186155d3a282b1320","title":"Mnemonics"},{"location":"chains/xion/testnet/xion-testnet-1/unbonding/","text":"xiond tx staking unbond xionvaloper1x5wgh6vwye60wv3dtshs9dmqggwfx2ld62aajh 500000000uxion --from validator --chain-id=xion-testnet-1 --home /data/node/.xiond --keyring-backend test --node http://localhost:59102 --gas auto --gas-adjustment 1.5 --gas-prices 0.025uxionas auto --gas-adjustment 1.5 --gas-prices 0.025uxion gas estimate: 301627 auth_info: fee: amount: - amount: \"7541\" denom: uxion gas_limit: \"301627\" granter: \"\" payer: \"\" signer_infos: [] tip: null body: extension_options: [] memo: \"\" messages: - '@type': /cosmos.staking.v1beta1.MsgUndelegate amount: amount: \"500000000\" denom: uxion delegator_address: xion1x5wgh6vwye60wv3dtshs9dmqggwfx2ld3fkm6y validator_address: xionvaloper1x5wgh6vwye60wv3dtshs9dmqggwfx2ld62aajh non_critical_extension_options: [] timeout_height: \"0\" signatures: [] confirm transaction before signing and broadcasting [y/N]: y code: 0 codespace: \"\" data: \"\" events: [] gas_used: \"0\" gas_wanted: \"0\" height: \"0\" info: \"\" logs: [] raw_log: \"\" timestamp: \"\" tx: null txhash: A4409342BB1CF7BAA8529D038CAC144BF3A919D950FB586E111817EFD210FDAC","title":"Unbonding"},{"location":"chains/xion/testnet/xion-testnet-2/address/","text":"## Addresses Account Address xion14ulxskyywvt3t4etskvlwx545ksfgcfeu0gvsq Operator Address xionvaloper14ulxskyywvt3t4etskvlwx545ksfgcfehvr2cn Hex Address CA01E26940C0241A0EF2A56F5E4559E7C29AA068 Signer Address xionvalcons1egq7y62qcqjp5rhj54h4u32eulpf4grg5c8x47 Consensus Public Key { \"@type\": \"/cosmos.crypto.ed25519.PubKey\", \"key\": \"42sEuIGIHYBxspVXq1rSZbGB1F07JHLwBI1mK9UNcf8=\" }","title":"Address"},{"location":"chains/xion/testnet/xion-testnet-2/delegation/","text":"xiond tx staking delegate xionvaloper14ulxskyywvt3t4etskvlwx545ksfgcfehvr2cn 9000000uxion --from validator --home /data/node/.xiond --keyring-backend test --node http://localhost:59102 --chain-id xion-testnet-2 --fees 3500uxion --gas auto --gas-adjustment 1.2 -y gas estimate: 189795 code: 0 codespace: \"\" data: \"\" events: [] gas_used: \"0\" gas_wanted: \"0\" height: \"0\" info: \"\" logs: [] raw_log: \"\" timestamp: \"\" tx: null txhash: 2961B20FA6EC375A0E44E60DA74F103BCB6EBA643CCB89C673F461FABB68138B https://explorer.burnt.com/xion-testnet-2/tx/2961B20FA6EC375A0E44E60DA74F103BCB6EBA643CCB89C673F461FABB68138B xiond tx staking delegate xionvaloper14ulxskyywvt3t4etskvlwx545ksfgcfehvr2cn 89000uxion --from validator --home /data/node/.xiond --keyring-backend test --node http://localhost:59102 --chain-id xion-testnet-2 --fees 3500uxion --gas auto --gas-adjustment 1.2 -y gas estimate: 213846 code: 0 codespace: \"\" data: \"\" events: [] gas_used: \"0\" gas_wanted: \"0\" height: \"0\" info: \"\" logs: [] raw_log: \"\" timestamp: \"\" tx: null txhash: 71A6AC0E491FC057012C43C4D07C6FC9013E4685C63F1AEA048F2BC5ED5055E3 https://explorer.burnt.com/xion-testnet-2/staking/xionvaloper14ulxskyywvt3t4etskvlwx545ksfgcfehvr2cn","title":"Delegation"},{"location":"chains/xion/testnet/xion-testnet-2/mnemonic/","text":"slight chase twice size cause range chicken combine track slot robot toy grow marine device mimic pluck fall truth camera team soup hat start slight chase twice size cause range chicken combine track slot robot toy grow marine device mimic pluck fall truth camera team soup hat start slight chase twice size cause range chicken combine track slot robot toy grow marine device mimic pluck fall truth camera team soup hat start slight chase twice size cause range chicken combine track slot robot toy grow marine device mimic pluck fall truth camera team soup hat start","title":"Mnemonic"},{"location":"chains/xion/testnet/xion-testnet-2/validator-creation/","text":"gas estimate: 251406 auth_info: fee: amount: - amount: \"3500\" denom: uxion gas_limit: \"251406\" granter: \"\" payer: \"\" signer_infos: [] tip: null body: extension_options: [] memo: \"\" messages: - '@type': /cosmos.staking.v1beta1.MsgCreateValidator commission: max_change_rate: \"0.010000000000000000\" max_rate: \"0.200000000000000000\" rate: \"0.100000000000000000\" delegator_address: \"\" description: details: Cosmostation is an institutional-grade cryptocurrency infrastructure provider, managing billions of dollars across 70 protocols. Since 2018, we have served more than 500k users globally, providing products that enable protocols to scale identity: AE4C403A6E7AA1AC moniker: Cosmostation security_contact: node@stamper.network website: https://www.cosmostation.io min_self_delegation: \"1\" pubkey: '@type': /cosmos.crypto.ed25519.PubKey key: 42sEuIGIHYBxspVXq1rSZbGB1F07JHLwBI1mK9UNcf8= validator_address: xionvaloper14ulxskyywvt3t4etskvlwx545ksfgcfehvr2cn value: amount: \"900000\" denom: uxion non_critical_extension_options: [] timeout_height: \"0\" signatures: [] confirm transaction before signing and broadcasting [y/N]: y code: 0 codespace: \"\" data: \"\" events: [] gas_used: \"0\" gas_wanted: \"0\" height: \"0\" info: \"\" logs: [] raw_log: \"\" timestamp: \"\" tx: null txhash: 3482716EABD6DA5F114978193F14DCF5E8375BCF8EDF88F5FB5925E44786C0DF https://explorer.burnt.com/xion-testnet-2/tx/3482716EABD6DA5F114978193F14DCF5E8375BCF8EDF88F5FB5925E44786C0DF","title":"Validator creation"},{"location":"chains/xion/testnet/xion-testnet-2/validator-key/","text":"- address: xion14ulxskyywvt3t4etskvlwx545ksfgcfeu0gvsq name: validator pubkey: '{\"@type\":\"/cosmos.crypto.secp256k1.PubKey\",\"key\":\"AlD2SwinUvGcDbwA6GRpExZBxZstMXH/kndbjS+JGalS\"}' type: local","title":"Validator key"}]}